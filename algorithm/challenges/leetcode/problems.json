[
  {
    "questionFrontendId": "1",
    "titleSlug": "two-sum",
    "likes": 55489,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "3",
    "titleSlug": "longest-substring-without-repeating-characters",
    "likes": 38927,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "53",
    "titleSlug": "maximum-subarray",
    "likes": 33402,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "42",
    "titleSlug": "trapping-rain-water",
    "likes": 30805,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "2",
    "titleSlug": "add-two-numbers",
    "likes": 30230,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Math"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "121",
    "titleSlug": "best-time-to-buy-and-sell-stock",
    "likes": 30152,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "15",
    "titleSlug": "3sum",
    "likes": 30130,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "5",
    "titleSlug": "longest-palindromic-substring",
    "likes": 28781,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "11",
    "titleSlug": "container-with-most-water",
    "likes": 28357,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "4",
    "titleSlug": "median-of-two-sorted-arrays",
    "likes": 27678,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Divide and Conquer"
      }
    ]
  },
  {
    "questionFrontendId": "33",
    "titleSlug": "search-in-rotated-sorted-array",
    "likes": 25628,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "20",
    "titleSlug": "valid-parentheses",
    "likes": 23488,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      }
    ]
  },
  {
    "questionFrontendId": "287",
    "titleSlug": "find-the-duplicate-number",
    "likes": 22443,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "200",
    "titleSlug": "number-of-islands",
    "likes": 22064,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "238",
    "titleSlug": "product-of-array-except-self",
    "likes": 21999,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "56",
    "titleSlug": "merge-intervals",
    "likes": 21788,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "70",
    "titleSlug": "climbing-stairs",
    "likes": 21453,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Memoization"
      }
    ]
  },
  {
    "questionFrontendId": "21",
    "titleSlug": "merge-two-sorted-lists",
    "likes": 21280,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "206",
    "titleSlug": "reverse-linked-list",
    "likes": 21056,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "560",
    "titleSlug": "subarray-sum-equals-k",
    "likes": 21040,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "22",
    "titleSlug": "generate-parentheses",
    "likes": 20634,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "198",
    "titleSlug": "house-robber",
    "likes": 20608,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "300",
    "titleSlug": "longest-increasing-subsequence",
    "likes": 20485,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "146",
    "titleSlug": "lru-cache",
    "likes": 20240,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Linked List"
      },
      {
        "name": "Design"
      },
      {
        "name": "Doubly-Linked List"
      }
    ]
  },
  {
    "questionFrontendId": "34",
    "titleSlug": "find-first-and-last-position-of-element-in-sorted-array",
    "likes": 20068,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "128",
    "titleSlug": "longest-consecutive-sequence",
    "likes": 19423,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Union Find"
      }
    ]
  },
  {
    "questionFrontendId": "23",
    "titleSlug": "merge-k-sorted-lists",
    "likes": 19098,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Merge Sort"
      }
    ]
  },
  {
    "questionFrontendId": "55",
    "titleSlug": "jump-game",
    "likes": 18846,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "49",
    "titleSlug": "group-anagrams",
    "likes": 18768,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "46",
    "titleSlug": "permutations",
    "likes": 18666,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "169",
    "titleSlug": "majority-element",
    "likes": 18635,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "322",
    "titleSlug": "coin-change",
    "likes": 18542,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "19",
    "titleSlug": "remove-nth-node-from-end-of-list",
    "likes": 18461,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "39",
    "titleSlug": "combination-sum",
    "likes": 18393,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "152",
    "titleSlug": "maximum-product-subarray",
    "likes": 18115,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "17",
    "titleSlug": "letter-combinations-of-a-phone-number",
    "likes": 18096,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "31",
    "titleSlug": "next-permutation",
    "likes": 17898,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "239",
    "titleSlug": "sliding-window-maximum",
    "likes": 17822,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Monotonic Queue"
      }
    ]
  },
  {
    "questionFrontendId": "75",
    "titleSlug": "sort-colors",
    "likes": 17655,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "76",
    "titleSlug": "minimum-window-substring",
    "likes": 17514,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "189",
    "titleSlug": "rotate-array",
    "likes": 17412,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "48",
    "titleSlug": "rotate-image",
    "likes": 17127,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "14",
    "titleSlug": "longest-common-prefix",
    "likes": 17035,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "347",
    "titleSlug": "top-k-frequent-elements",
    "likes": 16911,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Bucket Sort"
      },
      {
        "name": "Counting"
      },
      {
        "name": "Quickselect"
      }
    ]
  },
  {
    "questionFrontendId": "139",
    "titleSlug": "word-break",
    "likes": 16872,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Trie"
      },
      {
        "name": "Memoization"
      }
    ]
  },
  {
    "questionFrontendId": "84",
    "titleSlug": "largest-rectangle-in-histogram",
    "likes": 16721,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "215",
    "titleSlug": "kth-largest-element-in-an-array",
    "likes": 16716,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Quickselect"
      }
    ]
  },
  {
    "questionFrontendId": "78",
    "titleSlug": "subsets",
    "likes": 16573,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "98",
    "titleSlug": "validate-binary-search-tree",
    "likes": 16484,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "62",
    "titleSlug": "unique-paths",
    "likes": 16309,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Combinatorics"
      }
    ]
  },
  {
    "questionFrontendId": "124",
    "titleSlug": "binary-tree-maximum-path-sum",
    "likes": 16284,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "283",
    "titleSlug": "move-zeroes",
    "likes": 16279,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "234",
    "titleSlug": "palindrome-linked-list",
    "likes": 16175,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "136",
    "titleSlug": "single-number",
    "likes": 16127,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "236",
    "titleSlug": "lowest-common-ancestor-of-a-binary-tree",
    "likes": 16085,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "207",
    "titleSlug": "course-schedule",
    "likes": 15839,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      }
    ]
  },
  {
    "questionFrontendId": "41",
    "titleSlug": "first-missing-positive",
    "likes": 15836,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "35",
    "titleSlug": "search-insert-position",
    "likes": 15721,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "74",
    "titleSlug": "search-a-2d-matrix",
    "likes": 15355,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "141",
    "titleSlug": "linked-list-cycle",
    "likes": 15158,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Linked List"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "79",
    "titleSlug": "word-search",
    "likes": 15040,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "101",
    "titleSlug": "symmetric-tree",
    "likes": 15018,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "102",
    "titleSlug": "binary-tree-level-order-traversal",
    "likes": 15001,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "160",
    "titleSlug": "intersection-of-two-linked-lists",
    "likes": 14652,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Linked List"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "105",
    "titleSlug": "construct-binary-tree-from-preorder-and-inorder-traversal",
    "likes": 14626,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "72",
    "titleSlug": "edit-distance",
    "likes": 14496,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "54",
    "titleSlug": "spiral-matrix",
    "likes": 14362,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "45",
    "titleSlug": "jump-game-ii",
    "likes": 14190,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "88",
    "titleSlug": "merge-sorted-array",
    "likes": 14184,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "73",
    "titleSlug": "set-matrix-zeroes",
    "likes": 14045,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "26",
    "titleSlug": "remove-duplicates-from-sorted-array",
    "likes": 13959,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "155",
    "titleSlug": "min-stack",
    "likes": 13753,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Stack"
      },
      {
        "name": "Design"
      }
    ]
  },
  {
    "questionFrontendId": "226",
    "titleSlug": "invert-binary-tree",
    "likes": 13721,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "13",
    "titleSlug": "roman-to-integer",
    "likes": 13627,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "138",
    "titleSlug": "copy-list-with-random-pointer",
    "likes": 13548,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Linked List"
      }
    ]
  },
  {
    "questionFrontendId": "543",
    "titleSlug": "diameter-of-binary-tree",
    "likes": 13502,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "25",
    "titleSlug": "reverse-nodes-in-k-group",
    "likes": 13317,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "142",
    "titleSlug": "linked-list-cycle-ii",
    "likes": 13296,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Linked List"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "122",
    "titleSlug": "best-time-to-buy-and-sell-stock-ii",
    "likes": 13222,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1143",
    "titleSlug": "longest-common-subsequence",
    "likes": 13218,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "94",
    "titleSlug": "binary-tree-inorder-traversal",
    "likes": 13211,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Stack"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "739",
    "titleSlug": "daily-temperatures",
    "likes": 12904,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "153",
    "titleSlug": "find-minimum-in-rotated-sorted-array",
    "likes": 12819,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "7",
    "titleSlug": "reverse-integer",
    "likes": 12654,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "118",
    "titleSlug": "pascals-triangle",
    "likes": 12539,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "104",
    "titleSlug": "maximum-depth-of-binary-tree",
    "likes": 12529,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "394",
    "titleSlug": "decode-string",
    "likes": 12411,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "994",
    "titleSlug": "rotting-oranges",
    "likes": 12398,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "209",
    "titleSlug": "minimum-size-subarray-sum",
    "likes": 12323,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "131",
    "titleSlug": "palindrome-partitioning",
    "likes": 12257,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "64",
    "titleSlug": "minimum-path-sum",
    "likes": 12205,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "9",
    "titleSlug": "palindrome-number",
    "likes": 12191,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "438",
    "titleSlug": "find-all-anagrams-in-a-string",
    "likes": 12168,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "32",
    "titleSlug": "longest-valid-parentheses",
    "likes": 12154,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Stack"
      }
    ]
  },
  {
    "questionFrontendId": "51",
    "titleSlug": "n-queens",
    "likes": 12030,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "416",
    "titleSlug": "partition-equal-subset-sum",
    "likes": 12009,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "114",
    "titleSlug": "flatten-binary-tree-to-linked-list",
    "likes": 11990,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "10",
    "titleSlug": "regular-expression-matching",
    "likes": 11889,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "242",
    "titleSlug": "valid-anagram",
    "likes": 11816,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "268",
    "titleSlug": "missing-number",
    "likes": 11795,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "127",
    "titleSlug": "word-ladder",
    "likes": 11775,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "24",
    "titleSlug": "swap-nodes-in-pairs",
    "likes": 11757,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "199",
    "titleSlug": "binary-tree-right-side-view",
    "likes": 11707,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "91",
    "titleSlug": "decode-ways",
    "likes": 11698,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "240",
    "titleSlug": "search-a-2d-matrix-ii",
    "likes": 11667,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "217",
    "titleSlug": "contains-duplicate",
    "likes": 11667,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "134",
    "titleSlug": "gas-station",
    "likes": 11657,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "295",
    "titleSlug": "find-median-from-data-stream",
    "likes": 11616,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "Design"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Data Stream"
      }
    ]
  },
  {
    "questionFrontendId": "162",
    "titleSlug": "find-peak-element",
    "likes": 11536,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "704",
    "titleSlug": "binary-search",
    "likes": 11517,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "167",
    "titleSlug": "two-sum-ii-input-array-is-sorted",
    "likes": 11451,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "92",
    "titleSlug": "reverse-linked-list-ii",
    "likes": 11361,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      }
    ]
  },
  {
    "questionFrontendId": "876",
    "titleSlug": "middle-of-the-linked-list",
    "likes": 11356,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "208",
    "titleSlug": "implement-trie-prefix-tree",
    "likes": 11301,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Design"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "148",
    "titleSlug": "sort-list",
    "likes": 11300,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Merge Sort"
      }
    ]
  },
  {
    "questionFrontendId": "100",
    "titleSlug": "same-tree",
    "likes": 11278,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "230",
    "titleSlug": "kth-smallest-element-in-a-bst",
    "likes": 11206,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "746",
    "titleSlug": "min-cost-climbing-stairs",
    "likes": 11195,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "567",
    "titleSlug": "permutation-in-string",
    "likes": 11096,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "279",
    "titleSlug": "perfect-squares",
    "likes": 11058,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "18",
    "titleSlug": "4sum",
    "likes": 11050,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "338",
    "titleSlug": "counting-bits",
    "likes": 10907,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "540",
    "titleSlug": "single-element-in-a-sorted-array",
    "likes": 10880,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "235",
    "titleSlug": "lowest-common-ancestor-of-a-binary-search-tree",
    "likes": 10852,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "143",
    "titleSlug": "reorder-list",
    "likes": 10826,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "108",
    "titleSlug": "convert-sorted-array-to-binary-search-tree",
    "likes": 10750,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "863",
    "titleSlug": "all-nodes-distance-k-in-binary-tree",
    "likes": 10744,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "437",
    "titleSlug": "path-sum-iii",
    "likes": 10722,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "494",
    "titleSlug": "target-sum",
    "likes": 10657,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "647",
    "titleSlug": "palindromic-substrings",
    "likes": 10611,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "103",
    "titleSlug": "binary-tree-zigzag-level-order-traversal",
    "likes": 10581,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "210",
    "titleSlug": "course-schedule-ii",
    "likes": 10517,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      }
    ]
  },
  {
    "questionFrontendId": "110",
    "titleSlug": "balanced-binary-tree",
    "likes": 10443,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "36",
    "titleSlug": "valid-sudoku",
    "likes": 10396,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "16",
    "titleSlug": "3sum-closest",
    "likes": 10274,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "621",
    "titleSlug": "task-scheduler",
    "likes": 10226,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "424",
    "titleSlug": "longest-repeating-character-replacement",
    "likes": 10213,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "96",
    "titleSlug": "unique-binary-search-trees",
    "likes": 10207,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "40",
    "titleSlug": "combination-sum-ii",
    "likes": 10206,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "763",
    "titleSlug": "partition-labels",
    "likes": 10174,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "57",
    "titleSlug": "insert-interval",
    "likes": 10120,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "875",
    "titleSlug": "koko-eating-bananas",
    "likes": 10091,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "202",
    "titleSlug": "happy-number",
    "likes": 10077,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "297",
    "titleSlug": "serialize-and-deserialize-binary-tree",
    "likes": 9926,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Design"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "221",
    "titleSlug": "maximal-square",
    "likes": 9904,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "695",
    "titleSlug": "max-area-of-island",
    "likes": 9796,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "378",
    "titleSlug": "kth-smallest-element-in-a-sorted-matrix",
    "likes": 9750,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "85",
    "titleSlug": "maximal-rectangle",
    "likes": 9739,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "328",
    "titleSlug": "odd-even-linked-list",
    "likes": 9700,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      }
    ]
  },
  {
    "questionFrontendId": "787",
    "titleSlug": "cheapest-flights-within-k-stops",
    "likes": 9665,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "213",
    "titleSlug": "house-robber-ii",
    "likes": 9611,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "442",
    "titleSlug": "find-all-duplicates-in-an-array",
    "likes": 9570,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "116",
    "titleSlug": "populating-next-right-pointers-in-each-node",
    "likes": 9528,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "410",
    "titleSlug": "split-array-largest-sum",
    "likes": 9527,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "112",
    "titleSlug": "path-sum",
    "likes": 9501,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "90",
    "titleSlug": "subsets-ii",
    "likes": 9497,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "123",
    "titleSlug": "best-time-to-buy-and-sell-stock-iii",
    "likes": 9475,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "547",
    "titleSlug": "number-of-provinces",
    "likes": 9450,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "229",
    "titleSlug": "majority-element-ii",
    "likes": 9441,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "50",
    "titleSlug": "powx-n",
    "likes": 9404,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "61",
    "titleSlug": "rotate-list",
    "likes": 9391,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "392",
    "titleSlug": "is-subsequence",
    "likes": 9369,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "516",
    "titleSlug": "longest-palindromic-subsequence",
    "likes": 9360,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "120",
    "titleSlug": "triangle",
    "likes": 9330,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "37",
    "titleSlug": "sudoku-solver",
    "likes": 9282,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "133",
    "titleSlug": "clone-graph",
    "likes": 9265,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "448",
    "titleSlug": "find-all-numbers-disappeared-in-an-array",
    "likes": 9250,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "309",
    "titleSlug": "best-time-to-buy-and-sell-stock-with-cooldown",
    "likes": 9239,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "542",
    "titleSlug": "01-matrix",
    "likes": 9231,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "67",
    "titleSlug": "add-binary",
    "likes": 9230,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1011",
    "titleSlug": "capacity-to-ship-packages-within-d-days",
    "likes": 9218,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "212",
    "titleSlug": "word-search-ii",
    "likes": 9218,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Trie"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "977",
    "titleSlug": "squares-of-a-sorted-array",
    "likes": 9170,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "518",
    "titleSlug": "coin-change-ii",
    "likes": 9149,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "380",
    "titleSlug": "insert-delete-getrandom-o1",
    "likes": 9047,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Design"
      },
      {
        "name": "Randomized"
      }
    ]
  },
  {
    "questionFrontendId": "399",
    "titleSlug": "evaluate-division",
    "likes": 9046,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "66",
    "titleSlug": "plus-one",
    "likes": 9022,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "125",
    "titleSlug": "valid-palindrome",
    "likes": 9001,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "387",
    "titleSlug": "first-unique-character-in-a-string",
    "likes": 8864,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "450",
    "titleSlug": "delete-node-in-a-bst",
    "likes": 8847,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "329",
    "titleSlug": "longest-increasing-path-in-a-matrix",
    "likes": 8829,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      },
      {
        "name": "Memoization"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "312",
    "titleSlug": "burst-balloons",
    "likes": 8807,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "315",
    "titleSlug": "count-of-smaller-numbers-after-self",
    "likes": 8718,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Merge Sort"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "617",
    "titleSlug": "merge-two-binary-trees",
    "likes": 8686,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "82",
    "titleSlug": "remove-duplicates-from-sorted-list-ii",
    "likes": 8654,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "63",
    "titleSlug": "unique-paths-ii",
    "likes": 8572,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "402",
    "titleSlug": "remove-k-digits",
    "likes": 8532,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "662",
    "titleSlug": "maximum-width-of-binary-tree",
    "likes": 8522,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "316",
    "titleSlug": "remove-duplicate-letters",
    "likes": 8509,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "83",
    "titleSlug": "remove-duplicates-from-sorted-list",
    "likes": 8502,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Linked List"
      }
    ]
  },
  {
    "questionFrontendId": "222",
    "titleSlug": "count-complete-tree-nodes",
    "likes": 8458,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Binary Search"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "337",
    "titleSlug": "house-robber-iii",
    "likes": 8404,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "47",
    "titleSlug": "permutations-ii",
    "likes": 8398,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "173",
    "titleSlug": "binary-search-tree-iterator",
    "likes": 8388,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Stack"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Design"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      },
      {
        "name": "Iterator"
      }
    ]
  },
  {
    "questionFrontendId": "130",
    "titleSlug": "surrounded-regions",
    "likes": 8374,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "767",
    "titleSlug": "reorganize-string",
    "likes": 8355,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "81",
    "titleSlug": "search-in-rotated-sorted-array-ii",
    "likes": 8274,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "278",
    "titleSlug": "first-bad-version",
    "likes": 8273,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Binary Search"
      },
      {
        "name": "Interactive"
      }
    ]
  },
  {
    "questionFrontendId": "973",
    "titleSlug": "k-closest-points-to-origin",
    "likes": 8254,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Geometry"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Quickselect"
      }
    ]
  },
  {
    "questionFrontendId": "344",
    "titleSlug": "reverse-string",
    "likes": 8254,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1004",
    "titleSlug": "max-consecutive-ones-iii",
    "likes": 8226,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "205",
    "titleSlug": "isomorphic-strings",
    "likes": 8221,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "733",
    "titleSlug": "flood-fill",
    "likes": 8188,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "724",
    "titleSlug": "find-pivot-index",
    "likes": 8166,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "203",
    "titleSlug": "remove-linked-list-elements",
    "likes": 8153,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "451",
    "titleSlug": "sort-characters-by-frequency",
    "likes": 8093,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Bucket Sort"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "77",
    "titleSlug": "combinations",
    "likes": 8086,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "44",
    "titleSlug": "wildcard-matching",
    "likes": 8084,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "151",
    "titleSlug": "reverse-words-in-a-string",
    "likes": 8082,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "97",
    "titleSlug": "interleaving-string",
    "likes": 8078,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "680",
    "titleSlug": "valid-palindrome-ii",
    "likes": 8071,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "572",
    "titleSlug": "subtree-of-another-tree",
    "likes": 8056,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "String Matching"
      },
      {
        "name": "Binary Tree"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "785",
    "titleSlug": "is-graph-bipartite",
    "likes": 8044,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "658",
    "titleSlug": "find-k-closest-elements",
    "likes": 7986,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "509",
    "titleSlug": "fibonacci-number",
    "likes": 7971,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Recursion"
      },
      {
        "name": "Memoization"
      }
    ]
  },
  {
    "questionFrontendId": "435",
    "titleSlug": "non-overlapping-intervals",
    "likes": 7936,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "69",
    "titleSlug": "sqrtx",
    "likes": 7935,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "334",
    "titleSlug": "increasing-triplet-subsequence",
    "likes": 7901,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "179",
    "titleSlug": "largest-number",
    "likes": 7880,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "907",
    "titleSlug": "sum-of-subarray-minimums",
    "likes": 7872,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "106",
    "titleSlug": "construct-binary-tree-from-inorder-and-postorder-traversal",
    "likes": 7862,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "144",
    "titleSlug": "binary-tree-preorder-traversal",
    "likes": 7833,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Stack"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "113",
    "titleSlug": "path-sum-ii",
    "likes": 7810,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Backtracking"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "525",
    "titleSlug": "contiguous-array",
    "likes": 7791,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "204",
    "titleSlug": "count-primes",
    "likes": 7779,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Enumeration"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "503",
    "titleSlug": "next-greater-element-ii",
    "likes": 7755,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "99",
    "titleSlug": "recover-binary-search-tree",
    "likes": 7753,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "983",
    "titleSlug": "minimum-cost-for-tickets",
    "likes": 7742,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1480",
    "titleSlug": "running-sum-of-1d-array",
    "likes": 7691,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "137",
    "titleSlug": "single-number-ii",
    "likes": 7688,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "496",
    "titleSlug": "next-greater-element-i",
    "likes": 7683,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "581",
    "titleSlug": "shortest-unsorted-continuous-subarray",
    "likes": 7678,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "735",
    "titleSlug": "asteroid-collision",
    "likes": 7646,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "135",
    "titleSlug": "candy",
    "likes": 7580,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "692",
    "titleSlug": "top-k-frequent-words",
    "likes": 7560,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Trie"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Bucket Sort"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "129",
    "titleSlug": "sum-root-to-leaf-numbers",
    "likes": 7517,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "232",
    "titleSlug": "implement-queue-using-stacks",
    "likes": 7467,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Stack"
      },
      {
        "name": "Design"
      },
      {
        "name": "Queue"
      }
    ]
  },
  {
    "questionFrontendId": "95",
    "titleSlug": "unique-binary-search-trees-ii",
    "likes": 7464,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "211",
    "titleSlug": "design-add-and-search-words-data-structure",
    "likes": 7458,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Design"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "150",
    "titleSlug": "evaluate-reverse-polish-notation",
    "likes": 7452,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Stack"
      }
    ]
  },
  {
    "questionFrontendId": "844",
    "titleSlug": "backspace-string-compare",
    "likes": 7442,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "310",
    "titleSlug": "minimum-height-trees",
    "likes": 7436,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      }
    ]
  },
  {
    "questionFrontendId": "740",
    "titleSlug": "delete-and-earn",
    "likes": 7407,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "6",
    "titleSlug": "zigzag-conversion",
    "likes": 7364,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "109",
    "titleSlug": "convert-sorted-list-to-binary-search-tree",
    "likes": 7351,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "987",
    "titleSlug": "vertical-order-traversal-of-a-binary-tree",
    "likes": 7340,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "452",
    "titleSlug": "minimum-number-of-arrows-to-burst-balloons",
    "likes": 7338,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "852",
    "titleSlug": "peak-index-in-a-mountain-array",
    "likes": 7318,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "188",
    "titleSlug": "best-time-to-buy-and-sell-stock-iv",
    "likes": 7304,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "377",
    "titleSlug": "combination-sum-iv",
    "likes": 7281,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "743",
    "titleSlug": "network-delay-time",
    "likes": 7247,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "86",
    "titleSlug": "partition-list",
    "likes": 7218,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "417",
    "titleSlug": "pacific-atlantic-water-flow",
    "likes": 7194,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "111",
    "titleSlug": "minimum-depth-of-binary-tree",
    "likes": 7174,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1048",
    "titleSlug": "longest-string-chain",
    "likes": 7170,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "456",
    "titleSlug": "132-pattern",
    "likes": 7102,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "290",
    "titleSlug": "word-pattern",
    "likes": 7102,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "797",
    "titleSlug": "all-paths-from-source-to-target",
    "likes": 7089,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Backtracking"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "350",
    "titleSlug": "intersection-of-two-arrays-ii",
    "likes": 7089,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "698",
    "titleSlug": "partition-to-k-equal-sum-subsets",
    "likes": 7030,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Memoization"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "714",
    "titleSlug": "best-time-to-buy-and-sell-stock-with-transaction-fee",
    "likes": 7016,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "406",
    "titleSlug": "queue-reconstruction-by-height",
    "likes": 7013,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "43",
    "titleSlug": "multiply-strings",
    "likes": 6915,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "253",
    "titleSlug": "meeting-rooms-ii",
    "likes": 6875,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "12",
    "titleSlug": "integer-to-roman",
    "likes": 6873,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "938",
    "titleSlug": "range-sum-of-bst",
    "likes": 6864,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "145",
    "titleSlug": "binary-tree-postorder-traversal",
    "likes": 6758,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Stack"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "718",
    "titleSlug": "maximum-length-of-repeated-subarray",
    "likes": 6714,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "1235",
    "titleSlug": "maximum-profit-in-job-scheduling",
    "likes": 6692,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "231",
    "titleSlug": "power-of-two",
    "likes": 6687,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "140",
    "titleSlug": "word-break-ii",
    "likes": 6679,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Trie"
      },
      {
        "name": "Memoization"
      }
    ]
  },
  {
    "questionFrontendId": "673",
    "titleSlug": "number-of-longest-increasing-subsequence",
    "likes": 6641,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      }
    ]
  },
  {
    "questionFrontendId": "653",
    "titleSlug": "two-sum-iv-input-is-a-bst",
    "likes": 6616,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "80",
    "titleSlug": "remove-duplicates-from-sorted-array-ii",
    "likes": 6601,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "60",
    "titleSlug": "permutation-sequence",
    "likes": 6535,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "997",
    "titleSlug": "find-the-town-judge",
    "likes": 6534,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "721",
    "titleSlug": "accounts-merge",
    "likes": 6529,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "974",
    "titleSlug": "subarray-sums-divisible-by-k",
    "likes": 6517,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "115",
    "titleSlug": "distinct-subsequences",
    "likes": 6494,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "918",
    "titleSlug": "maximum-sum-circular-subarray",
    "likes": 6480,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Monotonic Queue"
      }
    ]
  },
  {
    "questionFrontendId": "1047",
    "titleSlug": "remove-all-adjacent-duplicates-in-string",
    "likes": 6473,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      }
    ]
  },
  {
    "questionFrontendId": "257",
    "titleSlug": "binary-tree-paths",
    "likes": 6442,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "191",
    "titleSlug": "number-of-1-bits",
    "likes": 6396,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "1539",
    "titleSlug": "kth-missing-positive-number",
    "likes": 6379,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "1091",
    "titleSlug": "shortest-path-in-binary-matrix",
    "likes": 6340,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "605",
    "titleSlug": "can-place-flowers",
    "likes": 6330,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "459",
    "titleSlug": "repeated-substring-pattern",
    "likes": 6320,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "String Matching"
      }
    ]
  },
  {
    "questionFrontendId": "59",
    "titleSlug": "spiral-matrix-ii",
    "likes": 6247,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "289",
    "titleSlug": "game-of-life",
    "likes": 6246,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "463",
    "titleSlug": "island-perimeter",
    "likes": 6215,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "224",
    "titleSlug": "basic-calculator",
    "likes": 6168,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "901",
    "titleSlug": "online-stock-span",
    "likes": 6149,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Stack"
      },
      {
        "name": "Design"
      },
      {
        "name": "Monotonic Stack"
      },
      {
        "name": "Data Stream"
      }
    ]
  },
  {
    "questionFrontendId": "931",
    "titleSlug": "minimum-falling-path-sum",
    "likes": 6147,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1249",
    "titleSlug": "minimum-remove-to-make-valid-parentheses",
    "likes": 6146,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      }
    ]
  },
  {
    "questionFrontendId": "373",
    "titleSlug": "find-k-pairs-with-smallest-sums",
    "likes": 6091,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1192",
    "titleSlug": "critical-connections-in-a-network",
    "likes": 6077,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Biconnected Component"
      }
    ]
  },
  {
    "questionFrontendId": "395",
    "titleSlug": "longest-substring-with-at-least-k-repeating-characters",
    "likes": 6077,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "227",
    "titleSlug": "basic-calculator-ii",
    "likes": 6061,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Stack"
      }
    ]
  },
  {
    "questionFrontendId": "684",
    "titleSlug": "redundant-connection",
    "likes": 6043,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "713",
    "titleSlug": "subarray-product-less-than-k",
    "likes": 6015,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "1008",
    "titleSlug": "construct-binary-search-tree-from-preorder-traversal",
    "likes": 5991,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Monotonic Stack"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "841",
    "titleSlug": "keys-and-rooms",
    "likes": 5969,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "219",
    "titleSlug": "contains-duplicate-ii",
    "likes": 5964,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "493",
    "titleSlug": "reverse-pairs",
    "likes": 5940,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Merge Sort"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "1423",
    "titleSlug": "maximum-points-you-can-obtain-from-cards",
    "likes": 5935,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "349",
    "titleSlug": "intersection-of-two-arrays",
    "likes": 5911,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "225",
    "titleSlug": "implement-stack-using-queues",
    "likes": 5907,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Stack"
      },
      {
        "name": "Design"
      },
      {
        "name": "Queue"
      }
    ]
  },
  {
    "questionFrontendId": "1046",
    "titleSlug": "last-stone-weight",
    "likes": 5894,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "126",
    "titleSlug": "word-ladder-ii",
    "likes": 5893,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "912",
    "titleSlug": "sort-an-array",
    "likes": 5881,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Merge Sort"
      },
      {
        "name": "Bucket Sort"
      },
      {
        "name": "Radix Sort"
      },
      {
        "name": "Counting Sort"
      }
    ]
  },
  {
    "questionFrontendId": "264",
    "titleSlug": "ugly-number-ii",
    "likes": 5878,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "354",
    "titleSlug": "russian-doll-envelopes",
    "likes": 5875,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "946",
    "titleSlug": "validate-stack-sequences",
    "likes": 5852,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "557",
    "titleSlug": "reverse-words-in-a-string-iii",
    "likes": 5839,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "700",
    "titleSlug": "search-in-a-binary-search-tree",
    "likes": 5827,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "216",
    "titleSlug": "combination-sum-iii",
    "likes": 5824,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "218",
    "titleSlug": "the-skyline-problem",
    "likes": 5821,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Line Sweep"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "445",
    "titleSlug": "add-two-numbers-ii",
    "likes": 5816,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Math"
      },
      {
        "name": "Stack"
      }
    ]
  },
  {
    "questionFrontendId": "881",
    "titleSlug": "boats-to-save-people",
    "likes": 5809,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "368",
    "titleSlug": "largest-divisible-subset",
    "likes": 5800,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "301",
    "titleSlug": "remove-invalid-parentheses",
    "likes": 5788,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "332",
    "titleSlug": "reconstruct-itinerary",
    "likes": 5786,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Eulerian Circuit"
      }
    ]
  },
  {
    "questionFrontendId": "669",
    "titleSlug": "trim-a-binary-search-tree",
    "likes": 5769,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "117",
    "titleSlug": "populating-next-right-pointers-in-each-node-ii",
    "likes": 5761,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "486",
    "titleSlug": "predict-the-winner",
    "likes": 5760,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Recursion"
      },
      {
        "name": "Game Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1642",
    "titleSlug": "furthest-building-you-can-reach",
    "likes": 5756,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "652",
    "titleSlug": "find-duplicate-subtrees",
    "likes": 5739,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "174",
    "titleSlug": "dungeon-game",
    "likes": 5697,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1209",
    "titleSlug": "remove-all-adjacent-duplicates-in-string-ii",
    "likes": 5696,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      }
    ]
  },
  {
    "questionFrontendId": "701",
    "titleSlug": "insert-into-a-binary-search-tree",
    "likes": 5695,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1631",
    "titleSlug": "path-with-minimum-effort",
    "likes": 5688,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1448",
    "titleSlug": "count-good-nodes-in-binary-tree",
    "likes": 5679,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "665",
    "titleSlug": "non-decreasing-array",
    "likes": 5665,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "583",
    "titleSlug": "delete-operation-for-two-strings",
    "likes": 5655,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1470",
    "titleSlug": "shuffle-the-array",
    "likes": 5640,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "260",
    "titleSlug": "single-number-iii",
    "likes": 5623,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "802",
    "titleSlug": "find-eventual-safe-states",
    "likes": 5557,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      }
    ]
  },
  {
    "questionFrontendId": "485",
    "titleSlug": "max-consecutive-ones",
    "likes": 5555,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "460",
    "titleSlug": "lfu-cache",
    "likes": 5542,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Linked List"
      },
      {
        "name": "Design"
      },
      {
        "name": "Doubly-Linked List"
      }
    ]
  },
  {
    "questionFrontendId": "28",
    "titleSlug": "find-the-index-of-the-first-occurrence-in-a-string",
    "likes": 5523,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "String Matching"
      }
    ]
  },
  {
    "questionFrontendId": "403",
    "titleSlug": "frog-jump",
    "likes": 5492,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "168",
    "titleSlug": "excel-sheet-column-title",
    "likes": 5477,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "986",
    "titleSlug": "interval-list-intersections",
    "likes": 5471,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "523",
    "titleSlug": "continuous-subarray-sum",
    "likes": 5451,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "792",
    "titleSlug": "number-of-matching-subsequences",
    "likes": 5436,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Trie"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "71",
    "titleSlug": "simplify-path",
    "likes": 5393,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      }
    ]
  },
  {
    "questionFrontendId": "1658",
    "titleSlug": "minimum-operations-to-reduce-x-to-zero",
    "likes": 5391,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "421",
    "titleSlug": "maximum-xor-of-two-numbers-in-an-array",
    "likes": 5377,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "856",
    "titleSlug": "score-of-parentheses",
    "likes": 5366,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      }
    ]
  },
  {
    "questionFrontendId": "474",
    "titleSlug": "ones-and-zeroes",
    "likes": 5355,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1365",
    "titleSlug": "how-many-numbers-are-smaller-than-the-current-number",
    "likes": 5353,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "132",
    "titleSlug": "palindrome-partitioning-ii",
    "likes": 5342,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "703",
    "titleSlug": "kth-largest-element-in-a-stream",
    "likes": 5340,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Design"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Binary Tree"
      },
      {
        "name": "Data Stream"
      }
    ]
  },
  {
    "questionFrontendId": "905",
    "titleSlug": "sort-array-by-parity",
    "likes": 5298,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "413",
    "titleSlug": "arithmetic-slices",
    "likes": 5287,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "934",
    "titleSlug": "shortest-bridge",
    "likes": 5281,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1512",
    "titleSlug": "number-of-good-pairs",
    "likes": 5279,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "241",
    "titleSlug": "different-ways-to-add-parentheses",
    "likes": 5276,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Recursion"
      },
      {
        "name": "Memoization"
      }
    ]
  },
  {
    "questionFrontendId": "409",
    "titleSlug": "longest-palindrome",
    "likes": 5268,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1721",
    "titleSlug": "swapping-nodes-in-a-linked-list",
    "likes": 5247,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "947",
    "titleSlug": "most-stones-removed-with-same-row-or-column",
    "likes": 5243,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "968",
    "titleSlug": "binary-tree-cameras",
    "likes": 5227,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "637",
    "titleSlug": "average-of-levels-in-binary-tree",
    "likes": 5188,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "654",
    "titleSlug": "maximum-binary-tree",
    "likes": 5136,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Monotonic Stack"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "678",
    "titleSlug": "valid-parenthesis-string",
    "likes": 5128,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "538",
    "titleSlug": "convert-bst-to-greater-tree",
    "likes": 5128,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "93",
    "titleSlug": "restore-ip-addresses",
    "likes": 5114,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "980",
    "titleSlug": "unique-paths-iii",
    "likes": 5054,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "376",
    "titleSlug": "wiggle-subsequence",
    "likes": 5047,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "706",
    "titleSlug": "design-hashmap",
    "likes": 5045,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Linked List"
      },
      {
        "name": "Design"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "343",
    "titleSlug": "integer-break",
    "likes": 5042,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "992",
    "titleSlug": "subarrays-with-k-different-integers",
    "likes": 5021,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "771",
    "titleSlug": "jewels-and-stones",
    "likes": 5017,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "190",
    "titleSlug": "reverse-bits",
    "likes": 5004,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "894",
    "titleSlug": "all-possible-full-binary-trees",
    "likes": 4987,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Recursion"
      },
      {
        "name": "Memoization"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "404",
    "titleSlug": "sum-of-left-leaves",
    "likes": 4979,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1155",
    "titleSlug": "number-of-dice-rolls-with-target-sum",
    "likes": 4975,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "29",
    "titleSlug": "divide-two-integers",
    "likes": 4965,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "834",
    "titleSlug": "sum-of-distances-in-tree",
    "likes": 4964,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "415",
    "titleSlug": "add-strings",
    "likes": 4950,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1207",
    "titleSlug": "unique-number-of-occurrences",
    "likes": 4941,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "430",
    "titleSlug": "flatten-a-multilevel-doubly-linked-list",
    "likes": 4940,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Doubly-Linked List"
      }
    ]
  },
  {
    "questionFrontendId": "1584",
    "titleSlug": "min-cost-to-connect-all-points",
    "likes": 4919,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Minimum Spanning Tree"
      }
    ]
  },
  {
    "questionFrontendId": "389",
    "titleSlug": "find-the-difference",
    "likes": 4914,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "979",
    "titleSlug": "distribute-coins-in-binary-tree",
    "likes": 4907,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1312",
    "titleSlug": "minimum-insertion-steps-to-make-a-string-palindrome",
    "likes": 4901,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "304",
    "titleSlug": "range-sum-query-2d-immutable",
    "likes": 4894,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Design"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1319",
    "titleSlug": "number-of-operations-to-make-network-connected",
    "likes": 4890,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "1071",
    "titleSlug": "greatest-common-divisor-of-strings",
    "likes": 4886,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1351",
    "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
    "likes": 4885,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1647",
    "titleSlug": "minimum-deletions-to-make-character-frequencies-unique",
    "likes": 4883,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1026",
    "titleSlug": "maximum-difference-between-node-and-ancestor",
    "likes": 4880,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "454",
    "titleSlug": "4sum-ii",
    "likes": 4870,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "383",
    "titleSlug": "ransom-note",
    "likes": 4852,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "341",
    "titleSlug": "flatten-nested-list-iterator",
    "likes": 4845,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Stack"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Design"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Iterator"
      }
    ]
  },
  {
    "questionFrontendId": "443",
    "titleSlug": "string-compression",
    "likes": 4836,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "953",
    "titleSlug": "verifying-an-alien-dictionary",
    "likes": 4834,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "107",
    "titleSlug": "binary-tree-level-order-traversal-ii",
    "likes": 4798,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1277",
    "titleSlug": "count-square-submatrices-with-all-ones",
    "likes": 4786,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "119",
    "titleSlug": "pascals-triangle-ii",
    "likes": 4761,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "258",
    "titleSlug": "add-digits",
    "likes": 4743,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Simulation"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1092",
    "titleSlug": "shortest-common-supersequence",
    "likes": 4711,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "171",
    "titleSlug": "excel-sheet-column-number",
    "likes": 4693,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "981",
    "titleSlug": "time-based-key-value-store",
    "likes": 4678,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Design"
      }
    ]
  },
  {
    "questionFrontendId": "307",
    "titleSlug": "range-sum-query-mutable",
    "likes": 4668,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Design"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1029",
    "titleSlug": "two-city-scheduling",
    "likes": 4651,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1302",
    "titleSlug": "deepest-leaves-sum",
    "likes": 4641,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "645",
    "titleSlug": "set-mismatch",
    "likes": 4629,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "895",
    "titleSlug": "maximum-frequency-stack",
    "likes": 4622,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Design"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "886",
    "titleSlug": "possible-bipartition",
    "likes": 4615,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "1268",
    "titleSlug": "search-suggestions-system",
    "likes": 4608,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Trie"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "154",
    "titleSlug": "find-minimum-in-rotated-sorted-array-ii",
    "likes": 4602,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "58",
    "titleSlug": "length-of-last-word",
    "likes": 4602,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1027",
    "titleSlug": "longest-arithmetic-subsequence",
    "likes": 4599,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "784",
    "titleSlug": "letter-case-permutation",
    "likes": 4595,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "871",
    "titleSlug": "minimum-number-of-refueling-stops",
    "likes": 4586,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1043",
    "titleSlug": "partition-array-for-maximum-sum",
    "likes": 4561,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "904",
    "titleSlug": "fruit-into-baskets",
    "likes": 4508,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "646",
    "titleSlug": "maximum-length-of-pair-chain",
    "likes": 4503,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1254",
    "titleSlug": "number-of-closed-islands",
    "likes": 4468,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "814",
    "titleSlug": "binary-tree-pruning",
    "likes": 4465,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1293",
    "titleSlug": "shortest-path-in-a-grid-with-obstacles-elimination",
    "likes": 4448,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "336",
    "titleSlug": "palindrome-pairs",
    "likes": 4424,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "1094",
    "titleSlug": "car-pooling",
    "likes": 4387,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Simulation"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "345",
    "titleSlug": "reverse-vowels-of-a-string",
    "likes": 4387,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1838",
    "titleSlug": "frequency-of-the-most-frequent-element",
    "likes": 4383,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1239",
    "titleSlug": "maximum-length-of-a-concatenated-string-with-unique-characters",
    "likes": 4381,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "237",
    "titleSlug": "delete-node-in-a-linked-list",
    "likes": 4379,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      }
    ]
  },
  {
    "questionFrontendId": "659",
    "titleSlug": "split-array-into-consecutive-subsequences",
    "likes": 4375,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "926",
    "titleSlug": "flip-string-to-monotone-increasing",
    "likes": 4374,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "269",
    "titleSlug": "alien-dictionary",
    "likes": 4371,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      }
    ]
  },
  {
    "questionFrontendId": "744",
    "titleSlug": "find-smallest-letter-greater-than-target",
    "likes": 4338,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "1431",
    "titleSlug": "kids-with-the-greatest-number-of-candies",
    "likes": 4293,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "530",
    "titleSlug": "minimum-absolute-difference-in-bst",
    "likes": 4289,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "8",
    "titleSlug": "string-to-integer-atoi",
    "likes": 4276,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "897",
    "titleSlug": "increasing-order-search-tree",
    "likes": 4263,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Stack"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "847",
    "titleSlug": "shortest-path-visiting-all-nodes",
    "likes": 4250,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "1672",
    "titleSlug": "richest-customer-wealth",
    "likes": 4226,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1130",
    "titleSlug": "minimum-cost-tree-from-leaf-values",
    "likes": 4221,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "958",
    "titleSlug": "check-completeness-of-a-binary-tree",
    "likes": 4200,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "741",
    "titleSlug": "cherry-pickup",
    "likes": 4198,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "687",
    "titleSlug": "longest-univalue-path",
    "likes": 4192,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "862",
    "titleSlug": "shortest-subarray-with-sum-at-least-k",
    "likes": 4182,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Prefix Sum"
      },
      {
        "name": "Monotonic Queue"
      }
    ]
  },
  {
    "questionFrontendId": "815",
    "titleSlug": "bus-routes",
    "likes": 4178,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "1010",
    "titleSlug": "pairs-of-songs-with-total-durations-divisible-by-60",
    "likes": 4159,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "729",
    "titleSlug": "my-calendar-i",
    "likes": 4156,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Binary Search"
      },
      {
        "name": "Design"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "367",
    "titleSlug": "valid-perfect-square",
    "likes": 4140,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "628",
    "titleSlug": "maximum-product-of-three-numbers",
    "likes": 4132,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1547",
    "titleSlug": "minimum-cost-to-cut-a-stick",
    "likes": 4117,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1337",
    "titleSlug": "the-k-weakest-rows-in-a-matrix",
    "likes": 4114,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1162",
    "titleSlug": "as-far-from-land-as-possible",
    "likes": 4095,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1306",
    "titleSlug": "jump-game-iii",
    "likes": 4093,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "1290",
    "titleSlug": "convert-binary-number-in-a-linked-list-to-integer",
    "likes": 4092,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "149",
    "titleSlug": "max-points-on-a-line",
    "likes": 4076,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      }
    ]
  },
  {
    "questionFrontendId": "371",
    "titleSlug": "sum-of-two-integers",
    "likes": 4065,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "872",
    "titleSlug": "leaf-similar-trees",
    "likes": 4046,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1463",
    "titleSlug": "cherry-pickup-ii",
    "likes": 4044,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1137",
    "titleSlug": "n-th-tribonacci-number",
    "likes": 4031,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Memoization"
      }
    ]
  },
  {
    "questionFrontendId": "2095",
    "titleSlug": "delete-the-middle-node-of-a-linked-list",
    "likes": 4010,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "1376",
    "titleSlug": "time-needed-to-inform-all-employees",
    "likes": 4007,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "1466",
    "titleSlug": "reorder-routes-to-make-all-paths-lead-to-the-city-zero",
    "likes": 3992,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "921",
    "titleSlug": "minimum-add-to-make-parentheses-valid",
    "likes": 3970,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "993",
    "titleSlug": "cousins-in-binary-tree",
    "likes": 3932,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "712",
    "titleSlug": "minimum-ascii-delete-sum-for-two-strings",
    "likes": 3929,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "201",
    "titleSlug": "bitwise-and-of-numbers-range",
    "likes": 3927,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "696",
    "titleSlug": "count-binary-substrings",
    "likes": 3921,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1020",
    "titleSlug": "number-of-enclaves",
    "likes": 3899,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "752",
    "titleSlug": "open-the-lock",
    "likes": 3892,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "725",
    "titleSlug": "split-linked-list-in-parts",
    "likes": 3877,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      }
    ]
  },
  {
    "questionFrontendId": "890",
    "titleSlug": "find-and-replace-pattern",
    "likes": 3876,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1342",
    "titleSlug": "number-of-steps-to-reduce-a-number-to-zero",
    "likes": 3875,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "228",
    "titleSlug": "summary-ranges",
    "likes": 3856,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "342",
    "titleSlug": "power-of-four",
    "likes": 3855,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "576",
    "titleSlug": "out-of-boundary-paths",
    "likes": 3849,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "501",
    "titleSlug": "find-mode-in-binary-search-tree",
    "likes": 3836,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1110",
    "titleSlug": "delete-nodes-and-return-forest",
    "likes": 3828,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "38",
    "titleSlug": "count-and-say",
    "likes": 3828,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1498",
    "titleSlug": "number-of-subsequences-that-satisfy-the-given-sum-condition",
    "likes": 3820,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1641",
    "titleSlug": "count-sorted-vowel-strings",
    "likes": 3810,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Combinatorics"
      }
    ]
  },
  {
    "questionFrontendId": "1493",
    "titleSlug": "longest-subarray-of-1s-after-deleting-one-element",
    "likes": 3807,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "472",
    "titleSlug": "concatenated-words",
    "likes": 3805,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "688",
    "titleSlug": "knight-probability-in-chessboard",
    "likes": 3804,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "532",
    "titleSlug": "k-diff-pairs-in-an-array",
    "likes": 3800,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "461",
    "titleSlug": "hamming-distance",
    "likes": 3795,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "441",
    "titleSlug": "arranging-coins",
    "likes": 3794,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "827",
    "titleSlug": "making-a-large-island",
    "likes": 3780,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "52",
    "titleSlug": "n-queens-ii",
    "likes": 3775,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "1578",
    "titleSlug": "minimum-time-to-make-rope-colorful",
    "likes": 3773,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "473",
    "titleSlug": "matchsticks-to-square",
    "likes": 3769,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "611",
    "titleSlug": "valid-triangle-number",
    "likes": 3763,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1710",
    "titleSlug": "maximum-units-on-a-truck",
    "likes": 3758,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1035",
    "titleSlug": "uncrossed-lines",
    "likes": 3758,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1472",
    "titleSlug": "design-browser-history",
    "likes": 3743,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Linked List"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Design"
      },
      {
        "name": "Doubly-Linked List"
      },
      {
        "name": "Data Stream"
      }
    ]
  },
  {
    "questionFrontendId": "355",
    "titleSlug": "design-twitter",
    "likes": 3742,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Linked List"
      },
      {
        "name": "Design"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "455",
    "titleSlug": "assign-cookies",
    "likes": 3741,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "513",
    "titleSlug": "find-bottom-left-tree-value",
    "likes": 3738,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "705",
    "titleSlug": "design-hashset",
    "likes": 3732,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Linked List"
      },
      {
        "name": "Design"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "630",
    "titleSlug": "course-schedule-iii",
    "likes": 3732,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "779",
    "titleSlug": "k-th-symbol-in-grammar",
    "likes": 3724,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "1248",
    "titleSlug": "count-number-of-nice-subarrays",
    "likes": 3723,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "1038",
    "titleSlug": "binary-search-tree-to-greater-sum-tree",
    "likes": 3703,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1345",
    "titleSlug": "jump-game-iv",
    "likes": 3695,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "407",
    "titleSlug": "trapping-rain-water-ii",
    "likes": 3695,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1041",
    "titleSlug": "robot-bounded-in-circle",
    "likes": 3687,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "990",
    "titleSlug": "satisfiability-of-equality-equations",
    "likes": 3672,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "1074",
    "titleSlug": "number-of-submatrices-that-sum-to-target",
    "likes": 3661,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "867",
    "titleSlug": "transpose-matrix",
    "likes": 3661,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "930",
    "titleSlug": "binary-subarrays-with-sum",
    "likes": 3658,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1146",
    "titleSlug": "snapshot-array",
    "likes": 3647,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Design"
      }
    ]
  },
  {
    "questionFrontendId": "1588",
    "titleSlug": "sum-of-all-odd-length-subarrays",
    "likes": 3633,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1482",
    "titleSlug": "minimum-number-of-days-to-make-m-bouquets",
    "likes": 3632,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "1202",
    "titleSlug": "smallest-string-with-swaps",
    "likes": 3629,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "374",
    "titleSlug": "guess-number-higher-or-lower",
    "likes": 3627,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Binary Search"
      },
      {
        "name": "Interactive"
      }
    ]
  },
  {
    "questionFrontendId": "1557",
    "titleSlug": "minimum-number-of-vertices-to-reach-all-nodes",
    "likes": 3617,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "799",
    "titleSlug": "champagne-tower",
    "likes": 3615,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1768",
    "titleSlug": "merge-strings-alternately",
    "likes": 3608,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "556",
    "titleSlug": "next-greater-element-iii",
    "likes": 3596,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "491",
    "titleSlug": "non-decreasing-subsequences",
    "likes": 3591,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "429",
    "titleSlug": "n-ary-tree-level-order-traversal",
    "likes": 3583,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "515",
    "titleSlug": "find-largest-value-in-each-tree-row",
    "likes": 3572,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "887",
    "titleSlug": "super-egg-drop",
    "likes": 3567,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1443",
    "titleSlug": "minimum-time-to-collect-all-apples-in-a-tree",
    "likes": 3565,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "791",
    "titleSlug": "custom-sort-string",
    "likes": 3549,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "68",
    "titleSlug": "text-justification",
    "likes": 3546,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1657",
    "titleSlug": "determine-if-two-strings-are-close",
    "likes": 3542,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "778",
    "titleSlug": "swim-in-rising-water",
    "likes": 3542,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "214",
    "titleSlug": "shortest-palindrome",
    "likes": 3540,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "String Matching"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "766",
    "titleSlug": "toeplitz-matrix",
    "likes": 3489,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1396",
    "titleSlug": "design-underground-system",
    "likes": 3481,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Design"
      }
    ]
  },
  {
    "questionFrontendId": "176",
    "titleSlug": "second-highest-salary",
    "likes": 3479,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "796",
    "titleSlug": "rotate-string",
    "likes": 3473,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "String Matching"
      }
    ]
  },
  {
    "questionFrontendId": "622",
    "titleSlug": "design-circular-queue",
    "likes": 3472,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Linked List"
      },
      {
        "name": "Design"
      },
      {
        "name": "Queue"
      }
    ]
  },
  {
    "questionFrontendId": "318",
    "titleSlug": "maximum-product-of-word-lengths",
    "likes": 3472,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "1002",
    "titleSlug": "find-common-characters",
    "likes": 3464,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "449",
    "titleSlug": "serialize-and-deserialize-bst",
    "likes": 3459,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Design"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1161",
    "titleSlug": "maximum-level-sum-of-a-binary-tree",
    "likes": 3457,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "566",
    "titleSlug": "reshape-the-matrix",
    "likes": 3451,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "650",
    "titleSlug": "2-keys-keyboard",
    "likes": 3444,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1129",
    "titleSlug": "shortest-path-with-alternating-colors",
    "likes": 3438,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "783",
    "titleSlug": "minimum-distance-between-bst-nodes",
    "likes": 3438,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "175",
    "titleSlug": "combine-two-tables",
    "likes": 3434,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "363",
    "titleSlug": "max-sum-of-rectangle-no-larger-than-k",
    "likes": 3426,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Prefix Sum"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "1971",
    "titleSlug": "find-if-path-exists-in-graph",
    "likes": 3416,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "1572",
    "titleSlug": "matrix-diagonal-sum",
    "likes": 3401,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "832",
    "titleSlug": "flipping-an-image",
    "likes": 3392,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2130",
    "titleSlug": "maximum-twin-sum-of-a-linked-list",
    "likes": 3387,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Stack"
      }
    ]
  },
  {
    "questionFrontendId": "989",
    "titleSlug": "add-to-array-form-of-integer",
    "likes": 3385,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "632",
    "titleSlug": "smallest-range-covering-elements-from-k-lists",
    "likes": 3385,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1456",
    "titleSlug": "maximum-number-of-vowels-in-a-substring-of-given-length",
    "likes": 3384,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "498",
    "titleSlug": "diagonal-traverse",
    "likes": 3381,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1335",
    "titleSlug": "minimum-difficulty-of-a-job-schedule",
    "likes": 3370,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1696",
    "titleSlug": "jump-game-vi",
    "likes": 3368,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Monotonic Queue"
      }
    ]
  },
  {
    "questionFrontendId": "853",
    "titleSlug": "car-fleet",
    "likes": 3363,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "520",
    "titleSlug": "detect-capital",
    "likes": 3360,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "643",
    "titleSlug": "maximum-average-subarray-i",
    "likes": 3356,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "838",
    "titleSlug": "push-dominoes",
    "likes": 3355,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1372",
    "titleSlug": "longest-zigzag-path-in-a-binary-tree",
    "likes": 3342,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1329",
    "titleSlug": "sort-the-matrix-diagonally",
    "likes": 3340,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1326",
    "titleSlug": "minimum-number-of-taps-to-open-to-water-a-garden",
    "likes": 3338,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "790",
    "titleSlug": "domino-and-tromino-tiling",
    "likes": 3337,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "670",
    "titleSlug": "maximum-swap",
    "likes": 3329,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "462",
    "titleSlug": "minimum-moves-to-equal-array-elements-ii",
    "likes": 3315,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1022",
    "titleSlug": "sum-of-root-to-leaf-binary-numbers",
    "likes": 3308,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "282",
    "titleSlug": "expression-add-operators",
    "likes": 3305,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "446",
    "titleSlug": "arithmetic-slices-ii-subsequence",
    "likes": 3301,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "823",
    "titleSlug": "binary-trees-with-factors",
    "likes": 3284,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "187",
    "titleSlug": "repeated-dna-sequences",
    "likes": 3271,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "263",
    "titleSlug": "ugly-number",
    "likes": 3261,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "87",
    "titleSlug": "scramble-string",
    "likes": 3261,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1438",
    "titleSlug": "longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",
    "likes": 3256,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Ordered Set"
      },
      {
        "name": "Monotonic Queue"
      }
    ]
  },
  {
    "questionFrontendId": "1019",
    "titleSlug": "next-greater-node-in-linked-list",
    "likes": 3242,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Linked List"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "1920",
    "titleSlug": "build-array-from-permutation",
    "likes": 3239,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1171",
    "titleSlug": "remove-zero-sum-consecutive-nodes-from-linked-list",
    "likes": 3235,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Linked List"
      }
    ]
  },
  {
    "questionFrontendId": "1402",
    "titleSlug": "reducing-dishes",
    "likes": 3233,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "261",
    "titleSlug": "graph-valid-tree",
    "likes": 3233,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "1457",
    "titleSlug": "pseudo-palindromic-paths-in-a-binary-tree",
    "likes": 3220,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1220",
    "titleSlug": "count-vowels-permutation",
    "likes": 3219,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1338",
    "titleSlug": "reduce-array-size-to-the-half",
    "likes": 3213,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "366",
    "titleSlug": "find-leaves-of-binary-tree",
    "likes": 3197,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "314",
    "titleSlug": "binary-tree-vertical-order-traversal",
    "likes": 3188,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "164",
    "titleSlug": "maximum-gap",
    "likes": 3185,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Bucket Sort"
      },
      {
        "name": "Radix Sort"
      }
    ]
  },
  {
    "questionFrontendId": "849",
    "titleSlug": "maximize-distance-to-closest-person",
    "likes": 3183,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "948",
    "titleSlug": "bag-of-tokens",
    "likes": 3177,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1929",
    "titleSlug": "concatenation-of-array",
    "likes": 3176,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1095",
    "titleSlug": "find-in-mountain-array",
    "likes": 3169,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Interactive"
      }
    ]
  },
  {
    "questionFrontendId": "877",
    "titleSlug": "stone-game",
    "likes": 3168,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Game Theory"
      }
    ]
  },
  {
    "questionFrontendId": "526",
    "titleSlug": "beautiful-arrangement",
    "likes": 3167,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "1218",
    "titleSlug": "longest-arithmetic-subsequence-of-given-difference",
    "likes": 3153,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "303",
    "titleSlug": "range-sum-query-immutable",
    "likes": 3146,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Design"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "859",
    "titleSlug": "buddy-strings",
    "likes": 3141,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "480",
    "titleSlug": "sliding-window-median",
    "likes": 3140,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "172",
    "titleSlug": "factorial-trailing-zeroes",
    "likes": 3122,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "821",
    "titleSlug": "shortest-distance-to-a-character",
    "likes": 3099,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "589",
    "titleSlug": "n-ary-tree-preorder-traversal",
    "likes": 3099,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Stack"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "1834",
    "titleSlug": "single-threaded-cpu",
    "likes": 3076,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "286",
    "titleSlug": "walls-and-gates",
    "likes": 3071,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1706",
    "titleSlug": "where-will-the-ball-fall",
    "likes": 3065,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1514",
    "titleSlug": "path-with-maximum-probability",
    "likes": 3063,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "2149",
    "titleSlug": "rearrange-array-elements-by-sign",
    "likes": 3052,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1383",
    "titleSlug": "maximum-performance-of-a-team",
    "likes": 3045,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "382",
    "titleSlug": "linked-list-random-node",
    "likes": 3045,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Math"
      },
      {
        "name": "Reservoir Sampling"
      },
      {
        "name": "Randomized"
      }
    ]
  },
  {
    "questionFrontendId": "959",
    "titleSlug": "regions-cut-by-slashes",
    "likes": 3040,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "147",
    "titleSlug": "insertion-sort-list",
    "likes": 3037,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1049",
    "titleSlug": "last-stone-weight-ii",
    "likes": 3034,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1382",
    "titleSlug": "balance-a-binary-search-tree",
    "likes": 3033,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "326",
    "titleSlug": "power-of-three",
    "likes": 3033,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "1305",
    "titleSlug": "all-elements-in-two-binary-search-trees",
    "likes": 3032,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "324",
    "titleSlug": "wiggle-sort-ii",
    "likes": 3031,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Quickselect"
      }
    ]
  },
  {
    "questionFrontendId": "502",
    "titleSlug": "ipo",
    "likes": 3021,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1358",
    "titleSlug": "number-of-substrings-containing-all-three-characters",
    "likes": 3013,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "1675",
    "titleSlug": "minimize-deviation-in-array",
    "likes": 3012,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "1679",
    "titleSlug": "max-number-of-k-sum-pairs",
    "likes": 3009,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1359",
    "titleSlug": "count-all-valid-pickup-and-delivery-options",
    "likes": 3002,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Combinatorics"
      }
    ]
  },
  {
    "questionFrontendId": "896",
    "titleSlug": "monotonic-array",
    "likes": 2988,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "697",
    "titleSlug": "degree-of-an-array",
    "likes": 2987,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "1996",
    "titleSlug": "the-number-of-weak-characters-in-the-game",
    "likes": 2979,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "273",
    "titleSlug": "integer-to-english-words",
    "likes": 2977,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "935",
    "titleSlug": "knight-dialer",
    "likes": 2973,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1339",
    "titleSlug": "maximum-product-of-splitted-binary-tree",
    "likes": 2972,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "623",
    "titleSlug": "add-one-row-to-tree",
    "likes": 2970,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1353",
    "titleSlug": "maximum-number-of-events-that-can-be-attended",
    "likes": 2967,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "414",
    "titleSlug": "third-maximum-number",
    "likes": 2955,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2101",
    "titleSlug": "detonate-the-maximum-bombs",
    "likes": 2949,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Geometry"
      }
    ]
  },
  {
    "questionFrontendId": "976",
    "titleSlug": "largest-perimeter-triangle",
    "likes": 2944,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1282",
    "titleSlug": "group-the-people-given-the-group-size-they-belong-to",
    "likes": 2942,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "1823",
    "titleSlug": "find-the-winner-of-the-circular-game",
    "likes": 2933,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Recursion"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1662",
    "titleSlug": "check-if-two-string-arrays-are-equivalent",
    "likes": 2914,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "719",
    "titleSlug": "find-k-th-smallest-pair-distance",
    "likes": 2914,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1626",
    "titleSlug": "best-team-with-no-conflicts",
    "likes": 2899,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "941",
    "titleSlug": "valid-mountain-array",
    "likes": 2895,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "1752",
    "titleSlug": "check-if-array-is-sorted-and-rotated",
    "likes": 2888,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "433",
    "titleSlug": "minimum-genetic-mutation",
    "likes": 2874,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "2035",
    "titleSlug": "partition-array-into-two-arrays-to-minimize-sum-difference",
    "likes": 2859,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Ordered Set"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "1291",
    "titleSlug": "sequential-digits",
    "likes": 2823,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "1007",
    "titleSlug": "minimum-domino-rotations-for-equal-row",
    "likes": 2808,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2024",
    "titleSlug": "maximize-the-confusion-of-an-exam",
    "likes": 2807,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1636",
    "titleSlug": "sort-array-by-increasing-frequency",
    "likes": 2795,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "909",
    "titleSlug": "snakes-and-ladders",
    "likes": 2795,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1021",
    "titleSlug": "remove-outermost-parentheses",
    "likes": 2793,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      }
    ]
  },
  {
    "questionFrontendId": "340",
    "titleSlug": "longest-substring-with-at-most-k-distinct-characters",
    "likes": 2791,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "277",
    "titleSlug": "find-the-celebrity",
    "likes": 2790,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Interactive"
      }
    ]
  },
  {
    "questionFrontendId": "1140",
    "titleSlug": "stone-game-ii",
    "likes": 2788,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Prefix Sum"
      },
      {
        "name": "Game Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1283",
    "titleSlug": "find-the-smallest-divisor-given-a-threshold",
    "likes": 2781,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "2390",
    "titleSlug": "removing-stars-from-a-string",
    "likes": 2779,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1732",
    "titleSlug": "find-the-highest-altitude",
    "likes": 2779,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "769",
    "titleSlug": "max-chunks-to-make-sorted",
    "likes": 2779,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "967",
    "titleSlug": "numbers-with-same-consecutive-differences",
    "likes": 2778,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Backtracking"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "801",
    "titleSlug": "minimum-swaps-to-make-sequences-increasing",
    "likes": 2767,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1695",
    "titleSlug": "maximum-erasure-value",
    "likes": 2757,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "2244",
    "titleSlug": "minimum-rounds-to-complete-all-tasks",
    "likes": 2751,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "682",
    "titleSlug": "baseball-game",
    "likes": 2749,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "489",
    "titleSlug": "robot-room-cleaner",
    "likes": 2744,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Backtracking"
      },
      {
        "name": "Interactive"
      }
    ]
  },
  {
    "questionFrontendId": "1323",
    "titleSlug": "maximum-69-number",
    "likes": 2740,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2187",
    "titleSlug": "minimum-time-to-complete-trips",
    "likes": 2738,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "559",
    "titleSlug": "maximum-depth-of-n-ary-tree",
    "likes": 2735,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "845",
    "titleSlug": "longest-mountain-in-array",
    "likes": 2732,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "1523",
    "titleSlug": "count-odd-numbers-in-an-interval-range",
    "likes": 2727,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "197",
    "titleSlug": "rising-temperature",
    "likes": 2720,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "889",
    "titleSlug": "construct-binary-tree-from-preorder-and-postorder-traversal",
    "likes": 2710,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1315",
    "titleSlug": "sum-of-nodes-with-even-valued-grandparent",
    "likes": 2706,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1221",
    "titleSlug": "split-a-string-in-balanced-strings",
    "likes": 2696,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1832",
    "titleSlug": "check-if-the-sentence-is-pangram",
    "likes": 2695,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1528",
    "titleSlug": "shuffle-string",
    "likes": 2690,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "916",
    "titleSlug": "word-subsets",
    "likes": 2689,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1347",
    "titleSlug": "minimum-number-of-steps-to-make-two-strings-anagram",
    "likes": 2673,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1219",
    "titleSlug": "path-with-maximum-gold",
    "likes": 2670,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1395",
    "titleSlug": "count-number-of-teams",
    "likes": 2660,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Binary Indexed Tree"
      }
    ]
  },
  {
    "questionFrontendId": "991",
    "titleSlug": "broken-calculator",
    "likes": 2660,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "929",
    "titleSlug": "unique-email-addresses",
    "likes": 2650,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "476",
    "titleSlug": "number-complement",
    "likes": 2646,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "323",
    "titleSlug": "number-of-connected-components-in-an-undirected-graph",
    "likes": 2644,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "412",
    "titleSlug": "fizz-buzz",
    "likes": 2640,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "629",
    "titleSlug": "k-inverse-pairs-array",
    "likes": 2623,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1976",
    "titleSlug": "number-of-ways-to-arrive-at-destination",
    "likes": 2621,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "464",
    "titleSlug": "can-i-win",
    "likes": 2621,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Memoization"
      },
      {
        "name": "Game Theory"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "1465",
    "titleSlug": "maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts",
    "likes": 2610,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "865",
    "titleSlug": "smallest-subtree-with-all-the-deepest-nodes",
    "likes": 2597,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "923",
    "titleSlug": "3sum-with-multiplicity",
    "likes": 2588,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "319",
    "titleSlug": "bulb-switcher",
    "likes": 2588,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Brainteaser"
      }
    ]
  },
  {
    "questionFrontendId": "183",
    "titleSlug": "customers-who-never-order",
    "likes": 2584,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "707",
    "titleSlug": "design-linked-list",
    "likes": 2578,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Design"
      }
    ]
  },
  {
    "questionFrontendId": "1373",
    "titleSlug": "maximum-sum-bst-in-binary-tree",
    "likes": 2576,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2385",
    "titleSlug": "amount-of-time-for-binary-tree-to-be-infected",
    "likes": 2573,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1334",
    "titleSlug": "find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",
    "likes": 2573,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "2542",
    "titleSlug": "maximum-subsequence-score",
    "likes": 2571,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1232",
    "titleSlug": "check-if-it-is-a-straight-line",
    "likes": 2570,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      }
    ]
  },
  {
    "questionFrontendId": "922",
    "titleSlug": "sort-array-by-parity-ii",
    "likes": 2567,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1081",
    "titleSlug": "smallest-subsequence-of-distinct-characters",
    "likes": 2560,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "1089",
    "titleSlug": "duplicate-zeros",
    "likes": 2559,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "426",
    "titleSlug": "convert-binary-search-tree-to-sorted-doubly-linked-list",
    "likes": 2555,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      },
      {
        "name": "Doubly-Linked List"
      }
    ]
  },
  {
    "questionFrontendId": "595",
    "titleSlug": "big-countries",
    "likes": 2550,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2405",
    "titleSlug": "optimal-partition-of-string",
    "likes": 2543,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "285",
    "titleSlug": "inorder-successor-in-bst",
    "likes": 2541,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "181",
    "titleSlug": "employees-earning-more-than-their-managers",
    "likes": 2539,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "807",
    "titleSlug": "max-increase-to-keep-city-skyline",
    "likes": 2529,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "453",
    "titleSlug": "minimum-moves-to-equal-array-elements",
    "likes": 2527,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1299",
    "titleSlug": "replace-elements-with-greatest-element-on-right-side",
    "likes": 2518,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "1031",
    "titleSlug": "maximum-sum-of-two-non-overlapping-subarrays",
    "likes": 2518,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "1281",
    "titleSlug": "subtract-the-product-and-sum-of-digits-of-an-integer",
    "likes": 2509,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1802",
    "titleSlug": "maximum-value-at-a-given-index-in-a-bounded-array",
    "likes": 2507,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1122",
    "titleSlug": "relative-sort-array",
    "likes": 2507,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Counting Sort"
      }
    ]
  },
  {
    "questionFrontendId": "950",
    "titleSlug": "reveal-cards-in-increasing-order",
    "likes": 2497,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2305",
    "titleSlug": "fair-distribution-of-cookies",
    "likes": 2493,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "846",
    "titleSlug": "hand-of-straights",
    "likes": 2493,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1770",
    "titleSlug": "maximum-score-from-performing-multiplication-operations",
    "likes": 2490,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "633",
    "titleSlug": "sum-of-square-numbers",
    "likes": 2489,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "804",
    "titleSlug": "unique-morse-code-words",
    "likes": 2488,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2300",
    "titleSlug": "successful-pairs-of-spells-and-potions",
    "likes": 2485,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "880",
    "titleSlug": "decoded-string-at-index",
    "likes": 2483,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      }
    ]
  },
  {
    "questionFrontendId": "554",
    "titleSlug": "brick-wall",
    "likes": 2471,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "686",
    "titleSlug": "repeated-string-match",
    "likes": 2467,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "String Matching"
      }
    ]
  },
  {
    "questionFrontendId": "1014",
    "titleSlug": "best-sightseeing-pair",
    "likes": 2464,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1079",
    "titleSlug": "letter-tile-possibilities",
    "likes": 2461,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1464",
    "titleSlug": "maximum-product-of-two-elements-in-an-array",
    "likes": 2435,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1544",
    "titleSlug": "make-the-string-great",
    "likes": 2429,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      }
    ]
  },
  {
    "questionFrontendId": "942",
    "titleSlug": "di-string-match",
    "likes": 2421,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2007",
    "titleSlug": "find-original-array-from-doubled-array",
    "likes": 2420,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1000",
    "titleSlug": "minimum-cost-to-merge-stones",
    "likes": 2419,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1356",
    "titleSlug": "sort-integers-by-the-number-of-1-bits",
    "likes": 2400,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1531",
    "titleSlug": "string-compression-ii",
    "likes": 2397,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "299",
    "titleSlug": "bulls-and-cows",
    "likes": 2396,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "925",
    "titleSlug": "long-pressed-name",
    "likes": 2395,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2131",
    "titleSlug": "longest-palindrome-by-concatenating-two-letter-words",
    "likes": 2390,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2444",
    "titleSlug": "count-subarrays-with-fixed-bounds",
    "likes": 2386,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Monotonic Queue"
      }
    ]
  },
  {
    "questionFrontendId": "1567",
    "titleSlug": "maximum-length-of-subarray-with-positive-product",
    "likes": 2379,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1689",
    "titleSlug": "partitioning-into-minimum-number-of-deci-binary-numbers",
    "likes": 2378,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "657",
    "titleSlug": "robot-return-to-origin",
    "likes": 2376,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2439",
    "titleSlug": "minimize-maximum-of-array",
    "likes": 2369,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1009",
    "titleSlug": "complement-of-base-10-integer",
    "likes": 2356,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "1314",
    "titleSlug": "matrix-block-sum",
    "likes": 2352,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2448",
    "titleSlug": "minimum-cost-to-make-array-equal",
    "likes": 2348,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2246",
    "titleSlug": "longest-path-with-different-adjacent-characters",
    "likes": 2327,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      }
    ]
  },
  {
    "questionFrontendId": "1295",
    "titleSlug": "find-numbers-with-even-number-of-digits",
    "likes": 2323,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "674",
    "titleSlug": "longest-continuous-increasing-subsequence",
    "likes": 2321,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "1200",
    "titleSlug": "minimum-absolute-difference",
    "likes": 2319,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "920",
    "titleSlug": "number-of-music-playlists",
    "likes": 2318,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Combinatorics"
      }
    ]
  },
  {
    "questionFrontendId": "1615",
    "titleSlug": "maximal-network-rank",
    "likes": 2313,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "590",
    "titleSlug": "n-ary-tree-postorder-traversal",
    "likes": 2311,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Stack"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "956",
    "titleSlug": "tallest-billboard",
    "likes": 2310,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2096",
    "titleSlug": "step-by-step-directions-from-a-binary-tree-node-to-another",
    "likes": 2307,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1061",
    "titleSlug": "lexicographically-smallest-equivalent-string",
    "likes": 2306,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Union Find"
      }
    ]
  },
  {
    "questionFrontendId": "839",
    "titleSlug": "similar-string-groups",
    "likes": 2304,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      }
    ]
  },
  {
    "questionFrontendId": "864",
    "titleSlug": "shortest-path-to-get-all-keys",
    "likes": 2298,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "765",
    "titleSlug": "couples-holding-hands",
    "likes": 2294,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Greedy"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "331",
    "titleSlug": "verify-preorder-serialization-of-a-binary-tree",
    "likes": 2294,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1328",
    "titleSlug": "break-a-palindrome",
    "likes": 2291,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2140",
    "titleSlug": "solving-questions-with-brainpower",
    "likes": 2289,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2360",
    "titleSlug": "longest-cycle-in-a-graph",
    "likes": 2287,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      }
    ]
  },
  {
    "questionFrontendId": "685",
    "titleSlug": "redundant-connection-ii",
    "likes": 2286,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "1937",
    "titleSlug": "maximum-number-of-points-with-cost",
    "likes": 2285,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "256",
    "titleSlug": "paint-house",
    "likes": 2275,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1217",
    "titleSlug": "minimum-cost-to-move-chips-to-the-same-position",
    "likes": 2271,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1870",
    "titleSlug": "minimum-speed-to-arrive-on-time",
    "likes": 2265,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "2104",
    "titleSlug": "sum-of-subarray-ranges",
    "likes": 2263,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "327",
    "titleSlug": "count-of-range-sum",
    "likes": 2260,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Merge Sort"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "2218",
    "titleSlug": "maximum-value-of-k-coins-from-piles",
    "likes": 2257,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "951",
    "titleSlug": "flip-equivalent-binary-trees",
    "likes": 2256,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "795",
    "titleSlug": "number-of-subarrays-with-bounded-maximum",
    "likes": 2256,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "381",
    "titleSlug": "insert-delete-getrandom-o1-duplicates-allowed",
    "likes": 2256,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Design"
      },
      {
        "name": "Randomized"
      }
    ]
  },
  {
    "questionFrontendId": "860",
    "titleSlug": "lemonade-change",
    "likes": 2255,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "745",
    "titleSlug": "prefix-and-suffix-search",
    "likes": 2255,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Design"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "2616",
    "titleSlug": "minimize-the-maximum-difference-of-pairs",
    "likes": 2244,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2215",
    "titleSlug": "find-the-difference-of-two-arrays",
    "likes": 2244,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "649",
    "titleSlug": "dota2-senate",
    "likes": 2239,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Queue"
      }
    ]
  },
  {
    "questionFrontendId": "419",
    "titleSlug": "battleships-in-a-board",
    "likes": 2236,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "546",
    "titleSlug": "remove-boxes",
    "likes": 2230,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Memoization"
      }
    ]
  },
  {
    "questionFrontendId": "1926",
    "titleSlug": "nearest-exit-from-entrance-in-maze",
    "likes": 2228,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2348",
    "titleSlug": "number-of-zero-filled-subarrays",
    "likes": 2225,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "917",
    "titleSlug": "reverse-only-letters",
    "likes": 2218,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1461",
    "titleSlug": "check-if-a-string-contains-all-binary-codes-of-size-k",
    "likes": 2217,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "508",
    "titleSlug": "most-frequent-subtree-sum",
    "likes": 2217,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1704",
    "titleSlug": "determine-if-string-halves-are-alike",
    "likes": 2210,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1519",
    "titleSlug": "number-of-nodes-in-the-sub-tree-with-the-same-label",
    "likes": 2210,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1491",
    "titleSlug": "average-salary-excluding-the-minimum-and-maximum-salary",
    "likes": 2210,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1288",
    "titleSlug": "remove-covered-intervals",
    "likes": 2209,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "563",
    "titleSlug": "binary-tree-tilt",
    "likes": 2208,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "648",
    "titleSlug": "replace-words",
    "likes": 2207,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "1769",
    "titleSlug": "minimum-number-of-operations-to-move-all-balls-to-each-box",
    "likes": 2202,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1367",
    "titleSlug": "linked-list-in-binary-tree",
    "likes": 2201,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1325",
    "titleSlug": "delete-leaves-with-a-given-value",
    "likes": 2196,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1481",
    "titleSlug": "least-number-of-unique-integers-after-k-removals",
    "likes": 2195,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1187",
    "titleSlug": "make-array-strictly-increasing",
    "likes": 2195,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "694",
    "titleSlug": "number-of-distinct-islands",
    "likes": 2195,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "1044",
    "titleSlug": "longest-duplicate-substring",
    "likes": 2194,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "Suffix Array"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "89",
    "titleSlug": "gray-code",
    "likes": 2191,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "565",
    "titleSlug": "array-nesting",
    "likes": 2189,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "857",
    "titleSlug": "minimum-cost-to-hire-k-workers",
    "likes": 2187,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "664",
    "titleSlug": "strange-printer",
    "likes": 2184,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "159",
    "titleSlug": "longest-substring-with-at-most-two-distinct-characters",
    "likes": 2180,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "477",
    "titleSlug": "total-hamming-distance",
    "likes": 2179,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "1266",
    "titleSlug": "minimum-time-visiting-all-points",
    "likes": 2170,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      }
    ]
  },
  {
    "questionFrontendId": "2421",
    "titleSlug": "number-of-good-paths",
    "likes": 2169,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1436",
    "titleSlug": "destination-city",
    "likes": 2154,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "27",
    "titleSlug": "remove-element",
    "likes": 2152,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "1406",
    "titleSlug": "stone-game-iii",
    "likes": 2151,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Game Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1502",
    "titleSlug": "can-make-arithmetic-progression-from-sequence",
    "likes": 2143,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1833",
    "titleSlug": "maximum-ice-cream-bars",
    "likes": 2141,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1125",
    "titleSlug": "smallest-sufficient-team",
    "likes": 2134,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "2477",
    "titleSlug": "minimum-fuel-cost-to-report-to-the-capital",
    "likes": 2128,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "1424",
    "titleSlug": "diagonal-traverse-ii",
    "likes": 2125,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1822",
    "titleSlug": "sign-of-the-product-of-an-array",
    "likes": 2124,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1859",
    "titleSlug": "sorting-the-sentence",
    "likes": 2123,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "178",
    "titleSlug": "rank-scores",
    "likes": 2122,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1025",
    "titleSlug": "divisor-game",
    "likes": 2120,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Brainteaser"
      },
      {
        "name": "Game Theory"
      }
    ]
  },
  {
    "questionFrontendId": "828",
    "titleSlug": "count-unique-characters-of-all-substrings-of-a-given-string",
    "likes": 2119,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2265",
    "titleSlug": "count-nodes-equal-to-average-of-subtree",
    "likes": 2114,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2225",
    "titleSlug": "find-players-with-zero-or-one-losses",
    "likes": 2112,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "313",
    "titleSlug": "super-ugly-number",
    "likes": 2110,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "668",
    "titleSlug": "kth-smallest-number-in-multiplication-table",
    "likes": 2107,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "869",
    "titleSlug": "reordered-power-of-2",
    "likes": 2103,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Counting"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "375",
    "titleSlug": "guess-number-higher-or-lower-ii",
    "likes": 2102,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Game Theory"
      }
    ]
  },
  {
    "questionFrontendId": "2352",
    "titleSlug": "equal-row-and-column-pairs",
    "likes": 2101,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "594",
    "titleSlug": "longest-harmonious-subsequence",
    "likes": 2101,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "436",
    "titleSlug": "find-right-interval",
    "likes": 2095,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1552",
    "titleSlug": "magnetic-force-between-two-balls",
    "likes": 2094,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "165",
    "titleSlug": "compare-version-numbers",
    "likes": 2089,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "642",
    "titleSlug": "design-search-autocomplete-system",
    "likes": 2084,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Design"
      },
      {
        "name": "Trie"
      },
      {
        "name": "Data Stream"
      }
    ]
  },
  {
    "questionFrontendId": "813",
    "titleSlug": "largest-sum-of-averages",
    "likes": 2073,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1857",
    "titleSlug": "largest-color-value-in-a-directed-graph",
    "likes": 2072,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      },
      {
        "name": "Memoization"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1160",
    "titleSlug": "find-words-that-can-be-formed-by-characters",
    "likes": 2072,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "888",
    "titleSlug": "fair-candy-swap",
    "likes": 2070,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1361",
    "titleSlug": "validate-binary-tree-nodes",
    "likes": 2068,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "937",
    "titleSlug": "reorder-data-in-log-files",
    "likes": 2068,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1757",
    "titleSlug": "recyclable-and-low-fat-products",
    "likes": 2067,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "985",
    "titleSlug": "sum-of-even-numbers-after-queries",
    "likes": 2063,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1425",
    "titleSlug": "constrained-subsequence-sum",
    "likes": 2062,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Monotonic Queue"
      }
    ]
  },
  {
    "questionFrontendId": "1504",
    "titleSlug": "count-submatrices-with-all-ones",
    "likes": 2051,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "166",
    "titleSlug": "fraction-to-recurring-decimal",
    "likes": 2050,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "690",
    "titleSlug": "employee-importance",
    "likes": 2049,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "475",
    "titleSlug": "heaters",
    "likes": 2048,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "348",
    "titleSlug": "design-tic-tac-toe",
    "likes": 2046,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Design"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1751",
    "titleSlug": "maximum-number-of-events-that-can-be-attended-ii",
    "likes": 2045,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1473",
    "titleSlug": "paint-house-iii",
    "likes": 2044,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "182",
    "titleSlug": "duplicate-emails",
    "likes": 2043,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1475",
    "titleSlug": "final-prices-with-a-special-discount-in-a-shop",
    "likes": 2041,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "1108",
    "titleSlug": "defanging-an-ip-address",
    "likes": 2040,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2707",
    "titleSlug": "extra-characters-in-a-string",
    "likes": 2033,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "1354",
    "titleSlug": "construct-target-array-with-multiple-sums",
    "likes": 2027,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "325",
    "titleSlug": "maximum-size-subarray-sum-equals-k",
    "likes": 2026,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1669",
    "titleSlug": "merge-in-between-linked-lists",
    "likes": 2020,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      }
    ]
  },
  {
    "questionFrontendId": "1685",
    "titleSlug": "sum-of-absolute-differences-in-a-sorted-array",
    "likes": 2017,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1525",
    "titleSlug": "number-of-good-ways-to-split-a-string",
    "likes": 2015,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "1905",
    "titleSlug": "count-sub-islands",
    "likes": 2010,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "252",
    "titleSlug": "meeting-rooms",
    "likes": 2010,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "180",
    "titleSlug": "consecutive-numbers",
    "likes": 2008,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "362",
    "titleSlug": "design-hit-counter",
    "likes": 2007,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Design"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Data Stream"
      }
    ]
  },
  {
    "questionFrontendId": "184",
    "titleSlug": "department-highest-salary",
    "likes": 2004,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "185",
    "titleSlug": "department-top-three-salaries",
    "likes": 2003,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "561",
    "titleSlug": "array-partition",
    "likes": 2000,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Counting Sort"
      }
    ]
  },
  {
    "questionFrontendId": "2551",
    "titleSlug": "put-marbles-in-bags",
    "likes": 1999,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1579",
    "titleSlug": "remove-max-number-of-edges-to-keep-graph-fully-traversable",
    "likes": 1999,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "773",
    "titleSlug": "sliding-puzzle",
    "likes": 1995,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "873",
    "titleSlug": "length-of-longest-fibonacci-subsequence",
    "likes": 1991,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1673",
    "titleSlug": "find-the-most-competitive-subsequence",
    "likes": 1986,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "2141",
    "titleSlug": "maximum-running-time-of-n-computers",
    "likes": 1983,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "535",
    "titleSlug": "encode-and-decode-tinyurl",
    "likes": 1982,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Design"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "1389",
    "titleSlug": "create-target-array-in-the-given-order",
    "likes": 1970,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "223",
    "titleSlug": "rectangle-area",
    "likes": 1968,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      }
    ]
  },
  {
    "questionFrontendId": "1405",
    "titleSlug": "longest-happy-string",
    "likes": 1965,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "836",
    "titleSlug": "rectangle-overlap",
    "likes": 1965,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      }
    ]
  },
  {
    "questionFrontendId": "2369",
    "titleSlug": "check-if-there-is-a-valid-partition-for-the-array",
    "likes": 1963,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2366",
    "titleSlug": "minimum-replacements-to-sort-the-array",
    "likes": 1962,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2316",
    "titleSlug": "count-unreachable-pairs-of-nodes-in-an-undirected-graph",
    "likes": 1962,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "837",
    "titleSlug": "new-21-game",
    "likes": 1957,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Probability and Statistics"
      }
    ]
  },
  {
    "questionFrontendId": "1304",
    "titleSlug": "find-n-unique-integers-sum-up-to-zero",
    "likes": 1954,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1760",
    "titleSlug": "minimum-limit-of-balls-in-a-bag",
    "likes": 1952,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "1980",
    "titleSlug": "find-unique-binary-string",
    "likes": 1947,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "1901",
    "titleSlug": "find-a-peak-element-ii",
    "likes": 1943,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "689",
    "titleSlug": "maximum-sum-of-3-non-overlapping-subarrays",
    "likes": 1943,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1903",
    "titleSlug": "largest-odd-number-in-string",
    "likes": 1938,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "975",
    "titleSlug": "odd-even-jump",
    "likes": 1938,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "732",
    "titleSlug": "my-calendar-iii",
    "likes": 1938,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Binary Search"
      },
      {
        "name": "Design"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "2328",
    "titleSlug": "number-of-increasing-paths-in-a-grid",
    "likes": 1933,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      },
      {
        "name": "Memoization"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2306",
    "titleSlug": "naming-a-company",
    "likes": 1933,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "1743",
    "titleSlug": "restore-the-array-from-adjacent-pairs",
    "likes": 1932,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "978",
    "titleSlug": "longest-turbulent-subarray",
    "likes": 1932,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "720",
    "titleSlug": "longest-word-in-dictionary",
    "likes": 1927,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Trie"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "177",
    "titleSlug": "nth-highest-salary",
    "likes": 1925,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1697",
    "titleSlug": "checking-existence-of-edge-length-limited-paths",
    "likes": 1923,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "386",
    "titleSlug": "lexicographical-numbers",
    "likes": 1923,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "529",
    "titleSlug": "minesweeper",
    "likes": 1922,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1123",
    "titleSlug": "lowest-common-ancestor-of-deepest-leaves",
    "likes": 1919,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "541",
    "titleSlug": "reverse-string-ii",
    "likes": 1919,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1603",
    "titleSlug": "design-parking-system",
    "likes": 1918,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Design"
      },
      {
        "name": "Simulation"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "599",
    "titleSlug": "minimum-index-sum-of-two-lists",
    "likes": 1917,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1877",
    "titleSlug": "minimize-maximum-pair-sum-in-array",
    "likes": 1913,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1318",
    "titleSlug": "minimum-flips-to-make-a-or-b-equal-to-c",
    "likes": 1913,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "939",
    "titleSlug": "minimum-area-rectangle",
    "likes": 1912,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "636",
    "titleSlug": "exclusive-time-of-functions",
    "likes": 1909,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      }
    ]
  },
  {
    "questionFrontendId": "730",
    "titleSlug": "count-different-palindromic-subsequences",
    "likes": 1899,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1346",
    "titleSlug": "check-if-n-and-its-double-exist",
    "likes": 1895,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "716",
    "titleSlug": "max-stack",
    "likes": 1895,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Design"
      },
      {
        "name": "Doubly-Linked List"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "1483",
    "titleSlug": "kth-ancestor-of-a-tree-node",
    "likes": 1886,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Design"
      }
    ]
  },
  {
    "questionFrontendId": "818",
    "titleSlug": "race-car",
    "likes": 1880,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "584",
    "titleSlug": "find-customer-referee",
    "likes": 1880,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2483",
    "titleSlug": "minimum-penalty-for-a-shop",
    "likes": 1872,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1727",
    "titleSlug": "largest-submatrix-with-rearrangements",
    "likes": 1871,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "321",
    "titleSlug": "create-maximum-number",
    "likes": 1871,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "965",
    "titleSlug": "univalued-binary-tree",
    "likes": 1866,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "759",
    "titleSlug": "employee-free-time",
    "likes": 1866,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1561",
    "titleSlug": "maximum-number-of-coins-you-can-get",
    "likes": 1861,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Game Theory"
      }
    ]
  },
  {
    "questionFrontendId": "2090",
    "titleSlug": "k-radius-subarray-averages",
    "likes": 1858,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "1970",
    "titleSlug": "last-day-where-you-can-still-cross",
    "likes": 1856,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1663",
    "titleSlug": "smallest-string-with-a-given-numeric-value",
    "likes": 1856,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1614",
    "titleSlug": "maximum-nesting-depth-of-the-parentheses",
    "likes": 1852,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      }
    ]
  },
  {
    "questionFrontendId": "1190",
    "titleSlug": "reverse-substrings-between-each-pair-of-parentheses",
    "likes": 1849,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      }
    ]
  },
  {
    "questionFrontendId": "317",
    "titleSlug": "shortest-distance-from-all-buildings",
    "likes": 1848,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2389",
    "titleSlug": "longest-subsequence-with-limited-sum",
    "likes": 1840,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1773",
    "titleSlug": "count-items-matching-a-rule",
    "likes": 1838,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2272",
    "titleSlug": "substring-with-largest-variance",
    "likes": 1837,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "284",
    "titleSlug": "peeking-iterator",
    "likes": 1830,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Design"
      },
      {
        "name": "Iterator"
      }
    ]
  },
  {
    "questionFrontendId": "2009",
    "titleSlug": "minimum-number-of-operations-to-make-array-continuous",
    "likes": 1825,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "490",
    "titleSlug": "the-maze",
    "likes": 1825,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "539",
    "titleSlug": "minimum-time-difference",
    "likes": 1823,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2125",
    "titleSlug": "number-of-laser-beams-in-a-bank",
    "likes": 1822,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "305",
    "titleSlug": "number-of-islands-ii",
    "likes": 1820,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Union Find"
      }
    ]
  },
  {
    "questionFrontendId": "528",
    "titleSlug": "random-pick-with-weight",
    "likes": 1811,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Prefix Sum"
      },
      {
        "name": "Randomized"
      }
    ]
  },
  {
    "questionFrontendId": "671",
    "titleSlug": "second-minimum-node-in-a-binary-tree",
    "likes": 1810,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "768",
    "titleSlug": "max-chunks-to-make-sorted-ii",
    "likes": 1808,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "879",
    "titleSlug": "profitable-schemes",
    "likes": 1807,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1105",
    "titleSlug": "filling-bookcase-shelves",
    "likes": 1805,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "709",
    "titleSlug": "to-lower-case",
    "likes": 1802,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1489",
    "titleSlug": "find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree",
    "likes": 1801,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Minimum Spanning Tree"
      },
      {
        "name": "Strongly Connected Component"
      }
    ]
  },
  {
    "questionFrontendId": "1444",
    "titleSlug": "number-of-ways-of-cutting-a-pizza",
    "likes": 1800,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Memoization"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "775",
    "titleSlug": "global-and-local-inversions",
    "likes": 1800,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2462",
    "titleSlug": "total-cost-to-hire-k-workers",
    "likes": 1797,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2115",
    "titleSlug": "find-all-possible-recipes-from-given-supplies",
    "likes": 1794,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      }
    ]
  },
  {
    "questionFrontendId": "914",
    "titleSlug": "x-of-a-kind-in-a-deck-of-cards",
    "likes": 1794,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Counting"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1032",
    "titleSlug": "stream-of-characters",
    "likes": 1791,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Design"
      },
      {
        "name": "Trie"
      },
      {
        "name": "Data Stream"
      }
    ]
  },
  {
    "questionFrontendId": "1039",
    "titleSlug": "minimum-score-triangulation-of-polygon",
    "likes": 1790,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1630",
    "titleSlug": "arithmetic-subarrays",
    "likes": 1788,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1793",
    "titleSlug": "maximum-score-of-a-good-subarray",
    "likes": 1786,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "1962",
    "titleSlug": "remove-stones-to-minimize-the-total",
    "likes": 1782,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1381",
    "titleSlug": "design-a-stack-with-increment-operation",
    "likes": 1782,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Design"
      }
    ]
  },
  {
    "questionFrontendId": "945",
    "titleSlug": "minimum-increment-to-make-array-unique",
    "likes": 1782,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1814",
    "titleSlug": "count-nice-pairs-in-an-array",
    "likes": 1777,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "270",
    "titleSlug": "closest-binary-search-tree-value",
    "likes": 1774,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Binary Search"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "458",
    "titleSlug": "poor-pigs",
    "likes": 1768,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Combinatorics"
      }
    ]
  },
  {
    "questionFrontendId": "754",
    "titleSlug": "reach-a-number",
    "likes": 1767,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "1569",
    "titleSlug": "number-of-ways-to-reorder-array-to-get-same-bst",
    "likes": 1766,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Memoization"
      },
      {
        "name": "Combinatorics"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1186",
    "titleSlug": "maximum-subarray-sum-with-one-deletion",
    "likes": 1766,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1262",
    "titleSlug": "greatest-sum-divisible-by-three",
    "likes": 1761,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "524",
    "titleSlug": "longest-word-in-dictionary-through-deleting",
    "likes": 1761,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1964",
    "titleSlug": "find-the-longest-valid-obstacle-course-at-each-position",
    "likes": 1754,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Binary Indexed Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1581",
    "titleSlug": "customer-who-visited-but-did-not-make-any-transactions",
    "likes": 1752,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "728",
    "titleSlug": "self-dividing-numbers",
    "likes": 1751,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2089",
    "titleSlug": "find-target-indices-after-sorting-array",
    "likes": 1744,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "820",
    "titleSlug": "short-encoding-of-words",
    "likes": 1743,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "1024",
    "titleSlug": "video-stitching",
    "likes": 1742,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2492",
    "titleSlug": "minimum-score-of-a-path-between-two-cities",
    "likes": 1739,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "1609",
    "titleSlug": "even-odd-tree",
    "likes": 1731,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1203",
    "titleSlug": "sort-items-by-groups-respecting-dependencies",
    "likes": 1731,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      }
    ]
  },
  {
    "questionFrontendId": "899",
    "titleSlug": "orderly-queue",
    "likes": 1730,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1963",
    "titleSlug": "minimum-number-of-swaps-to-make-the-string-balanced",
    "likes": 1727,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1688",
    "titleSlug": "count-of-matches-in-tournament",
    "likes": 1727,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1530",
    "titleSlug": "number-of-good-leaf-nodes-pairs",
    "likes": 1727,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "552",
    "titleSlug": "student-attendance-record-ii",
    "likes": 1724,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1910",
    "titleSlug": "remove-all-occurrences-of-a-substring",
    "likes": 1723,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1379",
    "titleSlug": "find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",
    "likes": 1723,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "352",
    "titleSlug": "data-stream-as-disjoint-intervals",
    "likes": 1715,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Binary Search"
      },
      {
        "name": "Design"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "1296",
    "titleSlug": "divide-array-in-sets-of-k-consecutive-numbers",
    "likes": 1714,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1260",
    "titleSlug": "shift-2d-grid",
    "likes": 1714,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1446",
    "titleSlug": "consecutive-characters",
    "likes": 1707,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "731",
    "titleSlug": "my-calendar-ii",
    "likes": 1707,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Binary Search"
      },
      {
        "name": "Design"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "1368",
    "titleSlug": "minimum-cost-to-make-at-least-one-valid-path-in-a-grid",
    "likes": 1706,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "627",
    "titleSlug": "swap-salary",
    "likes": 1705,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2114",
    "titleSlug": "maximum-number-of-words-found-in-sentences",
    "likes": 1700,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "359",
    "titleSlug": "logger-rate-limiter",
    "likes": 1700,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Design"
      },
      {
        "name": "Data Stream"
      }
    ]
  },
  {
    "questionFrontendId": "339",
    "titleSlug": "nested-list-weight-sum",
    "likes": 1697,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "30",
    "titleSlug": "substring-with-concatenation-of-all-words",
    "likes": 1695,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "1492",
    "titleSlug": "the-kth-factor-of-n",
    "likes": 1693,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1930",
    "titleSlug": "unique-length-3-palindromic-subsequences",
    "likes": 1686,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "944",
    "titleSlug": "delete-columns-to-make-sorted",
    "likes": 1682,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "940",
    "titleSlug": "distinct-subsequences-ii",
    "likes": 1681,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1052",
    "titleSlug": "grumpy-bookstore-owner",
    "likes": 1679,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "1684",
    "titleSlug": "count-the-number-of-consistent-strings",
    "likes": 1678,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2181",
    "titleSlug": "merge-nodes-in-between-zeros",
    "likes": 1677,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1497",
    "titleSlug": "check-if-array-pairs-are-divisible-by-k",
    "likes": 1675,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1013",
    "titleSlug": "partition-array-into-three-parts-with-equal-sum",
    "likes": 1674,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "819",
    "titleSlug": "most-common-word",
    "likes": 1673,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "292",
    "titleSlug": "nim-game",
    "likes": 1672,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Brainteaser"
      },
      {
        "name": "Game Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1287",
    "titleSlug": "element-appearing-more-than-25-in-sorted-array",
    "likes": 1670,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "1189",
    "titleSlug": "maximum-number-of-balloons",
    "likes": 1670,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1477",
    "titleSlug": "find-two-non-overlapping-sub-arrays-each-with-target-sum",
    "likes": 1669,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "988",
    "titleSlug": "smallest-string-starting-from-leaf",
    "likes": 1665,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2466",
    "titleSlug": "count-ways-to-build-good-strings",
    "likes": 1662,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1944",
    "titleSlug": "number-of-visible-people-in-a-queue",
    "likes": 1661,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "1331",
    "titleSlug": "rank-transform-of-an-array",
    "likes": 1650,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1289",
    "titleSlug": "minimum-falling-path-sum-ii",
    "likes": 1650,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "249",
    "titleSlug": "group-shifted-strings",
    "likes": 1649,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2359",
    "titleSlug": "find-closest-node-to-given-two-nodes",
    "likes": 1647,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "1509",
    "titleSlug": "minimum-difference-between-largest-and-smallest-value-in-three-moves",
    "likes": 1647,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "962",
    "titleSlug": "maximum-width-ramp",
    "likes": 1646,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "2279",
    "titleSlug": "maximum-bags-with-full-capacity-of-rocks",
    "likes": 1642,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1380",
    "titleSlug": "lucky-numbers-in-a-matrix",
    "likes": 1640,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1700",
    "titleSlug": "number-of-students-unable-to-eat-lunch",
    "likes": 1639,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "915",
    "titleSlug": "partition-array-into-disjoint-intervals",
    "likes": 1639,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "1060",
    "titleSlug": "missing-element-in-sorted-array",
    "likes": 1637,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "1332",
    "titleSlug": "remove-palindromic-subsequences",
    "likes": 1636,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1458",
    "titleSlug": "max-dot-product-of-two-subsequences",
    "likes": 1635,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "910",
    "titleSlug": "smallest-range-ii",
    "likes": 1632,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "346",
    "titleSlug": "moving-average-from-data-stream",
    "likes": 1632,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Design"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Data Stream"
      }
    ]
  },
  {
    "questionFrontendId": "1871",
    "titleSlug": "jump-game-vii",
    "likes": 1629,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "370",
    "titleSlug": "range-addition",
    "likes": 1628,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "677",
    "titleSlug": "map-sum-pairs",
    "likes": 1623,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Design"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "2402",
    "titleSlug": "meeting-rooms-iii",
    "likes": 1621,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1799",
    "titleSlug": "maximize-score-after-n-operations",
    "likes": 1608,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Number Theory"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "1575",
    "titleSlug": "count-all-possible-routes",
    "likes": 1606,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Memoization"
      }
    ]
  },
  {
    "questionFrontendId": "2251",
    "titleSlug": "number-of-flowers-in-full-bloom",
    "likes": 1602,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Prefix Sum"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "1028",
    "titleSlug": "recover-a-tree-from-preorder-traversal",
    "likes": 1599,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2336",
    "titleSlug": "smallest-number-in-infinite-set",
    "likes": 1595,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Design"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1371",
    "titleSlug": "find-the-longest-substring-containing-vowels-in-even-counts",
    "likes": 1594,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1109",
    "titleSlug": "corporate-flight-bookings",
    "likes": 1592,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "952",
    "titleSlug": "largest-component-size-by-common-factor",
    "likes": 1592,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "870",
    "titleSlug": "advantage-shuffle",
    "likes": 1592,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2006",
    "titleSlug": "count-number-of-pairs-with-absolute-difference-k",
    "likes": 1588,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1608",
    "titleSlug": "special-array-with-x-elements-greater-than-or-equal-x",
    "likes": 1582,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1510",
    "titleSlug": "stone-game-iv",
    "likes": 1581,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Game Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1574",
    "titleSlug": "shortest-subarray-to-be-removed-to-make-array-sorted",
    "likes": 1576,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "1863",
    "titleSlug": "sum-of-all-subset-xor-totals",
    "likes": 1571,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Combinatorics"
      }
    ]
  },
  {
    "questionFrontendId": "500",
    "titleSlug": "keyboard-row",
    "likes": 1571,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "861",
    "titleSlug": "score-after-flipping-matrix",
    "likes": 1566,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "826",
    "titleSlug": "most-profit-assigning-work",
    "likes": 1564,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1416",
    "titleSlug": "restore-the-array",
    "likes": 1563,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1720",
    "titleSlug": "decode-xored-array",
    "likes": 1560,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "1671",
    "titleSlug": "minimum-number-of-removals-to-make-mountain-array",
    "likes": 1550,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "330",
    "titleSlug": "patching-array",
    "likes": 1550,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2610",
    "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
    "likes": 1548,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "2011",
    "titleSlug": "final-value-of-variable-after-performing-operations",
    "likes": 1545,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1535",
    "titleSlug": "find-the-winner-of-an-array-game",
    "likes": 1545,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "276",
    "titleSlug": "paint-fence",
    "likes": 1545,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1343",
    "titleSlug": "number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold",
    "likes": 1544,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "196",
    "titleSlug": "delete-duplicate-emails",
    "likes": 1544,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2136",
    "titleSlug": "earliest-possible-day-of-full-bloom",
    "likes": 1543,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2038",
    "titleSlug": "remove-colored-pieces-if-both-neighbors-are-the-same-color",
    "likes": 1540,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Game Theory"
      }
    ]
  },
  {
    "questionFrontendId": "432",
    "titleSlug": "all-oone-data-structure",
    "likes": 1540,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Linked List"
      },
      {
        "name": "Design"
      },
      {
        "name": "Doubly-Linked List"
      }
    ]
  },
  {
    "questionFrontendId": "639",
    "titleSlug": "decode-ways-ii",
    "likes": 1539,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2092",
    "titleSlug": "find-all-people-with-secret",
    "likes": 1538,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "396",
    "titleSlug": "rotate-function",
    "likes": 1538,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1413",
    "titleSlug": "minimum-value-to-get-positive-step-by-step-sum",
    "likes": 1537,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "259",
    "titleSlug": "3sum-smaller",
    "likes": 1537,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "936",
    "titleSlug": "stamping-the-sequence",
    "likes": 1536,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Queue"
      }
    ]
  },
  {
    "questionFrontendId": "1678",
    "titleSlug": "goal-parser-interpretation",
    "likes": 1534,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1639",
    "titleSlug": "number-of-ways-to-form-a-target-string-given-a-dictionary",
    "likes": 1534,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "811",
    "titleSlug": "subdomain-visit-count",
    "likes": 1527,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "487",
    "titleSlug": "max-consecutive-ones-ii",
    "likes": 1523,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "1269",
    "titleSlug": "number-of-ways-to-stay-in-the-same-place-after-some-steps",
    "likes": 1518,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2235",
    "titleSlug": "add-two-integers",
    "likes": 1514,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1309",
    "titleSlug": "decrypt-string-from-alphabet-to-integer-mapping",
    "likes": 1513,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1422",
    "titleSlug": "maximum-score-after-splitting-a-string",
    "likes": 1512,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1005",
    "titleSlug": "maximize-sum-of-array-after-k-negations",
    "likes": 1512,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "843",
    "titleSlug": "guess-the-word",
    "likes": 1510,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Interactive"
      },
      {
        "name": "Game Theory"
      }
    ]
  },
  {
    "questionFrontendId": "954",
    "titleSlug": "array-of-doubled-pairs",
    "likes": 1509,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "233",
    "titleSlug": "number-of-digit-one",
    "likes": 1506,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "390",
    "titleSlug": "elimination-game",
    "likes": 1505,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "1748",
    "titleSlug": "sum-of-unique-elements",
    "likes": 1503,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "575",
    "titleSlug": "distribute-candies",
    "likes": 1497,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "600",
    "titleSlug": "non-negative-integers-without-consecutive-ones",
    "likes": 1496,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1488",
    "titleSlug": "avoid-flood-in-the-city",
    "likes": 1492,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "609",
    "titleSlug": "find-duplicate-file-in-system",
    "likes": 1492,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2108",
    "titleSlug": "find-first-palindromic-string-in-the-array",
    "likes": 1490,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1590",
    "titleSlug": "make-sum-divisible-by-p",
    "likes": 1490,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1197",
    "titleSlug": "minimum-knight-moves",
    "likes": 1490,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "2256",
    "titleSlug": "minimum-average-difference",
    "likes": 1484,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "357",
    "titleSlug": "count-numbers-with-unique-digits",
    "likes": 1484,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "1913",
    "titleSlug": "maximum-product-difference-between-two-pairs",
    "likes": 1482,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1921",
    "titleSlug": "eliminate-maximum-number-of-monsters",
    "likes": 1481,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "638",
    "titleSlug": "shopping-offers",
    "likes": 1479,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Memoization"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "1503",
    "titleSlug": "last-moment-before-all-ants-fall-out-of-a-plank",
    "likes": 1471,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Brainteaser"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1104",
    "titleSlug": "path-in-zigzag-labelled-binary-tree",
    "likes": 1471,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2391",
    "titleSlug": "minimum-amount-of-time-to-collect-garbage",
    "likes": 1470,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "957",
    "titleSlug": "prison-cells-after-n-days",
    "likes": 1470,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "1280",
    "titleSlug": "students-and-examinations",
    "likes": 1468,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "427",
    "titleSlug": "construct-quad-tree",
    "likes": 1467,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2050",
    "titleSlug": "parallel-courses-iii",
    "likes": 1466,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      }
    ]
  },
  {
    "questionFrontendId": "780",
    "titleSlug": "reaching-points",
    "likes": 1463,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1310",
    "titleSlug": "xor-queries-of-a-subarray",
    "likes": 1462,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "333",
    "titleSlug": "largest-bst-subtree",
    "likes": 1460,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2353",
    "titleSlug": "design-a-food-rating-system",
    "likes": 1458,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Design"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "1275",
    "titleSlug": "find-winner-on-a-tic-tac-toe-game",
    "likes": 1458,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1876",
    "titleSlug": "substrings-of-size-three-with-distinct-characters",
    "likes": 1456,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1759",
    "titleSlug": "count-number-of-homogenous-substrings",
    "likes": 1456,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1654",
    "titleSlug": "minimum-jumps-to-reach-home",
    "likes": 1456,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "969",
    "titleSlug": "pancake-sorting",
    "likes": 1455,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "679",
    "titleSlug": "24-game",
    "likes": 1455,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "588",
    "titleSlug": "design-in-memory-file-system",
    "likes": 1455,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Design"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "587",
    "titleSlug": "erect-the-fence",
    "likes": 1453,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      }
    ]
  },
  {
    "questionFrontendId": "1352",
    "titleSlug": "product-of-the-last-k-numbers",
    "likes": 1442,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Design"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Data Stream"
      }
    ]
  },
  {
    "questionFrontendId": "727",
    "titleSlug": "minimum-window-subsequence",
    "likes": 1442,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "365",
    "titleSlug": "water-and-jug-problem",
    "likes": 1441,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "764",
    "titleSlug": "largest-plus-sign",
    "likes": 1433,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "715",
    "titleSlug": "range-module",
    "likes": 1433,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Design"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "1496",
    "titleSlug": "path-crossing",
    "likes": 1428,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1114",
    "titleSlug": "print-in-order",
    "likes": 1428,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Concurrency"
      }
    ]
  },
  {
    "questionFrontendId": "1582",
    "titleSlug": "special-positions-in-a-binary-matrix",
    "likes": 1427,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "271",
    "titleSlug": "encode-and-decode-strings",
    "likes": 1426,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Design"
      }
    ]
  },
  {
    "questionFrontendId": "1551",
    "titleSlug": "minimum-operations-to-make-array-equal",
    "likes": 1422,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1387",
    "titleSlug": "sort-integers-by-the-power-value",
    "likes": 1421,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Memoization"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "467",
    "titleSlug": "unique-substrings-in-wraparound-string",
    "likes": 1418,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "943",
    "titleSlug": "find-the-shortest-superstring",
    "likes": 1415,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "898",
    "titleSlug": "bitwise-ors-of-subarrays",
    "likes": 1415,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "1680",
    "titleSlug": "concatenation-of-consecutive-binary-numbers",
    "likes": 1414,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "465",
    "titleSlug": "optimal-account-balancing",
    "likes": 1413,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "1884",
    "titleSlug": "egg-drop-with-2-eggs-and-n-floors",
    "likes": 1410,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1366",
    "titleSlug": "rank-teams-by-votes",
    "likes": 1409,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1526",
    "titleSlug": "minimum-number-of-increments-on-subarrays-to-form-a-target-array",
    "likes": 1408,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "1042",
    "titleSlug": "flower-planting-with-no-adjacent",
    "likes": 1408,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "1716",
    "titleSlug": "calculate-money-in-leetcode-bank",
    "likes": 1405,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1462",
    "titleSlug": "course-schedule-iv",
    "likes": 1404,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      }
    ]
  },
  {
    "questionFrontendId": "1886",
    "titleSlug": "determine-whether-matrix-can-be-obtained-by-rotation",
    "likes": 1403,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1191",
    "titleSlug": "k-concatenation-maximum-sum",
    "likes": 1403,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1758",
    "titleSlug": "minimum-changes-to-make-alternating-binary-string",
    "likes": 1398,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1124",
    "titleSlug": "longest-well-performing-interval",
    "likes": 1396,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1601",
    "titleSlug": "maximum-number-of-achievable-transfer-requests",
    "likes": 1392,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "1856",
    "titleSlug": "maximum-subarray-min-product",
    "likes": 1391,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1605",
    "titleSlug": "find-valid-matrix-given-row-and-column-sums",
    "likes": 1390,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1845",
    "titleSlug": "seat-reservation-manager",
    "likes": 1388,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Design"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1712",
    "titleSlug": "ways-to-split-array-into-three-subarrays",
    "likes": 1386,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "902",
    "titleSlug": "numbers-at-most-n-given-digit-set",
    "likes": 1379,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "676",
    "titleSlug": "implement-magic-dictionary",
    "likes": 1379,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Design"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "161",
    "titleSlug": "one-edit-distance",
    "likes": 1378,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2160",
    "titleSlug": "minimum-sum-of-four-digit-number-after-splitting-digits",
    "likes": 1375,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1791",
    "titleSlug": "find-center-of-star-graph",
    "likes": 1365,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "1484",
    "titleSlug": "group-sold-products-by-the-date",
    "likes": 1362,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1442",
    "titleSlug": "count-triplets-that-can-form-two-arrays-of-equal-xor",
    "likes": 1360,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1486",
    "titleSlug": "xor-operation-in-an-array",
    "likes": 1358,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "829",
    "titleSlug": "consecutive-numbers-sum",
    "likes": 1355,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "1286",
    "titleSlug": "iterator-for-combination",
    "likes": 1354,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Design"
      },
      {
        "name": "Iterator"
      }
    ]
  },
  {
    "questionFrontendId": "1247",
    "titleSlug": "minimum-swaps-to-make-strings-equal",
    "likes": 1354,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "626",
    "titleSlug": "exchange-seats",
    "likes": 1346,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "848",
    "titleSlug": "shifting-letters",
    "likes": 1345,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1650",
    "titleSlug": "lowest-common-ancestor-of-a-binary-tree-iii",
    "likes": 1342,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "506",
    "titleSlug": "relative-ranks",
    "likes": 1341,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "401",
    "titleSlug": "binary-watch",
    "likes": 1339,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2487",
    "titleSlug": "remove-nodes-from-linked-list",
    "likes": 1338,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Recursion"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "693",
    "titleSlug": "binary-number-with-alternating-bits",
    "likes": 1337,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2433",
    "titleSlug": "find-the-original-array-of-prefix-xor",
    "likes": 1334,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2870",
    "titleSlug": "minimum-number-of-operations-to-make-array-empty",
    "likes": 1332,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1420",
    "titleSlug": "build-array-where-you-can-find-the-maximum-exactly-k-comparisons",
    "likes": 1331,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1991",
    "titleSlug": "find-the-middle-index-in-array",
    "likes": 1330,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1145",
    "titleSlug": "binary-tree-coloring-game",
    "likes": 1329,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2742",
    "titleSlug": "painting-the-walls",
    "likes": 1328,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "961",
    "titleSlug": "n-repeated-element-in-size-2n-array",
    "likes": 1328,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "384",
    "titleSlug": "shuffle-an-array",
    "likes": 1327,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Randomized"
      }
    ]
  },
  {
    "questionFrontendId": "1524",
    "titleSlug": "number-of-sub-arrays-with-odd-sum",
    "likes": 1322,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "884",
    "titleSlug": "uncommon-words-from-two-sentences",
    "likes": 1319,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "505",
    "titleSlug": "the-maze-ii",
    "likes": 1317,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "1624",
    "titleSlug": "largest-substring-between-two-equal-characters",
    "likes": 1315,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1392",
    "titleSlug": "longest-happy-prefix",
    "likes": 1313,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "String Matching"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "835",
    "titleSlug": "image-overlap",
    "likes": 1309,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "545",
    "titleSlug": "boundary-of-binary-tree",
    "likes": 1309,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "397",
    "titleSlug": "integer-replacement",
    "likes": 1303,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Memoization"
      }
    ]
  },
  {
    "questionFrontendId": "1499",
    "titleSlug": "max-value-of-equation",
    "likes": 1301,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Monotonic Queue"
      }
    ]
  },
  {
    "questionFrontendId": "1344",
    "titleSlug": "angle-between-hands-of-a-clock",
    "likes": 1297,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1167",
    "titleSlug": "minimum-cost-to-connect-sticks",
    "likes": 1297,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "855",
    "titleSlug": "exam-room",
    "likes": 1297,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Design"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "2289",
    "titleSlug": "steps-to-make-array-non-decreasing",
    "likes": 1296,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Linked List"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "405",
    "titleSlug": "convert-a-number-to-hexadecimal",
    "likes": 1296,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "1653",
    "titleSlug": "minimum-deletions-to-make-string-balanced",
    "likes": 1294,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Stack"
      }
    ]
  },
  {
    "questionFrontendId": "738",
    "titleSlug": "monotone-increasing-digits",
    "likes": 1294,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1664",
    "titleSlug": "ways-to-make-a-fair-array",
    "likes": 1293,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1763",
    "titleSlug": "longest-nice-substring",
    "likes": 1292,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "265",
    "titleSlug": "paint-house-ii",
    "likes": 1291,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1922",
    "titleSlug": "count-good-numbers",
    "likes": 1290,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "1102",
    "titleSlug": "path-with-maximum-minimum-value",
    "likes": 1282,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "781",
    "titleSlug": "rabbits-in-forest",
    "likes": 1282,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1148",
    "titleSlug": "article-views-i",
    "likes": 1279,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "272",
    "titleSlug": "closest-binary-search-tree-value-ii",
    "likes": 1279,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1267",
    "titleSlug": "count-servers-that-communicate",
    "likes": 1271,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1055",
    "titleSlug": "shortest-way-to-form-string",
    "likes": 1257,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "243",
    "titleSlug": "shortest-word-distance",
    "likes": 1256,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "388",
    "titleSlug": "longest-absolute-file-path",
    "likes": 1253,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Depth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "786",
    "titleSlug": "k-th-smallest-prime-fraction",
    "likes": 1252,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "398",
    "titleSlug": "random-pick-index",
    "likes": 1252,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Reservoir Sampling"
      },
      {
        "name": "Randomized"
      }
    ]
  },
  {
    "questionFrontendId": "878",
    "titleSlug": "nth-magical-number",
    "likes": 1250,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "1178",
    "titleSlug": "number-of-valid-words-for-each-puzzle",
    "likes": 1249,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "726",
    "titleSlug": "number-of-atoms",
    "likes": 1249,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2418",
    "titleSlug": "sort-the-people",
    "likes": 1248,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2008",
    "titleSlug": "maximum-earnings-from-taxi",
    "likes": 1246,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "805",
    "titleSlug": "split-array-with-same-average",
    "likes": 1246,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "1854",
    "titleSlug": "maximum-population-year",
    "likes": 1245,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Counting"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1749",
    "titleSlug": "maximum-absolute-sum-of-any-subarray",
    "likes": 1242,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "851",
    "titleSlug": "loud-and-rich",
    "likes": 1242,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      }
    ]
  },
  {
    "questionFrontendId": "1313",
    "titleSlug": "decompress-run-length-encoded-list",
    "likes": 1240,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "1054",
    "titleSlug": "distant-barcodes",
    "likes": 1240,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2485",
    "titleSlug": "find-the-pivot-integer",
    "likes": 1228,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2099",
    "titleSlug": "find-subsequence-of-length-k-with-the-largest-sum",
    "likes": 1216,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "2461",
    "titleSlug": "maximum-sum-of-distinct-subarrays-with-length-k",
    "likes": 1215,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "1428",
    "titleSlug": "leftmost-column-with-at-least-a-one",
    "likes": 1214,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Interactive"
      }
    ]
  },
  {
    "questionFrontendId": "2367",
    "titleSlug": "number-of-arithmetic-triplets",
    "likes": 1213,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "1887",
    "titleSlug": "reduction-operations-to-make-the-array-elements-equal",
    "likes": 1213,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1255",
    "titleSlug": "maximum-score-words-formed-by-letters",
    "likes": 1213,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "2401",
    "titleSlug": "longest-nice-subarray",
    "likes": 1212,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "262",
    "titleSlug": "trips-and-users",
    "likes": 1212,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1909",
    "titleSlug": "remove-one-element-to-make-the-array-strictly-increasing",
    "likes": 1209,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "1439",
    "titleSlug": "find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows",
    "likes": 1206,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "608",
    "titleSlug": "tree-node",
    "likes": 1205,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1985",
    "titleSlug": "find-the-kth-largest-integer-in-the-array",
    "likes": 1204,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Quickselect"
      }
    ]
  },
  {
    "questionFrontendId": "675",
    "titleSlug": "cut-off-trees-for-golf-event",
    "likes": 1203,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2236",
    "titleSlug": "root-equals-sum-of-children",
    "likes": 1200,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "280",
    "titleSlug": "wiggle-sort",
    "likes": 1200,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "777",
    "titleSlug": "swap-adjacent-in-lr-string",
    "likes": 1197,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "65",
    "titleSlug": "valid-number",
    "likes": 1195,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "995",
    "titleSlug": "minimum-number-of-k-consecutive-bit-flips",
    "likes": 1194,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1827",
    "titleSlug": "minimum-operations-to-make-the-array-increasing",
    "likes": 1193,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1570",
    "titleSlug": "dot-product-of-two-sparse-vectors",
    "likes": 1189,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Design"
      }
    ]
  },
  {
    "questionFrontendId": "250",
    "titleSlug": "count-univalue-subtrees",
    "likes": 1188,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1762",
    "titleSlug": "buildings-with-an-ocean-view",
    "likes": 1184,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "1201",
    "titleSlug": "ugly-number-iii",
    "likes": 1184,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1252",
    "titleSlug": "cells-with-odd-values-in-a-matrix",
    "likes": 1183,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "708",
    "titleSlug": "insert-into-a-sorted-circular-linked-list",
    "likes": 1183,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      }
    ]
  },
  {
    "questionFrontendId": "691",
    "titleSlug": "stickers-to-spell-word",
    "likes": 1182,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "747",
    "titleSlug": "largest-number-at-least-twice-of-others",
    "likes": 1177,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1911",
    "titleSlug": "maximum-alternating-subsequence-sum",
    "likes": 1176,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1151",
    "titleSlug": "minimum-swaps-to-group-all-1s-together",
    "likes": 1176,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "1855",
    "titleSlug": "maximum-distance-between-a-pair-of-values",
    "likes": 1175,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "1750",
    "titleSlug": "minimum-length-of-string-after-deleting-similar-ends",
    "likes": 1175,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1208",
    "titleSlug": "get-equal-substrings-within-budget",
    "likes": 1170,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1707",
    "titleSlug": "maximum-xor-with-an-element-from-array",
    "likes": 1168,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "296",
    "titleSlug": "best-meeting-point",
    "likes": 1168,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1888",
    "titleSlug": "minimum-number-of-flips-to-make-the-binary-string-alternating",
    "likes": 1167,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "1824",
    "titleSlug": "minimum-sideway-jumps",
    "likes": 1164,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1234",
    "titleSlug": "replace-the-substring-for-balanced-string",
    "likes": 1163,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "833",
    "titleSlug": "find-and-replace-in-string",
    "likes": 1159,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "641",
    "titleSlug": "design-circular-deque",
    "likes": 1151,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Linked List"
      },
      {
        "name": "Design"
      },
      {
        "name": "Queue"
      }
    ]
  },
  {
    "questionFrontendId": "2281",
    "titleSlug": "sum-of-total-strength-of-wizards",
    "likes": 1149,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2482",
    "titleSlug": "difference-between-ones-and-zeros-in-row-and-column",
    "likes": 1148,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2055",
    "titleSlug": "plates-between-candles",
    "likes": 1148,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "549",
    "titleSlug": "binary-tree-longest-consecutive-sequence-ii",
    "likes": 1146,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "255",
    "titleSlug": "verify-preorder-sequence-in-binary-search-tree",
    "likes": 1142,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Recursion"
      },
      {
        "name": "Monotonic Stack"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "607",
    "titleSlug": "sales-person",
    "likes": 1133,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2034",
    "titleSlug": "stock-price-fluctuation",
    "likes": 1132,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Design"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Data Stream"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "1136",
    "titleSlug": "parallel-courses",
    "likes": 1132,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      }
    ]
  },
  {
    "questionFrontendId": "1051",
    "titleSlug": "height-checker",
    "likes": 1132,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Counting Sort"
      }
    ]
  },
  {
    "questionFrontendId": "306",
    "titleSlug": "additive-number",
    "likes": 1132,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "2357",
    "titleSlug": "make-array-zero-by-subtracting-equal-amounts",
    "likes": 1131,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2620",
    "titleSlug": "counter",
    "likes": 1130,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "1559",
    "titleSlug": "detect-cycles-in-2d-grid",
    "likes": 1130,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1015",
    "titleSlug": "smallest-integer-divisible-by-k",
    "likes": 1129,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1099",
    "titleSlug": "two-sum-less-than-k",
    "likes": 1128,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1394",
    "titleSlug": "find-lucky-integer-in-an-array",
    "likes": 1126,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1300",
    "titleSlug": "sum-of-mutated-array-closest-to-target",
    "likes": 1126,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1106",
    "titleSlug": "parsing-a-boolean-expression",
    "likes": 1125,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "298",
    "titleSlug": "binary-tree-longest-consecutive-sequence",
    "likes": 1125,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1828",
    "titleSlug": "queries-on-number-of-points-inside-a-circle",
    "likes": 1124,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      }
    ]
  },
  {
    "questionFrontendId": "1638",
    "titleSlug": "count-substrings-that-differ-by-one-character",
    "likes": 1122,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1278",
    "titleSlug": "palindrome-partitioning-iii",
    "likes": 1121,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "842",
    "titleSlug": "split-array-into-fibonacci-sequence",
    "likes": 1120,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "254",
    "titleSlug": "factor-combinations",
    "likes": 1120,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "1661",
    "titleSlug": "average-time-of-process-per-machine",
    "likes": 1119,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "772",
    "titleSlug": "basic-calculator-iii",
    "likes": 1115,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "364",
    "titleSlug": "nested-list-weight-sum-ii",
    "likes": 1110,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Stack"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "1691",
    "titleSlug": "maximum-height-by-stacking-cuboids",
    "likes": 1109,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "854",
    "titleSlug": "k-similar-strings",
    "likes": 1109,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "495",
    "titleSlug": "teemo-attacking",
    "likes": 1109,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "274",
    "titleSlug": "h-index",
    "likes": 1107,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Counting Sort"
      }
    ]
  },
  {
    "questionFrontendId": "1168",
    "titleSlug": "optimize-water-distribution-in-a-village",
    "likes": 1106,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Minimum Spanning Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1135",
    "titleSlug": "connecting-cities-with-minimum-cost",
    "likes": 1103,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Minimum Spanning Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2667",
    "titleSlug": "create-hello-world-function",
    "likes": 1102,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "661",
    "titleSlug": "image-smoother",
    "likes": 1102,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "418",
    "titleSlug": "sentence-screen-fitting",
    "likes": 1102,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1816",
    "titleSlug": "truncate-sentence",
    "likes": 1101,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "858",
    "titleSlug": "mirror-reflection",
    "likes": 1100,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "582",
    "titleSlug": "kill-process",
    "likes": 1098,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "1340",
    "titleSlug": "jump-game-v",
    "likes": 1093,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1979",
    "titleSlug": "find-greatest-common-divisor-of-array",
    "likes": 1089,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "2116",
    "titleSlug": "check-if-a-parentheses-string-can-be-valid",
    "likes": 1086,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "470",
    "titleSlug": "implement-rand10-using-rand7",
    "likes": 1085,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Rejection Sampling"
      },
      {
        "name": "Randomized"
      },
      {
        "name": "Probability and Statistics"
      }
    ]
  },
  {
    "questionFrontendId": "2415",
    "titleSlug": "reverse-odd-levels-of-binary-tree",
    "likes": 1084,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "803",
    "titleSlug": "bricks-falling-when-hit",
    "likes": 1084,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1897",
    "titleSlug": "redistribute-characters-to-make-all-strings-equal",
    "likes": 1082,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "425",
    "titleSlug": "word-squares",
    "likes": 1081,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "1986",
    "titleSlug": "minimum-number-of-work-sessions-to-finish-the-tasks",
    "likes": 1079,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "1478",
    "titleSlug": "allocate-mailboxes",
    "likes": 1079,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "482",
    "titleSlug": "license-key-formatting",
    "likes": 1076,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "919",
    "titleSlug": "complete-binary-tree-inserter",
    "likes": 1074,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Design"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2134",
    "titleSlug": "minimum-swaps-to-group-all-1s-together-ii",
    "likes": 1069,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "163",
    "titleSlug": "missing-ranges",
    "likes": 1067,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "186",
    "titleSlug": "reverse-words-in-a-string-ii",
    "likes": 1065,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2540",
    "titleSlug": "minimum-common-value",
    "likes": 1064,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "2262",
    "titleSlug": "total-appeal-of-a-string",
    "likes": 1064,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1292",
    "titleSlug": "maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold",
    "likes": 1063,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1541",
    "titleSlug": "minimum-insertions-to-balance-a-parentheses-string",
    "likes": 1062,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2161",
    "titleSlug": "partition-array-according-to-given-pivot",
    "likes": 1061,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1873",
    "titleSlug": "calculate-special-bonus",
    "likes": 1061,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1648",
    "titleSlug": "sell-diminishing-valued-colored-balls",
    "likes": 1061,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1411",
    "titleSlug": "number-of-ways-to-paint-n-3-grid",
    "likes": 1061,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "616",
    "titleSlug": "add-bold-tag-in-string",
    "likes": 1061,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Trie"
      },
      {
        "name": "String Matching"
      }
    ]
  },
  {
    "questionFrontendId": "2221",
    "titleSlug": "find-triangular-sum-of-an-array",
    "likes": 1058,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Simulation"
      },
      {
        "name": "Combinatorics"
      }
    ]
  },
  {
    "questionFrontendId": "2226",
    "titleSlug": "maximum-candies-allocated-to-k-children",
    "likes": 1057,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "1846",
    "titleSlug": "maximum-element-after-decreasing-and-rearranging",
    "likes": 1056,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1790",
    "titleSlug": "check-if-one-string-swap-can-make-strings-equal",
    "likes": 1056,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "620",
    "titleSlug": "not-boring-movies",
    "likes": 1054,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2192",
    "titleSlug": "all-ancestors-of-a-node-in-a-directed-acyclic-graph",
    "likes": 1053,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      }
    ]
  },
  {
    "questionFrontendId": "536",
    "titleSlug": "construct-binary-tree-from-string",
    "likes": 1048,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "817",
    "titleSlug": "linked-list-components",
    "likes": 1047,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Linked List"
      }
    ]
  },
  {
    "questionFrontendId": "311",
    "titleSlug": "sparse-matrix-multiplication",
    "likes": 1046,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1297",
    "titleSlug": "maximum-number-of-occurrences-of-a-substring",
    "likes": 1045,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "400",
    "titleSlug": "nth-digit",
    "likes": 1045,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "244",
    "titleSlug": "shortest-word-distance-ii",
    "likes": 1043,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Design"
      }
    ]
  },
  {
    "questionFrontendId": "507",
    "titleSlug": "perfect-number",
    "likes": 1041,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1546",
    "titleSlug": "maximum-number-of-non-overlapping-subarrays-with-sum-equals-target",
    "likes": 1040,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "932",
    "titleSlug": "beautiful-array",
    "likes": 1040,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Divide and Conquer"
      }
    ]
  },
  {
    "questionFrontendId": "266",
    "titleSlug": "palindrome-permutation",
    "likes": 1040,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2147",
    "titleSlug": "number-of-ways-to-divide-a-long-corridor",
    "likes": 1035,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1400",
    "titleSlug": "construct-k-palindrome-strings",
    "likes": 1033,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "428",
    "titleSlug": "serialize-and-deserialize-n-ary-tree",
    "likes": 1033,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "1388",
    "titleSlug": "pizza-with-3n-slices",
    "likes": 1031,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1786",
    "titleSlug": "number-of-restricted-paths-from-first-to-last-node",
    "likes": 1030,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "593",
    "titleSlug": "valid-square",
    "likes": 1029,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      }
    ]
  },
  {
    "questionFrontendId": "1460",
    "titleSlug": "make-two-arrays-equal-by-reversing-subarrays",
    "likes": 1022,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1723",
    "titleSlug": "find-minimum-time-to-finish-all-jobs",
    "likes": 1018,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "1711",
    "titleSlug": "count-good-meals",
    "likes": 1013,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "1378",
    "titleSlug": "replace-employee-id-with-the-unique-identifier",
    "likes": 1013,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1781",
    "titleSlug": "sum-of-beauty-of-all-substrings",
    "likes": 1010,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1518",
    "titleSlug": "water-bottles",
    "likes": 1009,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1419",
    "titleSlug": "minimum-number-of-frogs-croaking",
    "likes": 1008,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2127",
    "titleSlug": "maximum-employees-to-be-invited-to-a-meeting",
    "likes": 1007,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      }
    ]
  },
  {
    "questionFrontendId": "723",
    "titleSlug": "candy-crush",
    "likes": 1007,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "776",
    "titleSlug": "split-bst",
    "likes": 1006,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Recursion"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1818",
    "titleSlug": "minimum-absolute-sum-difference",
    "likes": 1003,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "1414",
    "titleSlug": "find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k",
    "likes": 1002,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2064",
    "titleSlug": "minimized-maximum-of-products-distributed-to-any-store",
    "likes": 1001,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "1529",
    "titleSlug": "minimum-suffix-flips",
    "likes": 1001,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1494",
    "titleSlug": "parallel-courses-ii",
    "likes": 997,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "1251",
    "titleSlug": "average-selling-price",
    "likes": 996,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2351",
    "titleSlug": "first-letter-to-appear-twice",
    "likes": 992,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1156",
    "titleSlug": "swap-for-longest-repeated-character-substring",
    "likes": 990,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "570",
    "titleSlug": "managers-with-at-least-5-direct-reports",
    "likes": 985,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1320",
    "titleSlug": "minimum-distance-to-type-a-word-using-two-fingers",
    "likes": 982,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "468",
    "titleSlug": "validate-ip-address",
    "likes": 979,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2016",
    "titleSlug": "maximum-difference-between-increasing-elements",
    "likes": 978,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "1915",
    "titleSlug": "number-of-wonderful-substrings",
    "likes": 978,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "596",
    "titleSlug": "classes-more-than-5-students",
    "likes": 978,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2049",
    "titleSlug": "count-nodes-with-the-highest-score",
    "likes": 976,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1057",
    "titleSlug": "campus-bikes",
    "likes": 976,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "911",
    "titleSlug": "online-election",
    "likes": 976,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Design"
      }
    ]
  },
  {
    "questionFrontendId": "2302",
    "titleSlug": "count-subarrays-with-score-less-than-k",
    "likes": 975,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "996",
    "titleSlug": "number-of-squareful-arrays",
    "likes": 974,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "2264",
    "titleSlug": "largest-3-same-digit-number-in-string",
    "likes": 973,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1690",
    "titleSlug": "stone-game-vii",
    "likes": 972,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Game Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1553",
    "titleSlug": "minimum-number-of-days-to-eat-n-oranges",
    "likes": 972,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Memoization"
      }
    ]
  },
  {
    "questionFrontendId": "1261",
    "titleSlug": "find-elements-in-a-contaminated-binary-tree",
    "likes": 971,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Design"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2574",
    "titleSlug": "left-and-right-sum-differences",
    "likes": 968,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1003",
    "titleSlug": "check-if-word-is-valid-after-substitutions",
    "likes": 968,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      }
    ]
  },
  {
    "questionFrontendId": "1101",
    "titleSlug": "the-earliest-moment-when-everyone-become-friends",
    "likes": 965,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1537",
    "titleSlug": "get-the-maximum-score",
    "likes": 962,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1231",
    "titleSlug": "divide-chocolate",
    "likes": 962,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "1103",
    "titleSlug": "distribute-candies-to-people",
    "likes": 961,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "586",
    "titleSlug": "customer-placing-the-largest-number-of-orders",
    "likes": 961,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1984",
    "titleSlug": "minimum-difference-between-highest-and-lowest-of-k-scores",
    "likes": 960,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1861",
    "titleSlug": "rotating-the-box",
    "likes": 960,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "808",
    "titleSlug": "soup-servings",
    "likes": 960,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Probability and Statistics"
      }
    ]
  },
  {
    "questionFrontendId": "924",
    "titleSlug": "minimize-malware-spread",
    "likes": 959,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "2364",
    "titleSlug": "count-number-of-bad-pairs",
    "likes": 958,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "1780",
    "titleSlug": "check-if-number-is-a-sum-of-powers-of-three",
    "likes": 956,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2706",
    "titleSlug": "buy-two-chocolates",
    "likes": 953,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1898",
    "titleSlug": "maximum-number-of-removable-characters",
    "likes": 952,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "361",
    "titleSlug": "bomb-enemy",
    "likes": 951,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "358",
    "titleSlug": "rearrange-string-k-distance-apart",
    "likes": 949,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1441",
    "titleSlug": "build-an-array-with-stack-operations",
    "likes": 948,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1415",
    "titleSlug": "the-k-th-lexicographical-string-of-all-happy-strings-of-length-n",
    "likes": 947,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "1284",
    "titleSlug": "minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix",
    "likes": 947,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "850",
    "titleSlug": "rectangle-area-ii",
    "likes": 947,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Line Sweep"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "2222",
    "titleSlug": "number-of-ways-to-select-buildings",
    "likes": 946,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2133",
    "titleSlug": "check-if-every-row-and-column-contains-all-numbers",
    "likes": 944,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2193",
    "titleSlug": "minimum-number-of-moves-to-make-palindrome",
    "likes": 940,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Binary Indexed Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2325",
    "titleSlug": "decode-the-message",
    "likes": 939,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2785",
    "titleSlug": "sort-vowels-in-a-string",
    "likes": 938,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "220",
    "titleSlug": "contains-duplicate-iii",
    "likes": 936,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Bucket Sort"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "2103",
    "titleSlug": "rings-and-rods",
    "likes": 935,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2139",
    "titleSlug": "minimum-moves-to-reach-target-score",
    "likes": 932,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "971",
    "titleSlug": "flip-binary-tree-to-match-preorder-traversal",
    "likes": 932,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2091",
    "titleSlug": "removing-minimum-and-maximum-from-array",
    "likes": 931,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1066",
    "titleSlug": "campus-bikes-ii",
    "likes": 931,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "369",
    "titleSlug": "plus-one-linked-list",
    "likes": 931,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2331",
    "titleSlug": "evaluate-boolean-binary-tree",
    "likes": 929,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1375",
    "titleSlug": "number-of-times-binary-string-is-prefix-aligned",
    "likes": 929,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "1598",
    "titleSlug": "crawler-log-folder",
    "likes": 928,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Stack"
      }
    ]
  },
  {
    "questionFrontendId": "353",
    "titleSlug": "design-snake-game",
    "likes": 924,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Design"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1222",
    "titleSlug": "queens-that-can-attack-the-king",
    "likes": 923,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "598",
    "titleSlug": "range-addition-ii",
    "likes": 921,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1753",
    "titleSlug": "maximum-score-from-removing-stones",
    "likes": 920,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1223",
    "titleSlug": "dice-roll-simulation",
    "likes": 920,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2404",
    "titleSlug": "most-frequent-even-element",
    "likes": 918,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1508",
    "titleSlug": "range-sum-of-sorted-subarray-sums",
    "likes": 918,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2260",
    "titleSlug": "minimum-consecutive-cards-to-pick-up",
    "likes": 915,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "2002",
    "titleSlug": "maximum-product-of-the-length-of-two-palindromic-subsequences",
    "likes": 914,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "2196",
    "titleSlug": "create-binary-tree-from-descriptions",
    "likes": 913,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "247",
    "titleSlug": "strobogrammatic-number-ii",
    "likes": 908,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "2375",
    "titleSlug": "construct-smallest-number-from-di-string",
    "likes": 906,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1981",
    "titleSlug": "minimize-the-difference-between-target-and-chosen-elements",
    "likes": 905,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "885",
    "titleSlug": "spiral-matrix-iii",
    "likes": 903,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "702",
    "titleSlug": "search-in-a-sorted-array-of-unknown-size",
    "likes": 902,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Interactive"
      }
    ]
  },
  {
    "questionFrontendId": "1775",
    "titleSlug": "equal-sum-arrays-with-minimum-number-of-operations",
    "likes": 901,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1851",
    "titleSlug": "minimum-interval-to-include-each-query",
    "likes": 900,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Line Sweep"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "2062",
    "titleSlug": "count-vowel-substrings-of-a-string",
    "likes": 898,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2073",
    "titleSlug": "time-needed-to-buy-tickets",
    "likes": 897,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "514",
    "titleSlug": "freedom-trail",
    "likes": 896,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "2290",
    "titleSlug": "minimum-obstacle-removal-to-reach-corner",
    "likes": 895,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "1637",
    "titleSlug": "widest-vertical-area-between-two-points-containing-no-points",
    "likes": 895,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1545",
    "titleSlug": "find-kth-bit-in-nth-binary-string",
    "likes": 895,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Recursion"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "393",
    "titleSlug": "utf-8-validation",
    "likes": 895,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "1611",
    "titleSlug": "minimum-one-bit-operations-to-make-integers-zero",
    "likes": 893,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Memoization"
      }
    ]
  },
  {
    "questionFrontendId": "372",
    "titleSlug": "super-pow",
    "likes": 893,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Divide and Conquer"
      }
    ]
  },
  {
    "questionFrontendId": "1745",
    "titleSlug": "palindrome-partitioning-iv",
    "likes": 892,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "824",
    "titleSlug": "goat-latin",
    "likes": 891,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "913",
    "titleSlug": "cat-and-mouse",
    "likes": 890,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      },
      {
        "name": "Memoization"
      },
      {
        "name": "Game Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1408",
    "titleSlug": "string-matching-in-an-array",
    "likes": 889,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "String Matching"
      }
    ]
  },
  {
    "questionFrontendId": "1882",
    "titleSlug": "process-tasks-using-servers",
    "likes": 888,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "2017",
    "titleSlug": "grid-game",
    "likes": 887,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1138",
    "titleSlug": "alphabet-board-path",
    "likes": 887,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1640",
    "titleSlug": "check-array-formation-through-concatenation",
    "likes": 886,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "562",
    "titleSlug": "longest-line-of-consecutive-one-in-matrix",
    "likes": 884,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1385",
    "titleSlug": "find-the-distance-value-between-two-arrays",
    "likes": 882,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1386",
    "titleSlug": "cinema-seat-allocation",
    "likes": 881,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2078",
    "titleSlug": "two-furthest-houses-with-different-colors",
    "likes": 880,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1434",
    "titleSlug": "number-of-ways-to-wear-different-hats-to-each-other",
    "likes": 879,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "2121",
    "titleSlug": "intervals-between-identical-elements",
    "likes": 878,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "291",
    "titleSlug": "word-pattern-ii",
    "likes": 878,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "1229",
    "titleSlug": "meeting-scheduler",
    "likes": 877,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1023",
    "titleSlug": "camelcase-matching",
    "likes": 877,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Trie"
      },
      {
        "name": "String Matching"
      }
    ]
  },
  {
    "questionFrontendId": "2079",
    "titleSlug": "watering-plants",
    "likes": 873,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1153",
    "titleSlug": "string-transforms-into-another-string",
    "likes": 873,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2560",
    "titleSlug": "house-robber-iv",
    "likes": 870,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "2435",
    "titleSlug": "paths-in-matrix-whose-sum-is-divisible-by-k",
    "likes": 870,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "267",
    "titleSlug": "palindrome-permutation-ii",
    "likes": 870,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "2100",
    "titleSlug": "find-good-days-to-rob-the-bank",
    "likes": 867,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1450",
    "titleSlug": "number-of-students-doing-homework-at-a-given-time",
    "likes": 866,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "1776",
    "titleSlug": "car-fleet-ii",
    "likes": 865,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "391",
    "titleSlug": "perfect-rectangle",
    "likes": 864,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Line Sweep"
      }
    ]
  },
  {
    "questionFrontendId": "158",
    "titleSlug": "read-n-characters-given-read4-ii-call-multiple-times",
    "likes": 864,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      },
      {
        "name": "Interactive"
      }
    ]
  },
  {
    "questionFrontendId": "1755",
    "titleSlug": "closest-subsequence-sum",
    "likes": 862,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "2413",
    "titleSlug": "smallest-even-multiple",
    "likes": 861,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1632",
    "titleSlug": "rank-transform-of-a-matrix",
    "likes": 861,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "830",
    "titleSlug": "positions-of-large-groups",
    "likes": 858,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "510",
    "titleSlug": "inorder-successor-in-bst-ii",
    "likes": 858,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1513",
    "titleSlug": "number-of-substrings-with-only-1s",
    "likes": 856,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "742",
    "titleSlug": "closest-leaf-in-a-binary-tree",
    "likes": 856,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2517",
    "titleSlug": "maximum-tastiness-of-candy-basket",
    "likes": 854,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1941",
    "titleSlug": "check-if-all-characters-have-equal-number-of-occurrences",
    "likes": 853,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "717",
    "titleSlug": "1-bit-and-2-bit-characters",
    "likes": 853,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "2304",
    "titleSlug": "minimum-path-cost-in-a-grid",
    "likes": 851,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2529",
    "titleSlug": "maximum-count-of-positive-integer-and-negative-integer",
    "likes": 849,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2266",
    "titleSlug": "count-number-of-texts",
    "likes": 848,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "809",
    "titleSlug": "expressive-words",
    "likes": 848,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2171",
    "titleSlug": "removing-minimum-number-of-magic-beans",
    "likes": 846,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Enumeration"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "710",
    "titleSlug": "random-pick-with-blacklist",
    "likes": 846,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Randomized"
      }
    ]
  },
  {
    "questionFrontendId": "420",
    "titleSlug": "strong-password-checker",
    "likes": 842,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "2000",
    "titleSlug": "reverse-prefix-of-word",
    "likes": 838,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1263",
    "titleSlug": "minimum-moves-to-move-a-box-to-their-target-location",
    "likes": 838,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1245",
    "titleSlug": "tree-diameter",
    "likes": 838,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      }
    ]
  },
  {
    "questionFrontendId": "1667",
    "titleSlug": "fix-names-in-a-table",
    "likes": 833,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "737",
    "titleSlug": "sentence-similarity-ii",
    "likes": 832,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      }
    ]
  },
  {
    "questionFrontendId": "1795",
    "titleSlug": "rearrange-products-table",
    "likes": 831,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1120",
    "titleSlug": "maximum-average-subtree",
    "likes": 831,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "511",
    "titleSlug": "game-play-analysis-i",
    "likes": 830,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2407",
    "titleSlug": "longest-increasing-subsequence-ii",
    "likes": 828,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Monotonic Queue"
      }
    ]
  },
  {
    "questionFrontendId": "2220",
    "titleSlug": "minimum-bit-flips-to-convert-number",
    "likes": 828,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "1683",
    "titleSlug": "invalid-tweets",
    "likes": 827,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1779",
    "titleSlug": "find-nearest-point-that-has-the-same-x-or-y-coordinate",
    "likes": 824,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "1593",
    "titleSlug": "split-a-string-into-the-max-number-of-unique-substrings",
    "likes": 824,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "2327",
    "titleSlug": "number-of-people-aware-of-a-secret",
    "likes": 822,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1722",
    "titleSlug": "minimize-hamming-distance-after-swap-operations",
    "likes": 822,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Union Find"
      }
    ]
  },
  {
    "questionFrontendId": "927",
    "titleSlug": "three-equal-parts",
    "likes": 822,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2054",
    "titleSlug": "two-best-non-overlapping-events",
    "likes": 818,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1455",
    "titleSlug": "check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence",
    "likes": 818,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "String Matching"
      }
    ]
  },
  {
    "questionFrontendId": "447",
    "titleSlug": "number-of-boomerangs",
    "likes": 817,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1705",
    "titleSlug": "maximum-number-of-eaten-apples",
    "likes": 816,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1686",
    "titleSlug": "stone-game-vi",
    "likes": 814,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Game Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1817",
    "titleSlug": "finding-the-users-active-minutes",
    "likes": 813,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "2013",
    "titleSlug": "detect-squares",
    "likes": 812,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Design"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1594",
    "titleSlug": "maximum-non-negative-product-in-a-matrix",
    "likes": 812,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1349",
    "titleSlug": "maximum-students-taking-exam",
    "likes": 812,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "2183",
    "titleSlug": "count-array-pairs-divisible-by-k",
    "likes": 811,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1765",
    "titleSlug": "map-of-highest-peak",
    "likes": 811,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "577",
    "titleSlug": "employee-bonus",
    "likes": 811,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "423",
    "titleSlug": "reconstruct-original-digits-from-english",
    "likes": 811,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2063",
    "titleSlug": "vowels-of-all-substrings",
    "likes": 808,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Combinatorics"
      }
    ]
  },
  {
    "questionFrontendId": "1844",
    "titleSlug": "replace-all-digits-with-characters",
    "likes": 808,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2849",
    "titleSlug": "determine-if-a-cell-is-reachable-at-a-given-time",
    "likes": 805,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1164",
    "titleSlug": "product-price-at-a-given-date",
    "likes": 805,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2537",
    "titleSlug": "count-the-number-of-good-subarrays",
    "likes": 804,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "1391",
    "titleSlug": "check-if-there-is-a-valid-path-in-a-grid",
    "likes": 804,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "308",
    "titleSlug": "range-sum-query-2d-mutable",
    "likes": 797,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Design"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1520",
    "titleSlug": "maximum-number-of-non-overlapping-substrings",
    "likes": 796,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "984",
    "titleSlug": "string-without-aaa-or-bbb",
    "likes": 796,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1233",
    "titleSlug": "remove-sub-folders-from-the-filesystem",
    "likes": 795,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "1812",
    "titleSlug": "determine-color-of-a-chessboard-square",
    "likes": 794,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1393",
    "titleSlug": "capital-gainloss",
    "likes": 793,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "683",
    "titleSlug": "k-empty-slots",
    "likes": 793,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "550",
    "titleSlug": "game-play-analysis-iv",
    "likes": 789,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1177",
    "titleSlug": "can-make-palindrome-from-substring",
    "likes": 787,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1086",
    "titleSlug": "high-five",
    "likes": 786,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1992",
    "titleSlug": "find-all-groups-of-farmland",
    "likes": 785,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1542",
    "titleSlug": "find-longest-awesome-substring",
    "likes": 785,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "882",
    "titleSlug": "reachable-nodes-in-subdivided-graph",
    "likes": 785,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Graph"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "2458",
    "titleSlug": "height-of-binary-tree-after-subtree-removal-queries",
    "likes": 784,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "667",
    "titleSlug": "beautiful-arrangement-ii",
    "likes": 784,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2398",
    "titleSlug": "maximum-number-of-robots-within-budget",
    "likes": 780,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2709",
    "titleSlug": "greatest-common-divisor-traversal",
    "likes": 779,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "504",
    "titleSlug": "base-7",
    "likes": 778,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1404",
    "titleSlug": "number-of-steps-to-reduce-a-number-in-binary-representation-to-one",
    "likes": 777,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2642",
    "titleSlug": "design-graph-with-shortest-path-calculator",
    "likes": 776,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Graph"
      },
      {
        "name": "Design"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "2400",
    "titleSlug": "number-of-ways-to-reach-a-position-after-exactly-k-steps",
    "likes": 776,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Combinatorics"
      }
    ]
  },
  {
    "questionFrontendId": "2216",
    "titleSlug": "minimum-deletions-to-make-array-beautiful",
    "likes": 775,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2259",
    "titleSlug": "remove-digit-from-number-to-maximize-result",
    "likes": 774,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2370",
    "titleSlug": "longest-ideal-subsequence",
    "likes": 773,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2085",
    "titleSlug": "count-common-words-with-one-occurrence",
    "likes": 773,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "434",
    "titleSlug": "number-of-segments-in-a-string",
    "likes": 770,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2563",
    "titleSlug": "count-the-number-of-fair-pairs",
    "likes": 769,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2178",
    "titleSlug": "maximum-split-of-positive-even-integers",
    "likes": 769,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1377",
    "titleSlug": "frog-position-after-t-seconds",
    "likes": 769,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "1928",
    "titleSlug": "minimum-cost-to-reach-destination-in-time",
    "likes": 766,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "1899",
    "titleSlug": "merge-triplets-to-form-target-triplet",
    "likes": 766,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1798",
    "titleSlug": "maximum-number-of-consecutive-values-you-can-make",
    "likes": 765,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2321",
    "titleSlug": "maximum-score-of-spliced-array",
    "likes": 764,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2037",
    "titleSlug": "minimum-number-of-moves-to-seat-everyone",
    "likes": 764,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1244",
    "titleSlug": "design-a-leaderboard",
    "likes": 764,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Design"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2812",
    "titleSlug": "find-the-safest-path-in-a-grid",
    "likes": 762,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1324",
    "titleSlug": "print-words-vertically",
    "likes": 762,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2271",
    "titleSlug": "maximum-white-tiles-covered-by-a-carpet",
    "likes": 761,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1370",
    "titleSlug": "increasing-decreasing-string",
    "likes": 760,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1947",
    "titleSlug": "maximum-compatibility-score-sum",
    "likes": 758,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "2406",
    "titleSlug": "divide-intervals-into-minimum-number-of-groups",
    "likes": 757,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "517",
    "titleSlug": "super-washing-machines",
    "likes": 757,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1629",
    "titleSlug": "slowest-key",
    "likes": 756,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2022",
    "titleSlug": "convert-1d-array-into-2d-array",
    "likes": 754,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1850",
    "titleSlug": "minimum-adjacent-swaps-to-reach-the-kth-smallest-number",
    "likes": 754,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "624",
    "titleSlug": "maximum-distance-in-arrays",
    "likes": 754,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1012",
    "titleSlug": "numbers-with-repeated-digits",
    "likes": 753,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "440",
    "titleSlug": "k-th-smallest-in-lexicographical-order",
    "likes": 753,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "2966",
    "titleSlug": "divide-array-into-arrays-with-max-difference",
    "likes": 752,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1829",
    "titleSlug": "maximum-xor-for-each-query",
    "likes": 752,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1216",
    "titleSlug": "valid-palindrome-iii",
    "likes": 751,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1646",
    "titleSlug": "get-maximum-in-generated-array",
    "likes": 750,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1734",
    "titleSlug": "decode-xored-permutation",
    "likes": 748,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "1589",
    "titleSlug": "maximum-sum-obtained-of-any-permutation",
    "likes": 747,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2392",
    "titleSlug": "build-a-matrix-with-conditions",
    "likes": 746,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1433",
    "titleSlug": "check-if-a-string-can-break-another-string",
    "likes": 746,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1030",
    "titleSlug": "matrix-cells-in-distance-order",
    "likes": 744,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2971",
    "titleSlug": "find-polygon-with-the-largest-perimeter",
    "likes": 743,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1184",
    "titleSlug": "distance-between-bus-stops",
    "likes": 742,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "564",
    "titleSlug": "find-the-closest-palindrome",
    "likes": 742,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1534",
    "titleSlug": "count-good-triplets",
    "likes": 740,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "1068",
    "titleSlug": "product-sales-analysis-i",
    "likes": 740,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2053",
    "titleSlug": "kth-distinct-string-in-an-array",
    "likes": 739,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "788",
    "titleSlug": "rotated-digits",
    "likes": 739,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1652",
    "titleSlug": "defuse-the-bomb",
    "likes": 738,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "1451",
    "titleSlug": "rearrange-words-in-a-sentence",
    "likes": 738,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2294",
    "titleSlug": "partition-array-such-that-maximum-difference-is-k",
    "likes": 733,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2381",
    "titleSlug": "shifting-letters-ii",
    "likes": 732,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2032",
    "titleSlug": "two-out-of-three",
    "likes": 730,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "825",
    "titleSlug": "friends-of-appropriate-ages",
    "likes": 730,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1072",
    "titleSlug": "flip-columns-for-maximum-number-of-equal-rows",
    "likes": 729,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1670",
    "titleSlug": "design-front-middle-back-queue",
    "likes": 728,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Linked List"
      },
      {
        "name": "Design"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Data Stream"
      }
    ]
  },
  {
    "questionFrontendId": "1839",
    "titleSlug": "longest-substring-of-all-vowels-in-order",
    "likes": 726,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "2864",
    "titleSlug": "maximum-odd-binary-number",
    "likes": 724,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1573",
    "titleSlug": "number-of-ways-to-split-a-string",
    "likes": 723,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "900",
    "titleSlug": "rle-iterator",
    "likes": 719,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Design"
      },
      {
        "name": "Counting"
      },
      {
        "name": "Iterator"
      }
    ]
  },
  {
    "questionFrontendId": "681",
    "titleSlug": "next-closest-time",
    "likes": 718,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "1934",
    "titleSlug": "confirmation-rate",
    "likes": 717,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1616",
    "titleSlug": "split-two-strings-to-make-palindrome",
    "likes": 717,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1792",
    "titleSlug": "maximum-average-pass-ratio",
    "likes": 716,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1179",
    "titleSlug": "reformat-department-table",
    "likes": 716,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1018",
    "titleSlug": "binary-prefix-divisible-by-5",
    "likes": 716,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2285",
    "titleSlug": "maximum-total-importance-of-roads",
    "likes": 715,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Greedy"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "2326",
    "titleSlug": "spiral-matrix-iv",
    "likes": 714,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Linked List"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2195",
    "titleSlug": "append-k-integers-with-minimal-sum",
    "likes": 713,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1800",
    "titleSlug": "maximum-ascending-subarray-sum",
    "likes": 709,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "251",
    "titleSlug": "flatten-2d-vector",
    "likes": 709,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Design"
      },
      {
        "name": "Iterator"
      }
    ]
  },
  {
    "questionFrontendId": "2129",
    "titleSlug": "capitalize-the-title",
    "likes": 708,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "903",
    "titleSlug": "valid-permutations-for-di-sequence",
    "likes": 708,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2379",
    "titleSlug": "minimum-recolors-to-get-k-consecutive-black-blocks",
    "likes": 707,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "1084",
    "titleSlug": "sales-analysis-iii",
    "likes": 707,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2124",
    "titleSlug": "check-if-all-as-appears-before-all-bs",
    "likes": 706,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2164",
    "titleSlug": "sort-even-and-odd-indices-independently",
    "likes": 705,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "891",
    "titleSlug": "sum-of-subsequence-widths",
    "likes": 705,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "551",
    "titleSlug": "student-attendance-record-i",
    "likes": 705,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1703",
    "titleSlug": "minimum-adjacent-swaps-for-k-consecutive-ones",
    "likes": 703,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1034",
    "titleSlug": "coloring-a-border",
    "likes": 701,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "762",
    "titleSlug": "prime-number-of-set-bits-in-binary-representation",
    "likes": 700,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "757",
    "titleSlug": "set-intersection-size-at-least-two",
    "likes": 700,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "537",
    "titleSlug": "complex-number-multiplication",
    "likes": 700,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "651",
    "titleSlug": "4-keys-keyboard",
    "likes": 699,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2373",
    "titleSlug": "largest-local-values-in-a-matrix",
    "likes": 698,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1059",
    "titleSlug": "all-paths-from-source-lead-to-destination",
    "likes": 698,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "722",
    "titleSlug": "remove-comments",
    "likes": 698,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1139",
    "titleSlug": "largest-1-bordered-square",
    "likes": 697,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2206",
    "titleSlug": "divide-array-into-equal-pairs",
    "likes": 696,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1193",
    "titleSlug": "monthly-transactions-i",
    "likes": 696,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "949",
    "titleSlug": "largest-time-for-given-digits",
    "likes": 696,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "1741",
    "titleSlug": "find-total-time-spent-by-each-employee",
    "likes": 694,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1321",
    "titleSlug": "restaurant-growth",
    "likes": 694,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "408",
    "titleSlug": "valid-word-abbreviation",
    "likes": 694,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2248",
    "titleSlug": "intersection-of-multiple-arrays",
    "likes": 693,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2154",
    "titleSlug": "keep-multiplying-found-values-by-two",
    "likes": 693,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "484",
    "titleSlug": "find-permutation",
    "likes": 693,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2258",
    "titleSlug": "escape-the-spreading-fire",
    "likes": 692,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1568",
    "titleSlug": "minimum-number-of-days-to-disconnect-island",
    "likes": 692,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Strongly Connected Component"
      }
    ]
  },
  {
    "questionFrontendId": "1774",
    "titleSlug": "closest-dessert-cost",
    "likes": 691,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "761",
    "titleSlug": "special-binary-string",
    "likes": 691,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "2111",
    "titleSlug": "minimum-operations-to-make-the-array-k-increasing",
    "likes": 690,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "2110",
    "titleSlug": "number-of-smooth-descent-periods-of-a-stock",
    "likes": 690,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1170",
    "titleSlug": "compare-strings-by-frequency-of-the-smallest-character",
    "likes": 688,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "492",
    "titleSlug": "construct-the-rectangle",
    "likes": 687,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2233",
    "titleSlug": "maximum-product-after-k-increments",
    "likes": 685,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1471",
    "titleSlug": "the-k-strongest-values-in-an-array",
    "likes": 685,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2023",
    "titleSlug": "number-of-pairs-of-strings-with-concatenation-equal-to-target",
    "likes": 683,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1866",
    "titleSlug": "number-of-ways-to-rearrange-sticks-with-k-sticks-visible",
    "likes": 683,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Combinatorics"
      }
    ]
  },
  {
    "questionFrontendId": "908",
    "titleSlug": "smallest-range-i",
    "likes": 683,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2615",
    "titleSlug": "sum-of-distances",
    "likes": 681,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1449",
    "titleSlug": "form-largest-integer-with-digits-that-add-up-to-target",
    "likes": 680,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "320",
    "titleSlug": "generalized-abbreviation",
    "likes": 680,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2045",
    "titleSlug": "second-minimum-time-to-reach-destination",
    "likes": 679,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "1987",
    "titleSlug": "number-of-unique-good-subsequences",
    "likes": 679,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2718",
    "titleSlug": "sum-of-matrix-after-queries",
    "likes": 678,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "2516",
    "titleSlug": "take-k-of-each-character-from-left-and-right",
    "likes": 678,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "1965",
    "titleSlug": "employees-with-missing-information",
    "likes": 677,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2342",
    "titleSlug": "max-sum-of-a-pair-with-equal-sum-of-digits",
    "likes": 675,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1967",
    "titleSlug": "number-of-strings-that-appear-as-substrings-in-word",
    "likes": 675,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1240",
    "titleSlug": "tiling-a-rectangle-with-the-fewest-squares",
    "likes": 674,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "2311",
    "titleSlug": "longest-binary-subsequence-less-than-or-equal-to-k",
    "likes": 673,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Memoization"
      }
    ]
  },
  {
    "questionFrontendId": "1080",
    "titleSlug": "insufficient-nodes-in-root-to-leaf-paths",
    "likes": 672,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1974",
    "titleSlug": "minimum-time-to-type-word-using-special-typewriter",
    "likes": 671,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1115",
    "titleSlug": "print-foobar-alternately",
    "likes": 671,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Concurrency"
      }
    ]
  },
  {
    "questionFrontendId": "774",
    "titleSlug": "minimize-max-distance-to-gas-station",
    "likes": 671,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "2335",
    "titleSlug": "minimum-amount-of-time-to-fill-cups",
    "likes": 670,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "2185",
    "titleSlug": "counting-words-with-a-given-prefix",
    "likes": 670,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "String Matching"
      }
    ]
  },
  {
    "questionFrontendId": "1713",
    "titleSlug": "minimum-operations-to-make-a-subsequence",
    "likes": 670,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2040",
    "titleSlug": "kth-smallest-product-of-two-sorted-arrays",
    "likes": 669,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "1128",
    "titleSlug": "number-of-equivalent-domino-pairs",
    "likes": 669,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2135",
    "titleSlug": "count-words-obtained-after-adding-a-letter",
    "likes": 667,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "360",
    "titleSlug": "sort-transformed-array",
    "likes": 667,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "281",
    "titleSlug": "zigzag-iterator",
    "likes": 666,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Design"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Iterator"
      }
    ]
  },
  {
    "questionFrontendId": "1879",
    "titleSlug": "minimum-xor-sum-of-two-arrays",
    "likes": 665,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "170",
    "titleSlug": "two-sum-iii-data-structure-design",
    "likes": 665,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Design"
      },
      {
        "name": "Data Stream"
      }
    ]
  },
  {
    "questionFrontendId": "2498",
    "titleSlug": "frog-jump-ii",
    "likes": 663,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2341",
    "titleSlug": "maximum-number-of-pairs-in-array",
    "likes": 663,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2074",
    "titleSlug": "reverse-nodes-in-even-length-groups",
    "likes": 660,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      }
    ]
  },
  {
    "questionFrontendId": "2467",
    "titleSlug": "most-profitable-path-in-a-tree",
    "likes": 659,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "1730",
    "titleSlug": "shortest-path-to-get-food",
    "likes": 659,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1045",
    "titleSlug": "customers-who-bought-all-products",
    "likes": 659,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2665",
    "titleSlug": "counter-ii",
    "likes": 658,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2210",
    "titleSlug": "count-hills-and-valleys-in-an-array",
    "likes": 658,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "1036",
    "titleSlug": "escape-a-large-maze",
    "likes": 658,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "601",
    "titleSlug": "human-traffic-of-stadium",
    "likes": 658,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "457",
    "titleSlug": "circular-array-loop",
    "likes": 656,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "2535",
    "titleSlug": "difference-between-element-sum-and-digit-sum-of-an-array",
    "likes": 655,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2163",
    "titleSlug": "minimum-difference-in-sums-after-removal-of-elements",
    "likes": 655,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1062",
    "titleSlug": "longest-repeating-substring",
    "likes": 655,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "Suffix Array"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "2358",
    "titleSlug": "maximum-number-of-groups-entering-a-competition",
    "likes": 653,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2203",
    "titleSlug": "minimum-weighted-subgraph-with-the-required-paths",
    "likes": 653,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Graph"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "2119",
    "titleSlug": "a-number-after-a-double-reversal",
    "likes": 653,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2635",
    "titleSlug": "apply-transform-over-each-element-in-array",
    "likes": 652,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2368",
    "titleSlug": "reachable-nodes-with-restrictions",
    "likes": 651,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "2177",
    "titleSlug": "find-three-consecutive-integers-that-sum-to-a-given-number",
    "likes": 651,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2087",
    "titleSlug": "minimum-cost-homecoming-of-a-robot-in-a-grid",
    "likes": 651,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1668",
    "titleSlug": "maximum-repeating-substring",
    "likes": 651,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "String Matching"
      }
    ]
  },
  {
    "questionFrontendId": "2762",
    "titleSlug": "continuous-subarrays",
    "likes": 650,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Ordered Set"
      },
      {
        "name": "Monotonic Queue"
      }
    ]
  },
  {
    "questionFrontendId": "2602",
    "titleSlug": "minimum-operations-to-make-all-array-elements-equal",
    "likes": 650,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2817",
    "titleSlug": "minimum-absolute-difference-between-elements-with-constraint",
    "likes": 649,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "2167",
    "titleSlug": "minimum-time-to-remove-all-cars-containing-illegal-goods",
    "likes": 649,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1206",
    "titleSlug": "design-skiplist",
    "likes": 649,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Design"
      }
    ]
  },
  {
    "questionFrontendId": "999",
    "titleSlug": "available-captures-for-rook",
    "likes": 648,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2058",
    "titleSlug": "find-the-minimum-and-maximum-number-of-nodes-between-critical-points",
    "likes": 647,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      }
    ]
  },
  {
    "questionFrontendId": "2416",
    "titleSlug": "sum-of-prefix-scores-of-strings",
    "likes": 646,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Trie"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2211",
    "titleSlug": "count-collisions-on-a-road",
    "likes": 646,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "928",
    "titleSlug": "minimize-malware-spread-ii",
    "likes": 646,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "2273",
    "titleSlug": "find-resultant-array-after-removing-anagrams",
    "likes": 645,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1147",
    "titleSlug": "longest-chunked-palindrome-decomposition",
    "likes": 645,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "955",
    "titleSlug": "delete-columns-to-make-sorted-ii",
    "likes": 645,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2454",
    "titleSlug": "next-greater-element-iv",
    "likes": 643,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "2337",
    "titleSlug": "move-pieces-to-obtain-a-string",
    "likes": 643,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1674",
    "titleSlug": "minimum-moves-to-make-array-complementary",
    "likes": 643,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1566",
    "titleSlug": "detect-pattern-of-length-m-repeated-k-or-more-times",
    "likes": 642,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "1649",
    "titleSlug": "create-sorted-array-through-instructions",
    "likes": 640,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Merge Sort"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "1562",
    "titleSlug": "find-latest-group-of-size-m",
    "likes": 640,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1087",
    "titleSlug": "brace-expansion",
    "likes": 638,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "1050",
    "titleSlug": "actors-and-directors-who-cooperated-at-least-three-times",
    "likes": 638,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2830",
    "titleSlug": "maximize-the-profit-as-the-salesman",
    "likes": 635,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2039",
    "titleSlug": "the-time-when-the-network-becomes-idle",
    "likes": 635,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "1563",
    "titleSlug": "stone-game-v",
    "likes": 635,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Game Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1550",
    "titleSlug": "three-consecutive-odds",
    "likes": 635,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "603",
    "titleSlug": "consecutive-available-seats",
    "likes": 635,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2261",
    "titleSlug": "k-divisible-elements-subarrays",
    "likes": 634,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Trie"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "Hash Function"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2148",
    "titleSlug": "count-elements-with-strictly-smaller-and-greater-elements",
    "likes": 633,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2434",
    "titleSlug": "using-a-robot-to-print-the-lexicographically-smallest-string",
    "likes": 632,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2545",
    "titleSlug": "sort-the-students-by-their-kth-score",
    "likes": 631,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2182",
    "titleSlug": "construct-string-with-repeat-limit",
    "likes": 630,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2059",
    "titleSlug": "minimum-operations-to-convert-number",
    "likes": 630,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "1204",
    "titleSlug": "last-person-to-fit-in-the-bus",
    "likes": 629,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2423",
    "titleSlug": "remove-letter-to-equalize-frequency",
    "likes": 628,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2080",
    "titleSlug": "range-frequency-queries",
    "likes": 628,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Design"
      },
      {
        "name": "Segment Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1158",
    "titleSlug": "market-analysis-i",
    "likes": 628,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2831",
    "titleSlug": "find-the-longest-equal-subarray",
    "likes": 627,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "2350",
    "titleSlug": "shortest-impossible-sequence-of-rolls",
    "likes": 627,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2150",
    "titleSlug": "find-all-lonely-numbers-in-the-array",
    "likes": 627,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "868",
    "titleSlug": "binary-gap",
    "likes": 627,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "1644",
    "titleSlug": "lowest-common-ancestor-of-a-binary-tree-ii",
    "likes": 626,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1131",
    "titleSlug": "maximum-of-absolute-value-expression",
    "likes": 625,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1953",
    "titleSlug": "maximum-number-of-weeks-for-which-you-can-work",
    "likes": 624,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2269",
    "titleSlug": "find-the-k-beauty-of-a-number",
    "likes": 623,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "2176",
    "titleSlug": "count-equal-and-divisible-pairs-in-an-array",
    "likes": 623,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "699",
    "titleSlug": "falling-squares",
    "likes": 623,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "471",
    "titleSlug": "encode-string-with-shortest-length",
    "likes": 622,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1157",
    "titleSlug": "online-majority-element-in-subarray",
    "likes": 621,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Design"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2094",
    "titleSlug": "finding-3-digit-even-numbers",
    "likes": 619,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "1437",
    "titleSlug": "check-if-all-1s-are-at-least-length-k-places-away",
    "likes": 619,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "1591",
    "titleSlug": "strange-printer-ii",
    "likes": 618,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1726",
    "titleSlug": "tuple-with-same-product",
    "likes": 617,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1558",
    "titleSlug": "minimum-numbers-of-function-calls-to-make-target-array",
    "likes": 617,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "1717",
    "titleSlug": "maximum-score-from-removing-substrings",
    "likes": 616,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "750",
    "titleSlug": "number-of-corner-rectangles",
    "likes": 616,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "294",
    "titleSlug": "flip-game-ii",
    "likes": 616,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Memoization"
      },
      {
        "name": "Game Theory"
      }
    ]
  },
  {
    "questionFrontendId": "2333",
    "titleSlug": "minimum-sum-of-squared-difference",
    "likes": 615,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "2165",
    "titleSlug": "smallest-value-of-the-rearranged-number",
    "likes": 615,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2471",
    "titleSlug": "minimum-number-of-operations-to-sort-a-binary-tree-by-level",
    "likes": 614,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1995",
    "titleSlug": "count-special-quadruplets",
    "likes": 614,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2295",
    "titleSlug": "replace-elements-in-an-array",
    "likes": 613,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2065",
    "titleSlug": "maximum-path-quality-of-a-graph",
    "likes": 613,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "1527",
    "titleSlug": "patients-with-a-condition",
    "likes": 613,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1407",
    "titleSlug": "top-travellers",
    "likes": 613,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2420",
    "titleSlug": "find-all-good-indices",
    "likes": 611,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1476",
    "titleSlug": "subrectangle-queries",
    "likes": 611,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Design"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1174",
    "titleSlug": "immediate-food-delivery-ii",
    "likes": 611,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "644",
    "titleSlug": "maximum-average-subarray-ii",
    "likes": 611,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2500",
    "titleSlug": "delete-greatest-value-in-each-row",
    "likes": 609,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "760",
    "titleSlug": "find-anagram-mappings",
    "likes": 607,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "2315",
    "titleSlug": "count-asterisks",
    "likes": 606,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2044",
    "titleSlug": "count-number-of-maximum-bitwise-or-subsets",
    "likes": 602,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "1805",
    "titleSlug": "number-of-different-integers-in-a-string",
    "likes": 602,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2179",
    "titleSlug": "count-good-triplets-in-an-array",
    "likes": 601,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Merge Sort"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "1227",
    "titleSlug": "airplane-seat-assignment-probability",
    "likes": 600,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Brainteaser"
      },
      {
        "name": "Probability and Statistics"
      }
    ]
  },
  {
    "questionFrontendId": "1001",
    "titleSlug": "grid-illumination",
    "likes": 600,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "2180",
    "titleSlug": "count-integers-with-even-digit-sum",
    "likes": 599,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2442",
    "titleSlug": "count-number-of-distinct-integers-after-reverse-operations",
    "likes": 598,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2042",
    "titleSlug": "check-if-numbers-are-ascending-in-a-sentence",
    "likes": 598,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2231",
    "titleSlug": "largest-number-after-digit-swaps-by-parity",
    "likes": 597,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "2194",
    "titleSlug": "cells-in-a-range-on-an-excel-sheet",
    "likes": 597,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2076",
    "titleSlug": "process-restricted-friend-requests",
    "likes": 597,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "2217",
    "titleSlug": "find-palindrome-with-fixed-length",
    "likes": 596,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2202",
    "titleSlug": "maximize-the-topmost-element-after-k-moves",
    "likes": 596,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1742",
    "titleSlug": "maximum-number-of-balls-in-a-box",
    "likes": 596,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1945",
    "titleSlug": "sum-of-digits-of-string-after-convert",
    "likes": 595,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1522",
    "titleSlug": "diameter-of-n-ary-tree",
    "likes": 594,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "2317",
    "titleSlug": "maximum-xor-after-operations",
    "likes": 593,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2012",
    "titleSlug": "sum-of-beauty-in-the-array",
    "likes": 593,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "1865",
    "titleSlug": "finding-pairs-with-a-certain-sum",
    "likes": 593,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Design"
      }
    ]
  },
  {
    "questionFrontendId": "1141",
    "titleSlug": "user-activity-for-the-past-30-days-i",
    "likes": 593,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1968",
    "titleSlug": "array-with-elements-not-equal-to-average-of-neighbors",
    "likes": 590,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1606",
    "titleSlug": "find-servers-that-handled-most-number-of-requests",
    "likes": 590,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "2629",
    "titleSlug": "function-composition",
    "likes": 589,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2653",
    "titleSlug": "sliding-subarray-beauty",
    "likes": 587,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "2611",
    "titleSlug": "mice-and-cheese",
    "likes": 587,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1363",
    "titleSlug": "largest-multiple-of-three",
    "likes": 587,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2169",
    "titleSlug": "count-operations-to-obtain-zero",
    "likes": 586,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "246",
    "titleSlug": "strobogrammatic-number",
    "likes": 586,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2685",
    "titleSlug": "count-the-number-of-complete-components",
    "likes": 585,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "960",
    "titleSlug": "delete-columns-to-make-sorted-iii",
    "likes": 585,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "806",
    "titleSlug": "number-of-lines-to-write-string",
    "likes": 585,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "602",
    "titleSlug": "friend-requests-ii-who-has-the-most-friends",
    "likes": 585,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3005",
    "titleSlug": "count-elements-with-maximum-frequency",
    "likes": 584,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2779",
    "titleSlug": "maximum-beauty-of-an-array-after-applying-operation",
    "likes": 584,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1835",
    "titleSlug": "find-xor-sum-of-all-pairs-bitwise-and",
    "likes": 583,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "1163",
    "titleSlug": "last-substring-in-lexicographical-order",
    "likes": 583,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1195",
    "titleSlug": "fizz-buzz-multithreaded",
    "likes": 581,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Concurrency"
      }
    ]
  },
  {
    "questionFrontendId": "1417",
    "titleSlug": "reformat-the-string",
    "likes": 580,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1935",
    "titleSlug": "maximum-number-of-words-you-can-type",
    "likes": 579,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1213",
    "titleSlug": "intersection-of-three-sorted-arrays",
    "likes": 579,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2354",
    "titleSlug": "number-of-excellent-pairs",
    "likes": 578,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2166",
    "titleSlug": "design-bitset",
    "likes": 578,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Design"
      }
    ]
  },
  {
    "questionFrontendId": "1633",
    "titleSlug": "percentage-of-users-attended-a-contest",
    "likes": 578,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2208",
    "titleSlug": "minimum-operations-to-halve-array-sum",
    "likes": 576,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "2070",
    "titleSlug": "most-beautiful-item-for-each-query",
    "likes": 576,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1893",
    "titleSlug": "check-if-all-the-integers-in-a-range-are-covered",
    "likes": 576,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2283",
    "titleSlug": "check-if-number-has-equal-digit-count-and-digit-value",
    "likes": 575,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1265",
    "titleSlug": "print-immutable-linked-list-in-reverse",
    "likes": 574,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "1864",
    "titleSlug": "minimum-number-of-swaps-to-make-the-binary-string-alternating",
    "likes": 573,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1725",
    "titleSlug": "number-of-rectangles-that-can-form-the-largest-square",
    "likes": 573,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "2469",
    "titleSlug": "convert-the-temperature",
    "likes": 571,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2170",
    "titleSlug": "minimum-operations-to-make-the-array-alternating",
    "likes": 571,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2144",
    "titleSlug": "minimum-cost-of-buying-candies-with-discount",
    "likes": 571,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1403",
    "titleSlug": "minimum-subsequence-in-non-increasing-order",
    "likes": 571,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "883",
    "titleSlug": "projection-area-of-3d-shapes",
    "likes": 568,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "157",
    "titleSlug": "read-n-characters-given-read4",
    "likes": 568,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      },
      {
        "name": "Interactive"
      }
    ]
  },
  {
    "questionFrontendId": "1665",
    "titleSlug": "minimum-initial-energy-to-finish-tasks",
    "likes": 567,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1198",
    "titleSlug": "find-smallest-common-element-in-all-rows",
    "likes": 567,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2634",
    "titleSlug": "filter-elements-from-array",
    "likes": 566,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2396",
    "titleSlug": "strictly-palindromic-number",
    "likes": 565,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Brainteaser"
      }
    ]
  },
  {
    "questionFrontendId": "1982",
    "titleSlug": "find-array-given-subset-sums",
    "likes": 565,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Divide and Conquer"
      }
    ]
  },
  {
    "questionFrontendId": "1627",
    "titleSlug": "graph-connectivity-with-threshold",
    "likes": 565,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1166",
    "titleSlug": "design-file-system",
    "likes": 564,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Design"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "1100",
    "titleSlug": "find-k-length-substrings-with-no-repeated-characters",
    "likes": 564,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "1894",
    "titleSlug": "find-the-student-that-will-replace-the-chalk",
    "likes": 563,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Simulation"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "568",
    "titleSlug": "maximum-vacation-days",
    "likes": 563,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "619",
    "titleSlug": "biggest-single-number",
    "likes": 562,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2320",
    "titleSlug": "count-number-of-ways-to-place-houses",
    "likes": 561,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2673",
    "titleSlug": "make-costs-of-paths-equal-in-a-binary-tree",
    "likes": 560,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1610",
    "titleSlug": "maximum-number-of-visible-points",
    "likes": 560,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "444",
    "titleSlug": "sequence-reconstruction",
    "likes": 560,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      }
    ]
  },
  {
    "questionFrontendId": "2186",
    "titleSlug": "minimum-number-of-steps-to-make-two-strings-anagram-ii",
    "likes": 559,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1891",
    "titleSlug": "cutting-ribbons",
    "likes": 559,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "2771",
    "titleSlug": "longest-non-decreasing-subarray-from-two-arrays",
    "likes": 558,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2376",
    "titleSlug": "count-special-integers",
    "likes": 558,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1880",
    "titleSlug": "check-if-word-equals-summation-of-two-words",
    "likes": 558,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1942",
    "titleSlug": "the-number-of-the-smallest-unoccupied-chair",
    "likes": 557,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "2384",
    "titleSlug": "largest-palindromic-number",
    "likes": 556,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2276",
    "titleSlug": "count-integers-in-intervals",
    "likes": 555,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Design"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "1959",
    "titleSlug": "minimum-total-space-wasted-with-k-resizing-operations",
    "likes": 554,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1536",
    "titleSlug": "minimum-swaps-to-arrange-a-binary-grid",
    "likes": 554,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2427",
    "titleSlug": "number-of-common-factors",
    "likes": 553,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Enumeration"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "892",
    "titleSlug": "surface-area-of-3d-shapes",
    "likes": 553,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2386",
    "titleSlug": "find-the-k-sum-of-an-array",
    "likes": 552,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1932",
    "titleSlug": "merge-bsts-to-create-single-bst",
    "likes": 551,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1285",
    "titleSlug": "find-the-start-and-end-number-of-continuous-ranges",
    "likes": 551,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2453",
    "titleSlug": "destroy-sequential-targets",
    "likes": 550,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1576",
    "titleSlug": "replace-all-s-to-avoid-consecutive-repeating-characters",
    "likes": 549,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2488",
    "titleSlug": "count-subarrays-with-median-k",
    "likes": 548,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2188",
    "titleSlug": "minimum-time-to-finish-the-race",
    "likes": 547,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2556",
    "titleSlug": "disconnect-path-in-a-binary-matrix-by-at-most-one-flip",
    "likes": 546,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2239",
    "titleSlug": "find-closest-number-to-zero",
    "likes": 546,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "1429",
    "titleSlug": "first-unique-number",
    "likes": 546,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Design"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Data Stream"
      }
    ]
  },
  {
    "questionFrontendId": "2621",
    "titleSlug": "sleep",
    "likes": 544,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2576",
    "titleSlug": "find-the-maximum-number-of-marked-indices",
    "likes": 544,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2531",
    "titleSlug": "make-number-of-distinct-characters-equal",
    "likes": 544,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2275",
    "titleSlug": "largest-combination-with-bitwise-and-greater-than-zero",
    "likes": 544,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2270",
    "titleSlug": "number-of-ways-to-split-array",
    "likes": 544,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2411",
    "titleSlug": "smallest-subarrays-with-maximum-bitwise-or",
    "likes": 543,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "2109",
    "titleSlug": "adding-spaces-to-a-string",
    "likes": 541,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2106",
    "titleSlug": "maximum-fruits-harvested-after-at-most-k-steps",
    "likes": 541,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2713",
    "titleSlug": "maximum-strictly-increasing-cells-in-a-matrix",
    "likes": 540,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Memoization"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1214",
    "titleSlug": "two-sum-bsts",
    "likes": 540,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "794",
    "titleSlug": "valid-tic-tac-toe-state",
    "likes": 540,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "610",
    "titleSlug": "triangle-judgement",
    "likes": 540,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2704",
    "titleSlug": "to-be-or-not-to-be",
    "likes": 539,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2363",
    "titleSlug": "merge-similar-items",
    "likes": 539,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "1718",
    "titleSlug": "construct-the-lexicographically-largest-valid-sequence",
    "likes": 539,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "2296",
    "titleSlug": "design-a-text-editor",
    "likes": 538,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Design"
      },
      {
        "name": "Simulation"
      },
      {
        "name": "Doubly-Linked List"
      }
    ]
  },
  {
    "questionFrontendId": "2741",
    "titleSlug": "special-permutations",
    "likes": 537,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "1975",
    "titleSlug": "maximum-matrix-sum",
    "likes": 537,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1224",
    "titleSlug": "maximum-equal-frequency",
    "likes": 536,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "2641",
    "titleSlug": "cousins-in-binary-tree-ii",
    "likes": 535,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2033",
    "titleSlug": "minimum-operations-to-make-a-uni-value-grid",
    "likes": 535,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1643",
    "titleSlug": "kth-smallest-instructions",
    "likes": 535,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Combinatorics"
      }
    ]
  },
  {
    "questionFrontendId": "192",
    "titleSlug": "word-frequency",
    "likes": 535,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Shell"
      }
    ]
  },
  {
    "questionFrontendId": "2555",
    "titleSlug": "maximize-win-from-two-segments",
    "likes": 534,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "2344",
    "titleSlug": "minimum-deletions-to-make-array-divisible",
    "likes": 534,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "2243",
    "titleSlug": "calculate-digit-sum-of-a-string",
    "likes": 534,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1169",
    "titleSlug": "invalid-transactions",
    "likes": 534,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "753",
    "titleSlug": "cracking-the-safe",
    "likes": 534,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Eulerian Circuit"
      }
    ]
  },
  {
    "questionFrontendId": "2594",
    "titleSlug": "minimum-time-to-repair-cars",
    "likes": 532,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "2312",
    "titleSlug": "selling-pieces-of-wood",
    "likes": 532,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Memoization"
      }
    ]
  },
  {
    "questionFrontendId": "2126",
    "titleSlug": "destroying-asteroids",
    "likes": 532,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1754",
    "titleSlug": "largest-merge-of-two-strings",
    "likes": 532,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1693",
    "titleSlug": "daily-leads-and-partners",
    "likes": 532,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1771",
    "titleSlug": "maximize-palindrome-length-from-subsequences",
    "likes": 531,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1628",
    "titleSlug": "design-an-expression-tree-with-evaluate-function",
    "likes": 530,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Design"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2626",
    "titleSlug": "array-reduce-transformation",
    "likes": 529,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2623",
    "titleSlug": "memoize",
    "likes": 529,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "1211",
    "titleSlug": "queries-quality-and-percentage",
    "likes": 529,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "748",
    "titleSlug": "shortest-completing-word",
    "likes": 528,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1906",
    "titleSlug": "minimum-absolute-difference-queries",
    "likes": 527,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "798",
    "titleSlug": "smallest-rotation-with-highest-score",
    "likes": 527,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2460",
    "titleSlug": "apply-operations-to-an-array",
    "likes": 526,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1617",
    "titleSlug": "count-subtrees-with-max-distance-between-cities",
    "likes": 526,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Enumeration"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "2334",
    "titleSlug": "subarray-with-elements-greater-than-varying-threshold",
    "likes": 525,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "2120",
    "titleSlug": "execution-of-all-suffix-instructions-staying-in-a-grid",
    "likes": 525,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2597",
    "titleSlug": "the-number-of-beautiful-subsets",
    "likes": 524,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2255",
    "titleSlug": "count-prefixes-of-a-given-string",
    "likes": 524,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1274",
    "titleSlug": "number-of-ships-in-a-rectangle",
    "likes": 524,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Interactive"
      }
    ]
  },
  {
    "questionFrontendId": "2426",
    "titleSlug": "number-of-pairs-satisfying-inequality",
    "likes": 523,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Merge Sort"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "2395",
    "titleSlug": "find-subarrays-with-equal-sum",
    "likes": 523,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "1729",
    "titleSlug": "find-followers-count",
    "likes": 523,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "893",
    "titleSlug": "groups-of-special-equivalent-strings",
    "likes": 523,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2086",
    "titleSlug": "minimum-number-of-food-buckets-to-feed-the-hamsters",
    "likes": 522,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "756",
    "titleSlug": "pyramid-transition-matrix",
    "likes": 522,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "302",
    "titleSlug": "smallest-rectangle-enclosing-black-pixels",
    "likes": 522,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2365",
    "titleSlug": "task-scheduler-ii",
    "likes": 521,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1165",
    "titleSlug": "single-row-keyboard",
    "likes": 521,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "812",
    "titleSlug": "largest-triangle-area",
    "likes": 520,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      }
    ]
  },
  {
    "questionFrontendId": "2662",
    "titleSlug": "minimum-cost-of-a-path-with-special-roads",
    "likes": 519,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "2583",
    "titleSlug": "kth-largest-sum-in-a-binary-tree",
    "likes": 519,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2457",
    "titleSlug": "minimum-addition-to-make-integer-beautiful",
    "likes": 519,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2293",
    "titleSlug": "min-max-game",
    "likes": 519,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2659",
    "titleSlug": "make-array-empty",
    "likes": 518,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "2068",
    "titleSlug": "check-whether-two-strings-are-almost-equivalent",
    "likes": 518,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1242",
    "titleSlug": "web-crawler-multithreaded",
    "likes": 518,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Concurrency"
      }
    ]
  },
  {
    "questionFrontendId": "2799",
    "titleSlug": "count-complete-subarrays-in-an-array",
    "likes": 517,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "2645",
    "titleSlug": "minimum-additions-to-make-valid-string",
    "likes": 516,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2577",
    "titleSlug": "minimum-time-to-visit-a-cell-in-a-grid",
    "likes": 516,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "431",
    "titleSlug": "encode-n-ary-tree-to-binary-tree",
    "likes": 516,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Design"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2835",
    "titleSlug": "minimum-operations-to-form-subsequence-with-target-sum",
    "likes": 515,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2575",
    "titleSlug": "find-the-divisibility-array-of-a-string",
    "likes": 515,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1656",
    "titleSlug": "design-an-ordered-stream",
    "likes": 515,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Design"
      },
      {
        "name": "Data Stream"
      }
    ]
  },
  {
    "questionFrontendId": "1075",
    "titleSlug": "project-employees-i",
    "likes": 515,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1803",
    "titleSlug": "count-pairs-with-xor-in-a-range",
    "likes": 514,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "1796",
    "titleSlug": "second-largest-digit-in-a-string",
    "likes": 514,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "998",
    "titleSlug": "maximum-binary-tree-ii",
    "likes": 514,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2571",
    "titleSlug": "minimum-operations-to-reduce-an-integer-to-0",
    "likes": 513,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2712",
    "titleSlug": "minimum-cost-to-make-all-characters-equal",
    "likes": 512,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2242",
    "titleSlug": "maximum-score-of-a-node-sequence",
    "likes": 511,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2071",
    "titleSlug": "maximum-number-of-tasks-you-can-assign",
    "likes": 511,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Monotonic Queue"
      }
    ]
  },
  {
    "questionFrontendId": "2001",
    "titleSlug": "number-of-pairs-of-interchangeable-rectangles",
    "likes": 511,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Counting"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1952",
    "titleSlug": "three-divisors",
    "likes": 511,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Enumeration"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1188",
    "titleSlug": "design-bounded-blocking-queue",
    "likes": 511,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Concurrency"
      }
    ]
  },
  {
    "questionFrontendId": "1955",
    "titleSlug": "count-number-of-special-subsequences",
    "likes": 510,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1849",
    "titleSlug": "splitting-a-string-into-descending-consecutive-values",
    "likes": 510,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "1182",
    "titleSlug": "shortest-distance-to-target-color",
    "likes": 509,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2781",
    "titleSlug": "length-of-the-longest-valid-substring",
    "likes": 508,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "1869",
    "titleSlug": "longer-contiguous-segments-of-ones-than-zeros",
    "likes": 507,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1017",
    "titleSlug": "convert-to-base-2",
    "likes": 507,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2441",
    "titleSlug": "largest-positive-integer-that-exists-with-its-negative",
    "likes": 506,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2145",
    "titleSlug": "count-the-hidden-sequences",
    "likes": 506,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1977",
    "titleSlug": "number-of-ways-to-separate-numbers",
    "likes": 504,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Suffix Array"
      }
    ]
  },
  {
    "questionFrontendId": "1237",
    "titleSlug": "find-positive-integer-solution-for-a-given-equation",
    "likes": 504,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Interactive"
      }
    ]
  },
  {
    "questionFrontendId": "2719",
    "titleSlug": "count-of-integers",
    "likes": 503,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1701",
    "titleSlug": "average-waiting-time",
    "likes": 503,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1117",
    "titleSlug": "building-h2o",
    "likes": 502,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Concurrency"
      }
    ]
  },
  {
    "questionFrontendId": "2808",
    "titleSlug": "minimum-seconds-to-equalize-a-circular-array",
    "likes": 501,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "2267",
    "titleSlug": "check-if-there-is-a-valid-parentheses-string-path",
    "likes": 500,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2172",
    "titleSlug": "maximum-and-sum-of-array",
    "likes": 500,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "1837",
    "titleSlug": "sum-of-digits-in-base-k",
    "likes": 500,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1301",
    "titleSlug": "number-of-paths-with-max-score",
    "likes": 500,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1847",
    "titleSlug": "closest-room",
    "likes": 499,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2278",
    "titleSlug": "percentage-of-letter-in-string",
    "likes": 498,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "585",
    "titleSlug": "investments-in-2016",
    "likes": 498,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "245",
    "titleSlug": "shortest-word-distance-iii",
    "likes": 498,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "522",
    "titleSlug": "longest-uncommon-subsequence-ii",
    "likes": 497,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2209",
    "titleSlug": "minimum-white-tiles-after-covering-with-carpets",
    "likes": 494,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2155",
    "titleSlug": "all-divisions-with-the-highest-score-of-a-binary-array",
    "likes": 493,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "1738",
    "titleSlug": "find-kth-largest-xor-coordinate-value",
    "likes": 493,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Prefix Sum"
      },
      {
        "name": "Quickselect"
      }
    ]
  },
  {
    "questionFrontendId": "1250",
    "titleSlug": "check-if-it-is-a-good-array",
    "likes": 493,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1307",
    "titleSlug": "verbal-arithmetic-puzzle",
    "likes": 489,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "1341",
    "titleSlug": "movie-rating",
    "likes": 488,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1088",
    "titleSlug": "confusing-number-ii",
    "likes": 488,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "2207",
    "titleSlug": "maximize-number-of-subsequences-in-a-string",
    "likes": 487,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2146",
    "titleSlug": "k-highest-ranked-items-within-a-price-range",
    "likes": 487,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2506",
    "titleSlug": "count-pairs-of-similar-strings",
    "likes": 486,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2414",
    "titleSlug": "length-of-the-longest-alphabetical-continuous-substring",
    "likes": 485,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1619",
    "titleSlug": "mean-of-array-after-removing-some-elements",
    "likes": 485,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1469",
    "titleSlug": "find-all-the-lonely-nodes",
    "likes": 485,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2212",
    "titleSlug": "maximum-points-in-an-archery-competition",
    "likes": 484,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2097",
    "titleSlug": "valid-arrangement-of-pairs",
    "likes": 484,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Eulerian Circuit"
      }
    ]
  },
  {
    "questionFrontendId": "1702",
    "titleSlug": "maximum-binary-string-after-change",
    "likes": 484,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2824",
    "titleSlug": "count-pairs-whose-sum-is-less-than-target",
    "likes": 483,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2250",
    "titleSlug": "count-number-of-rectangles-containing-each-point",
    "likes": 483,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1998",
    "titleSlug": "gcd-sort-of-an-array",
    "likes": 482,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1409",
    "titleSlug": "queries-on-a-permutation-with-key",
    "likes": 482,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1397",
    "titleSlug": "find-all-good-strings",
    "likes": 482,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "String Matching"
      }
    ]
  },
  {
    "questionFrontendId": "663",
    "titleSlug": "equal-tree-partition",
    "likes": 482,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1927",
    "titleSlug": "sum-game",
    "likes": 481,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Game Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1556",
    "titleSlug": "thousand-separator",
    "likes": 481,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "640",
    "titleSlug": "solve-the-equation",
    "likes": 481,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1152",
    "titleSlug": "analyze-user-website-visit-pattern",
    "likes": 480,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1961",
    "titleSlug": "check-if-string-is-a-prefix-of-array",
    "likes": 479,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1505",
    "titleSlug": "minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits",
    "likes": 479,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1078",
    "titleSlug": "occurrences-after-bigram",
    "likes": 479,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2484",
    "titleSlug": "count-palindromic-subsequences",
    "likes": 478,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2319",
    "titleSlug": "check-if-matrix-is-x-matrix",
    "likes": 478,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2151",
    "titleSlug": "maximum-good-people-based-on-statements",
    "likes": 478,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "1997",
    "titleSlug": "first-day-where-you-have-been-in-all-the-rooms",
    "likes": 478,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1374",
    "titleSlug": "generate-a-string-with-characters-that-have-odd-counts",
    "likes": 478,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2608",
    "titleSlug": "shortest-cycle-in-a-graph",
    "likes": 477,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "1807",
    "titleSlug": "evaluate-the-bracket-pairs-of-a-string",
    "likes": 477,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "439",
    "titleSlug": "ternary-expression-parser",
    "likes": 477,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "2845",
    "titleSlug": "count-of-interesting-subarrays",
    "likes": 476,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1096",
    "titleSlug": "brace-expansion-ii",
    "likes": 476,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "2588",
    "titleSlug": "count-the-number-of-beautiful-subarrays",
    "likes": 475,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2520",
    "titleSlug": "count-the-digits-that-divide-a-number",
    "likes": 474,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2338",
    "titleSlug": "count-the-number-of-ideal-arrays",
    "likes": 474,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Combinatorics"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1330",
    "titleSlug": "reverse-subarray-to-maximize-array-value",
    "likes": 474,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1116",
    "titleSlug": "print-zero-even-odd",
    "likes": 474,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Concurrency"
      }
    ]
  },
  {
    "questionFrontendId": "2807",
    "titleSlug": "insert-greatest-common-divisors-in-linked-list",
    "likes": 473,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Math"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "2410",
    "titleSlug": "maximum-matching-of-players-with-trainers",
    "likes": 473,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2030",
    "titleSlug": "smallest-k-length-subsequence-with-occurrences-of-a-letter",
    "likes": 473,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "2731",
    "titleSlug": "movement-of-robots",
    "likes": 472,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Brainteaser"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "497",
    "titleSlug": "random-point-in-non-overlapping-rectangles",
    "likes": 472,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Reservoir Sampling"
      },
      {
        "name": "Prefix Sum"
      },
      {
        "name": "Ordered Set"
      },
      {
        "name": "Randomized"
      }
    ]
  },
  {
    "questionFrontendId": "1916",
    "titleSlug": "count-ways-to-build-rooms-in-an-ant-colony",
    "likes": 471,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      },
      {
        "name": "Combinatorics"
      }
    ]
  },
  {
    "questionFrontendId": "1172",
    "titleSlug": "dinner-plate-stacks",
    "likes": 471,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Design"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "2430",
    "titleSlug": "maximum-deletions-on-a-string",
    "likes": 470,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "String Matching"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "2309",
    "titleSlug": "greatest-english-letter-in-upper-and-lower-case",
    "likes": 470,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2128",
    "titleSlug": "remove-all-ones-with-row-and-column-flips",
    "likes": 470,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "933",
    "titleSlug": "number-of-recent-calls",
    "likes": 470,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Design"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Data Stream"
      }
    ]
  },
  {
    "questionFrontendId": "635",
    "titleSlug": "design-log-storage-system",
    "likes": 470,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Design"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "499",
    "titleSlug": "the-maze-iii",
    "likes": 470,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "2491",
    "titleSlug": "divide-players-into-teams-of-equal-skill",
    "likes": 469,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1923",
    "titleSlug": "longest-common-subpath",
    "likes": 469,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "Suffix Array"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "736",
    "titleSlug": "parse-lisp-expression",
    "likes": 468,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "2850",
    "titleSlug": "minimum-moves-to-spread-stones-over-grid",
    "likes": 467,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2816",
    "titleSlug": "double-a-number-represented-as-a-linked-list",
    "likes": 467,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Math"
      },
      {
        "name": "Stack"
      }
    ]
  },
  {
    "questionFrontendId": "2652",
    "titleSlug": "sum-multiples",
    "likes": 467,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2399",
    "titleSlug": "check-distances-between-same-letters",
    "likes": 466,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2028",
    "titleSlug": "find-missing-observations",
    "likes": 465,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "655",
    "titleSlug": "print-binary-tree",
    "likes": 465,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2698",
    "titleSlug": "find-the-punishment-number-of-an-integer",
    "likes": 464,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "2619",
    "titleSlug": "array-prototype-last",
    "likes": 464,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2553",
    "titleSlug": "separate-the-digits-in-an-array",
    "likes": 464,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1587",
    "titleSlug": "bank-account-summary-ii",
    "likes": 464,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1931",
    "titleSlug": "painting-a-grid-with-three-different-colors",
    "likes": 463,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1676",
    "titleSlug": "lowest-common-ancestor-of-a-binary-tree-iv",
    "likes": 462,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1595",
    "titleSlug": "minimum-cost-to-connect-two-groups-of-points",
    "likes": 462,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "2513",
    "titleSlug": "minimize-the-maximum-of-two-arrays",
    "likes": 461,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1506",
    "titleSlug": "find-root-of-n-ary-tree",
    "likes": 461,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "2429",
    "titleSlug": "minimize-xor",
    "likes": 460,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Greedy"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "1943",
    "titleSlug": "describe-the-painting",
    "likes": 460,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2786",
    "titleSlug": "visit-array-positions-to-maximize-score",
    "likes": 459,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2287",
    "titleSlug": "rearrange-characters-to-make-target-string",
    "likes": 458,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2027",
    "titleSlug": "minimum-moves-to-convert-string",
    "likes": 458,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1994",
    "titleSlug": "the-number-of-good-subsets",
    "likes": 458,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "1272",
    "titleSlug": "remove-interval",
    "likes": 458,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "2463",
    "titleSlug": "minimum-total-distance-traveled",
    "likes": 457,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2585",
    "titleSlug": "number-of-ways-to-earn-points",
    "likes": 456,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2157",
    "titleSlug": "groups-of-strings",
    "likes": 456,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Union Find"
      }
    ]
  },
  {
    "questionFrontendId": "1507",
    "titleSlug": "reformat-date",
    "likes": 456,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2138",
    "titleSlug": "divide-a-string-into-groups-of-size-k",
    "likes": 455,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2646",
    "titleSlug": "minimize-the-total-price-of-the-trips",
    "likes": 454,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "2503",
    "titleSlug": "maximum-number-of-points-from-grid-queries",
    "likes": 453,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1592",
    "titleSlug": "rearrange-spaces-between-words",
    "likes": 451,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2536",
    "titleSlug": "increment-submatrices-by-one",
    "likes": 450,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1621",
    "titleSlug": "number-of-sets-of-k-non-overlapping-line-segments",
    "likes": 450,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Combinatorics"
      }
    ]
  },
  {
    "questionFrontendId": "1150",
    "titleSlug": "check-if-a-number-is-majority-element-in-a-sorted-array",
    "likes": 450,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "2501",
    "titleSlug": "longest-square-streak-in-an-array",
    "likes": 448,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2419",
    "titleSlug": "longest-subarray-with-maximum-bitwise-and",
    "likes": 448,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Brainteaser"
      }
    ]
  },
  {
    "questionFrontendId": "2380",
    "titleSlug": "time-needed-to-rearrange-a-binary-string",
    "likes": 448,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2025",
    "titleSlug": "maximum-number-of-ways-to-partition-an-array",
    "likes": 448,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Counting"
      },
      {
        "name": "Enumeration"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "478",
    "titleSlug": "generate-random-point-in-a-circle",
    "likes": 448,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      },
      {
        "name": "Rejection Sampling"
      },
      {
        "name": "Randomized"
      }
    ]
  },
  {
    "questionFrontendId": "385",
    "titleSlug": "mini-parser",
    "likes": 448,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Depth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "2789",
    "titleSlug": "largest-element-in-an-array-after-merge-operations",
    "likes": 445,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2657",
    "titleSlug": "find-the-prefix-common-array-of-two-arrays",
    "likes": 445,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "1993",
    "titleSlug": "operations-on-tree",
    "likes": 445,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Design"
      }
    ]
  },
  {
    "questionFrontendId": "488",
    "titleSlug": "zuma-game",
    "likes": 445,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Memoization"
      }
    ]
  },
  {
    "questionFrontendId": "2528",
    "titleSlug": "maximize-the-minimum-powered-city",
    "likes": 443,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2637",
    "titleSlug": "promise-time-limit",
    "likes": 442,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "2472",
    "titleSlug": "maximum-number-of-non-overlapping-palindrome-substrings",
    "likes": 441,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2322",
    "titleSlug": "minimum-score-after-removals-on-a-tree",
    "likes": 441,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "2014",
    "titleSlug": "longest-subsequence-repeated-k-times",
    "likes": 441,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Counting"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2521",
    "titleSlug": "distinct-prime-factors-of-product-of-array",
    "likes": 440,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "2382",
    "titleSlug": "maximum-segment-sum-after-removals",
    "likes": 440,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Prefix Sum"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "1253",
    "titleSlug": "reconstruct-a-2-row-binary-matrix",
    "likes": 440,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2811",
    "titleSlug": "check-if-it-is-possible-to-split-array",
    "likes": 439,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2224",
    "titleSlug": "minimum-number-of-operations-to-convert-time",
    "likes": 439,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2003",
    "titleSlug": "smallest-missing-genetic-value-in-each-subtree",
    "likes": 439,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Union Find"
      }
    ]
  },
  {
    "questionFrontendId": "2798",
    "titleSlug": "number-of-employees-who-met-the-target",
    "likes": 438,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "2428",
    "titleSlug": "maximum-sum-of-an-hourglass",
    "likes": 438,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2607",
    "titleSlug": "make-k-subarray-sums-equal",
    "likes": 437,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "2572",
    "titleSlug": "count-the-number-of-square-free-subsets",
    "likes": 437,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "1731",
    "titleSlug": "the-number-of-employees-which-report-to-each-employee",
    "likes": 437,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1872",
    "titleSlug": "stone-game-viii",
    "likes": 436,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Prefix Sum"
      },
      {
        "name": "Game Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1090",
    "titleSlug": "largest-values-from-labels",
    "likes": 436,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2240",
    "titleSlug": "number-of-ways-to-buy-pens-and-pencils",
    "likes": 435,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "1399",
    "titleSlug": "count-largest-group",
    "likes": 435,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1064",
    "titleSlug": "fixed-point",
    "likes": 435,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "604",
    "titleSlug": "design-compressed-string-iterator",
    "likes": 435,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Design"
      },
      {
        "name": "Iterator"
      }
    ]
  },
  {
    "questionFrontendId": "1053",
    "titleSlug": "previous-permutation-with-one-swap",
    "likes": 434,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2446",
    "titleSlug": "determine-if-two-events-have-conflict",
    "likes": 433,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1585",
    "titleSlug": "check-if-string-is-transformable-with-substring-sort-operations",
    "likes": 433,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2447",
    "titleSlug": "number-of-subarrays-with-gcd-equal-to-k",
    "likes": 432,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1862",
    "titleSlug": "sum-of-floored-pairs",
    "likes": 432,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1154",
    "titleSlug": "day-of-the-year",
    "likes": 432,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2332",
    "titleSlug": "the-latest-time-to-catch-a-bus",
    "likes": 431,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2486",
    "titleSlug": "append-characters-to-string-to-make-subsequence",
    "likes": 430,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2318",
    "titleSlug": "number-of-distinct-roll-sequences",
    "likes": 430,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Memoization"
      }
    ]
  },
  {
    "questionFrontendId": "1957",
    "titleSlug": "delete-characters-to-make-fancy-string",
    "likes": 430,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1487",
    "titleSlug": "making-file-names-unique",
    "likes": 430,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "531",
    "titleSlug": "lonely-pixel-i",
    "likes": 429,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1257",
    "titleSlug": "smallest-common-region",
    "likes": 428,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "2666",
    "titleSlug": "allow-one-function-call",
    "likes": 426,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2374",
    "titleSlug": "node-with-highest-edge-score",
    "likes": 426,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "519",
    "titleSlug": "random-flip-matrix",
    "likes": 426,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Reservoir Sampling"
      },
      {
        "name": "Randomized"
      }
    ]
  },
  {
    "questionFrontendId": "982",
    "titleSlug": "triples-with-bitwise-and-equal-to-zero",
    "likes": 425,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2559",
    "titleSlug": "count-vowel-strings-in-ranges",
    "likes": 424,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2234",
    "titleSlug": "maximum-total-beauty-of-the-gardens",
    "likes": 423,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "866",
    "titleSlug": "prime-palindrome",
    "likes": 422,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "793",
    "titleSlug": "preimage-size-of-factorial-zeroes-function",
    "likes": 421,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "2197",
    "titleSlug": "replace-non-coprime-numbers-in-array",
    "likes": 419,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "2592",
    "titleSlug": "maximize-greatness-of-an-array",
    "likes": 418,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2156",
    "titleSlug": "find-substring-with-given-hash-value",
    "likes": 418,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "1144",
    "titleSlug": "decrease-elements-to-make-array-zigzag",
    "likes": 418,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "966",
    "titleSlug": "vowel-spellchecker",
    "likes": 417,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2518",
    "titleSlug": "number-of-great-partitions",
    "likes": 416,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2476",
    "titleSlug": "closest-nodes-queries-in-a-binary-search-tree",
    "likes": 416,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2284",
    "titleSlug": "sender-with-largest-word-count",
    "likes": 416,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2589",
    "titleSlug": "minimum-time-to-complete-all-tasks",
    "likes": 415,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1485",
    "titleSlug": "clone-binary-tree-with-random-pointer",
    "likes": 415,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1270",
    "titleSlug": "all-people-report-to-the-given-manager",
    "likes": 415,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2750",
    "titleSlug": "ways-to-split-array-into-good-subarrays",
    "likes": 414,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2661",
    "titleSlug": "first-completely-painted-row-or-column",
    "likes": 414,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2547",
    "titleSlug": "minimum-cost-to-split-an-array",
    "likes": 414,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2538",
    "titleSlug": "difference-between-maximum-and-minimum-price-sum",
    "likes": 414,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "1925",
    "titleSlug": "count-square-sum-triples",
    "likes": 413,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "1238",
    "titleSlug": "circular-permutation-in-binary-representation",
    "likes": 413,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "548",
    "titleSlug": "split-array-with-equal-sum",
    "likes": 412,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "422",
    "titleSlug": "valid-word-square",
    "likes": 412,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2449",
    "titleSlug": "minimum-number-of-operations-to-make-arrays-similar",
    "likes": 411,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1740",
    "titleSlug": "find-distance-in-a-binary-tree",
    "likes": 411,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "573",
    "titleSlug": "squirrel-simulation",
    "likes": 411,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "193",
    "titleSlug": "valid-phone-numbers",
    "likes": 411,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Shell"
      }
    ]
  },
  {
    "questionFrontendId": "2658",
    "titleSlug": "maximum-number-of-fish-in-a-grid",
    "likes": 409,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1789",
    "titleSlug": "primary-department-for-each-employee",
    "likes": 409,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1655",
    "titleSlug": "distribute-repeating-integers",
    "likes": 409,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "1825",
    "titleSlug": "finding-mk-average",
    "likes": 408,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Design"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Data Stream"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "1111",
    "titleSlug": "maximum-nesting-depth-of-two-valid-parentheses-strings",
    "likes": 408,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      }
    ]
  },
  {
    "questionFrontendId": "2684",
    "titleSlug": "maximum-number-of-moves-in-a-grid",
    "likes": 407,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2158",
    "titleSlug": "amount-of-new-area-painted-each-day",
    "likes": 407,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "1447",
    "titleSlug": "simplified-fractions",
    "likes": 407,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "2257",
    "titleSlug": "count-unguarded-cells-in-the-grid",
    "likes": 406,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1037",
    "titleSlug": "valid-boomerang",
    "likes": 405,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      }
    ]
  },
  {
    "questionFrontendId": "2751",
    "titleSlug": "robot-collisions",
    "likes": 403,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2057",
    "titleSlug": "smallest-index-with-equal-value",
    "likes": 403,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "1819",
    "titleSlug": "number-of-different-subsequences-gcds",
    "likes": 403,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Counting"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1517",
    "titleSlug": "find-users-with-valid-e-mails",
    "likes": 403,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1317",
    "titleSlug": "convert-integer-to-the-sum-of-two-no-zero-integers",
    "likes": 403,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2643",
    "titleSlug": "row-with-maximum-ones",
    "likes": 401,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2541",
    "titleSlug": "minimum-operations-to-make-array-equal-ii",
    "likes": 399,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1890",
    "titleSlug": "the-latest-login-in-2020",
    "likes": 399,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1490",
    "titleSlug": "clone-n-ary-tree",
    "likes": 399,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "1474",
    "titleSlug": "delete-n-nodes-after-m-nodes-of-a-linked-list",
    "likes": 398,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Linked List"
      }
    ]
  },
  {
    "questionFrontendId": "1454",
    "titleSlug": "active-users",
    "likes": 398,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2810",
    "titleSlug": "faulty-keyboard",
    "likes": 397,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2310",
    "titleSlug": "sum-of-numbers-with-units-digit-k",
    "likes": 396,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2200",
    "titleSlug": "find-all-k-distant-indices-in-an-array",
    "likes": 396,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "1889",
    "titleSlug": "minimum-space-wasted-from-packaging",
    "likes": 396,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "466",
    "titleSlug": "count-the-repetitions",
    "likes": 396,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2770",
    "titleSlug": "maximum-number-of-jumps-to-reach-the-last-index",
    "likes": 395,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2603",
    "titleSlug": "collect-coins-in-a-tree",
    "likes": 394,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      }
    ]
  },
  {
    "questionFrontendId": "2514",
    "titleSlug": "count-anagrams",
    "likes": 394,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Combinatorics"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1390",
    "titleSlug": "four-divisors",
    "likes": 394,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1813",
    "titleSlug": "sentence-similarity-iii",
    "likes": 393,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1787",
    "titleSlug": "make-the-xor-of-all-segments-equal-to-zero",
    "likes": 393,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2412",
    "titleSlug": "minimum-money-required-before-transactions",
    "likes": 392,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2274",
    "titleSlug": "maximum-consecutive-floors-without-special-floors",
    "likes": 391,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "666",
    "titleSlug": "path-sum-iv",
    "likes": 391,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2790",
    "titleSlug": "maximum-number-of-groups-with-increasing-length",
    "likes": 390,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2493",
    "titleSlug": "divide-nodes-into-the-maximum-number-of-groups",
    "likes": 390,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "1175",
    "titleSlug": "prime-arrangements",
    "likes": 390,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "534",
    "titleSlug": "game-play-analysis-iii",
    "likes": 390,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "544",
    "titleSlug": "output-contest-matches",
    "likes": 389,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Recursion"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2349",
    "titleSlug": "design-a-number-container-system",
    "likes": 388,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Design"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "1766",
    "titleSlug": "tree-of-coprimes",
    "likes": 388,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "592",
    "titleSlug": "fraction-addition-and-subtraction",
    "likes": 388,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2475",
    "titleSlug": "number-of-unequal-triplets-in-array",
    "likes": 386,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2425",
    "titleSlug": "bitwise-xor-of-all-pairings",
    "likes": 385,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Brainteaser"
      }
    ]
  },
  {
    "questionFrontendId": "749",
    "titleSlug": "contain-virus",
    "likes": 385,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "527",
    "titleSlug": "word-abbreviation",
    "likes": 385,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Trie"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2696",
    "titleSlug": "minimum-string-length-after-removing-substrings",
    "likes": 384,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2451",
    "titleSlug": "odd-string-difference",
    "likes": 383,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1185",
    "titleSlug": "day-of-the-week",
    "likes": 383,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "195",
    "titleSlug": "tenth-line",
    "likes": 383,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Shell"
      }
    ]
  },
  {
    "questionFrontendId": "1230",
    "titleSlug": "toss-strange-coins",
    "likes": 382,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Probability and Statistics"
      }
    ]
  },
  {
    "questionFrontendId": "970",
    "titleSlug": "powerful-integers",
    "likes": 382,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2787",
    "titleSlug": "ways-to-express-an-integer-as-sum-of-powers",
    "likes": 380,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2530",
    "titleSlug": "maximal-score-after-applying-k-operations",
    "likes": 380,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "2496",
    "titleSlug": "maximum-value-of-a-string-in-an-array",
    "likes": 380,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2132",
    "titleSlug": "stamping-the-grid",
    "likes": 379,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "483",
    "titleSlug": "smallest-good-base",
    "likes": 379,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "335",
    "titleSlug": "self-crossing",
    "likes": 379,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      }
    ]
  },
  {
    "questionFrontendId": "2622",
    "titleSlug": "cache-with-time-limit",
    "likes": 378,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "1418",
    "titleSlug": "display-table-of-food-orders-in-a-restaurant",
    "likes": 378,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "2356",
    "titleSlug": "number-of-unique-subjects-taught-by-each-teacher",
    "likes": 377,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1540",
    "titleSlug": "can-convert-string-in-k-moves",
    "likes": 377,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2440",
    "titleSlug": "create-components-with-same-value",
    "likes": 375,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "1907",
    "titleSlug": "count-salary-categories",
    "likes": 375,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1881",
    "titleSlug": "maximum-value-after-insertion",
    "likes": 375,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1548",
    "titleSlug": "the-most-similar-path-in-a-graph",
    "likes": 375,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "1311",
    "titleSlug": "get-watched-videos-by-your-friends",
    "likes": 375,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2654",
    "titleSlug": "minimum-number-of-operations-to-make-all-array-elements-equal-to-1",
    "likes": 373,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "2544",
    "titleSlug": "alternating-digit-sum",
    "likes": 373,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1938",
    "titleSlug": "maximum-genetic-difference-query",
    "likes": 373,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "1065",
    "titleSlug": "index-pairs-of-a-string",
    "likes": 373,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Trie"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2301",
    "titleSlug": "match-substring-after-replacement",
    "likes": 372,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "String Matching"
      }
    ]
  },
  {
    "questionFrontendId": "1554",
    "titleSlug": "strings-differ-by-one-character",
    "likes": 372,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "2102",
    "titleSlug": "sequentially-ordinal-rank-tracker",
    "likes": 371,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Design"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Data Stream"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "2582",
    "titleSlug": "pass-the-pillow",
    "likes": 370,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2866",
    "titleSlug": "beautiful-towers-ii",
    "likes": 369,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "2507",
    "titleSlug": "smallest-value-after-replacing-with-sum-of-prime-factors",
    "likes": 369,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1577",
    "titleSlug": "number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers",
    "likes": 369,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "2680",
    "titleSlug": "maximum-or",
    "likes": 368,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2561",
    "titleSlug": "rearranging-fruits",
    "likes": 368,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1836",
    "titleSlug": "remove-duplicates-from-an-unsorted-linked-list",
    "likes": 368,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Linked List"
      }
    ]
  },
  {
    "questionFrontendId": "2191",
    "titleSlug": "sort-the-jumbled-numbers",
    "likes": 366,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1954",
    "titleSlug": "minimum-garden-perimeter-to-collect-enough-apples",
    "likes": 366,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "1840",
    "titleSlug": "maximum-building-height",
    "likes": 366,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1622",
    "titleSlug": "fancy-sequence",
    "likes": 366,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Design"
      },
      {
        "name": "Segment Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2601",
    "titleSlug": "prime-subtraction-operation",
    "likes": 365,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "2122",
    "titleSlug": "recover-the-original-array",
    "likes": 365,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2826",
    "titleSlug": "sorting-three-groups",
    "likes": 364,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1521",
    "titleSlug": "find-a-value-of-a-mysterious-function-closest-to-target",
    "likes": 364,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Segment Tree"
      }
    ]
  },
  {
    "questionFrontendId": "553",
    "titleSlug": "optimal-division",
    "likes": 364,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2596",
    "titleSlug": "check-knight-tour-configuration",
    "likes": 363,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2522",
    "titleSlug": "partition-string-into-substrings-with-values-at-most-k",
    "likes": 363,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1401",
    "titleSlug": "circle-and-rectangle-overlapping",
    "likes": 363,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      }
    ]
  },
  {
    "questionFrontendId": "2565",
    "titleSlug": "subsequence-with-the-minimum-score",
    "likes": 362,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "2347",
    "titleSlug": "best-poker-hand",
    "likes": 362,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1687",
    "titleSlug": "delivering-boxes-from-storage-to-ports",
    "likes": 362,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Prefix Sum"
      },
      {
        "name": "Monotonic Queue"
      }
    ]
  },
  {
    "questionFrontendId": "1040",
    "titleSlug": "moving-stones-until-consecutive-ii",
    "likes": 361,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2558",
    "titleSlug": "take-gifts-from-the-richest-pile",
    "likes": 360,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1936",
    "titleSlug": "add-minimum-number-of-rungs",
    "likes": 360,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1006",
    "titleSlug": "clumsy-factorial",
    "likes": 360,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2552",
    "titleSlug": "count-increasing-quadruplets",
    "likes": 359,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Enumeration"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "963",
    "titleSlug": "minimum-area-rectangle-ii",
    "likes": 359,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      }
    ]
  },
  {
    "questionFrontendId": "2617",
    "titleSlug": "minimum-number-of-visited-cells-in-a-grid",
    "likes": 358,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "2497",
    "titleSlug": "maximum-star-sum-of-a-graph",
    "likes": 358,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "2791",
    "titleSlug": "count-paths-that-can-form-a-palindrome-in-a-tree",
    "likes": 357,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "2190",
    "titleSlug": "most-frequent-number-following-key-in-an-array",
    "likes": 357,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1797",
    "titleSlug": "design-authentication-manager",
    "likes": 357,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Design"
      }
    ]
  },
  {
    "questionFrontendId": "1119",
    "titleSlug": "remove-vowels-from-a-string",
    "likes": 357,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2564",
    "titleSlug": "substring-xor-queries",
    "likes": 356,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "1360",
    "titleSlug": "number-of-days-between-two-dates",
    "likes": 356,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2523",
    "titleSlug": "closest-prime-numbers-in-range",
    "likes": 355,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1736",
    "titleSlug": "latest-time-by-replacing-hidden-digits",
    "likes": 355,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2465",
    "titleSlug": "number-of-distinct-averages",
    "likes": 354,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "906",
    "titleSlug": "super-palindromes",
    "likes": 354,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "1848",
    "titleSlug": "minimum-distance-to-the-target-element",
    "likes": 353,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "2772",
    "titleSlug": "apply-operations-to-make-all-array-elements-equal-to-zero",
    "likes": 352,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1180",
    "titleSlug": "count-substrings-with-only-one-distinct-letter",
    "likes": 352,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2088",
    "titleSlug": "count-fertile-pyramids-in-a-land",
    "likes": 351,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1070",
    "titleSlug": "product-sales-analysis-iii",
    "likes": 351,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2609",
    "titleSlug": "find-the-longest-balanced-substring-of-a-binary-string",
    "likes": 350,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2593",
    "titleSlug": "find-score-of-an-array-after-marking-all-elements",
    "likes": 349,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "782",
    "titleSlug": "transform-to-chessboard",
    "likes": 349,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2656",
    "titleSlug": "maximum-sum-with-exactly-k-elements",
    "likes": 348,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2490",
    "titleSlug": "circular-sentence",
    "likes": 348,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2470",
    "titleSlug": "number-of-subarrays-with-lcm-equal-to-k",
    "likes": 348,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "379",
    "titleSlug": "design-phone-directory",
    "likes": 348,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Linked List"
      },
      {
        "name": "Design"
      },
      {
        "name": "Queue"
      }
    ]
  },
  {
    "questionFrontendId": "2875",
    "titleSlug": "minimum-size-subarray-in-infinite-array",
    "likes": 347,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2627",
    "titleSlug": "debounce",
    "likes": 347,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "2746",
    "titleSlug": "decremental-string-concatenation",
    "likes": 346,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2578",
    "titleSlug": "split-with-minimum-sum",
    "likes": 345,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2761",
    "titleSlug": "prime-pairs-with-target-sum",
    "likes": 344,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Enumeration"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1258",
    "titleSlug": "synonymous-sentences",
    "likes": 344,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Union Find"
      }
    ]
  },
  {
    "questionFrontendId": "1016",
    "titleSlug": "binary-string-with-substrings-representing-1-to-n",
    "likes": 344,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2606",
    "titleSlug": "find-the-substring-with-maximum-cost",
    "likes": 343,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1625",
    "titleSlug": "lexicographically-smallest-string-after-applying-operations",
    "likes": 342,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "2568",
    "titleSlug": "minimum-impossible-or",
    "likes": 341,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Brainteaser"
      }
    ]
  },
  {
    "questionFrontendId": "2527",
    "titleSlug": "find-xor-beauty-of-array",
    "likes": 341,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2424",
    "titleSlug": "longest-uploaded-prefix",
    "likes": 341,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Binary Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Design"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "1868",
    "titleSlug": "product-of-two-run-length-encoded-arrays",
    "likes": 341,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "1452",
    "titleSlug": "people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list",
    "likes": 341,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2478",
    "titleSlug": "number-of-beautiful-partitions",
    "likes": 340,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2708",
    "titleSlug": "maximum-strength-of-a-group",
    "likes": 339,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2632",
    "titleSlug": "curry",
    "likes": 339,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "2562",
    "titleSlug": "find-the-array-concatenation-value",
    "likes": 339,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1815",
    "titleSlug": "maximum-number-of-groups-getting-fresh-donuts",
    "likes": 337,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Memoization"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "1694",
    "titleSlug": "reformat-phone-number",
    "likes": 337,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2827",
    "titleSlug": "number-of-beautiful-integers-in-the-range",
    "likes": 336,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2299",
    "titleSlug": "strong-password-checker-ii",
    "likes": 335,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2515",
    "titleSlug": "shortest-distance-to-target-string-in-a-circular-array",
    "likes": 334,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2672",
    "titleSlug": "number-of-adjacent-elements-with-the-same-color",
    "likes": 333,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "2509",
    "titleSlug": "cycle-length-queries-in-a-tree",
    "likes": 333,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2844",
    "titleSlug": "minimum-operations-to-make-a-special-number",
    "likes": 332,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "1298",
    "titleSlug": "maximum-candies-you-can-get-from-boxes",
    "likes": 332,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "1226",
    "titleSlug": "the-dining-philosophers",
    "likes": 331,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Concurrency"
      }
    ]
  },
  {
    "questionFrontendId": "2598",
    "titleSlug": "smallest-missing-non-negative-integer-after-operations",
    "likes": 330,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2280",
    "titleSlug": "minimum-lines-to-represent-a-line-chart",
    "likes": 330,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1327",
    "titleSlug": "list-the-products-ordered-in-a-period",
    "likes": 330,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1883",
    "titleSlug": "minimum-skips-to-arrive-at-meeting-on-time",
    "likes": 328,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2767",
    "titleSlug": "partition-string-into-minimum-beautiful-substrings",
    "likes": 327,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "2697",
    "titleSlug": "lexicographically-smallest-palindrome",
    "likes": 327,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1602",
    "titleSlug": "find-nearest-right-node-in-binary-tree",
    "likes": 327,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1659",
    "titleSlug": "maximize-grid-happiness",
    "likes": 326,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Memoization"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "1303",
    "titleSlug": "find-the-team-size",
    "likes": 326,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2614",
    "titleSlug": "prime-in-diagonal",
    "likes": 324,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "2455",
    "titleSlug": "average-value-of-even-numbers-that-are-divisible-by-three",
    "likes": 323,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2227",
    "titleSlug": "encrypt-and-decrypt-strings",
    "likes": 323,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Design"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "1784",
    "titleSlug": "check-if-binary-string-has-at-most-one-segment-of-ones",
    "likes": 323,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "840",
    "titleSlug": "magic-squares-in-grid",
    "likes": 323,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2801",
    "titleSlug": "count-stepping-numbers-in-range",
    "likes": 322,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2383",
    "titleSlug": "minimum-hours-of-training-to-win-a-competition",
    "likes": 322,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1564",
    "titleSlug": "put-boxes-into-the-warehouse-i",
    "likes": 322,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "569",
    "titleSlug": "median-employee-salary",
    "likes": 322,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2733",
    "titleSlug": "neither-minimum-nor-maximum",
    "likes": 321,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2679",
    "titleSlug": "sum-in-a-matrix",
    "likes": 321,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1276",
    "titleSlug": "number-of-burgers-with-no-waste-of-ingredients",
    "likes": 321,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "613",
    "titleSlug": "shortest-distance-in-a-line",
    "likes": 321,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2586",
    "titleSlug": "count-the-number-of-vowel-strings-in-range",
    "likes": 320,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2570",
    "titleSlug": "merge-two-2d-arrays-by-summing-values",
    "likes": 320,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "1764",
    "titleSlug": "form-array-by-concatenating-subarrays-of-another-array",
    "likes": 320,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "String Matching"
      }
    ]
  },
  {
    "questionFrontendId": "2744",
    "titleSlug": "find-maximum-number-of-string-pairs",
    "likes": 319,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1225",
    "titleSlug": "report-contiguous-dates",
    "likes": 319,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2508",
    "titleSlug": "add-edges-to-make-degrees-of-all-nodes-even",
    "likes": 318,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "2747",
    "titleSlug": "count-zero-request-servers",
    "likes": 317,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1737",
    "titleSlug": "change-minimum-characters-to-satisfy-one-of-three-conditions",
    "likes": 317,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2896",
    "titleSlug": "apply-operations-to-make-two-strings-equal",
    "likes": 316,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2829",
    "titleSlug": "determine-the-minimum-sum-of-a-k-avoiding-array",
    "likes": 316,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2780",
    "titleSlug": "minimum-index-of-a-valid-split",
    "likes": 316,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2286",
    "titleSlug": "booking-concert-tickets-in-groups",
    "likes": 316,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Binary Search"
      },
      {
        "name": "Design"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1761",
    "titleSlug": "minimum-degree-of-a-connected-trio-in-a-graph",
    "likes": 316,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "1133",
    "titleSlug": "largest-unique-number",
    "likes": 315,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1362",
    "titleSlug": "closest-divisors",
    "likes": 314,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1228",
    "titleSlug": "missing-number-in-arithmetic-progression",
    "likes": 314,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "964",
    "titleSlug": "least-operators-to-express-number",
    "likes": 314,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Memoization"
      }
    ]
  },
  {
    "questionFrontendId": "2670",
    "titleSlug": "find-the-distinct-difference-array",
    "likes": 313,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "2512",
    "titleSlug": "reward-top-k-students",
    "likes": 313,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1948",
    "titleSlug": "delete-duplicate-folders-in-system",
    "likes": 313,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Trie"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "1073",
    "titleSlug": "adding-two-negabinary-numbers",
    "likes": 313,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2736",
    "titleSlug": "maximum-sum-queries",
    "likes": 311,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "1560",
    "titleSlug": "most-visited-sector-in-a-circular-track",
    "likes": 311,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "816",
    "titleSlug": "ambiguous-coordinates",
    "likes": 311,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2842",
    "titleSlug": "count-k-subsequences-of-a-string-with-maximum-beauty",
    "likes": 310,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Combinatorics"
      }
    ]
  },
  {
    "questionFrontendId": "2818",
    "titleSlug": "apply-operations-to-maximize-score",
    "likes": 310,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Monotonic Stack"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "2815",
    "titleSlug": "max-pair-sum-in-an-array",
    "likes": 310,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "2671",
    "titleSlug": "frequency-tracker",
    "likes": 310,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Design"
      }
    ]
  },
  {
    "questionFrontendId": "2554",
    "titleSlug": "maximum-number-of-integers-to-choose-from-a-range-i",
    "likes": 310,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2214",
    "titleSlug": "minimum-health-to-beat-game",
    "likes": 310,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1806",
    "titleSlug": "minimum-number-of-operations-to-reinitialize-a-permutation",
    "likes": 310,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1511",
    "titleSlug": "customer-order-frequency",
    "likes": 310,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1246",
    "titleSlug": "palindrome-removal",
    "likes": 309,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2800",
    "titleSlug": "shortest-string-that-contains-three-strings",
    "likes": 308,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2677",
    "titleSlug": "chunk-array",
    "likes": 308,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "1804",
    "titleSlug": "implement-trie-ii-prefix-tree",
    "likes": 308,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Design"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "1978",
    "titleSlug": "employees-whose-manager-left-the-company",
    "likes": 307,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1782",
    "titleSlug": "count-pairs-of-nodes",
    "likes": 307,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1056",
    "titleSlug": "confusing-number",
    "likes": 307,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1316",
    "titleSlug": "distinct-echo-substrings",
    "likes": 306,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Trie"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "2825",
    "titleSlug": "make-string-a-subsequence-using-cyclic-increments",
    "likes": 305,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2681",
    "titleSlug": "power-of-heroes",
    "likes": 304,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2580",
    "titleSlug": "count-ways-to-group-overlapping-ranges",
    "likes": 304,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "571",
    "titleSlug": "find-median-given-frequency-of-numbers",
    "likes": 304,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2343",
    "titleSlug": "query-kth-smallest-trimmed-number",
    "likes": 303,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Radix Sort"
      },
      {
        "name": "Quickselect"
      }
    ]
  },
  {
    "questionFrontendId": "597",
    "titleSlug": "friend-requests-i-overall-acceptance-rate",
    "likes": 303,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1604",
    "titleSlug": "alert-using-same-key-card-three-or-more-times-in-a-one-hour-period",
    "likes": 302,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "481",
    "titleSlug": "magical-string",
    "likes": 301,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2584",
    "titleSlug": "split-the-array-to-make-coprime-products",
    "likes": 300,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1212",
    "titleSlug": "team-scores-in-football-tournament",
    "likes": 300,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "248",
    "titleSlug": "strobogrammatic-number-iii",
    "likes": 300,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "1739",
    "titleSlug": "building-boxes",
    "likes": 298,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1333",
    "titleSlug": "filter-restaurants-by-vegan-friendly-price-and-distance",
    "likes": 298,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2526",
    "titleSlug": "find-consecutive-integers-from-a-data-stream",
    "likes": 297,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Design"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Counting"
      },
      {
        "name": "Data Stream"
      }
    ]
  },
  {
    "questionFrontendId": "2060",
    "titleSlug": "check-if-an-original-string-exists-given-two-encoded-strings",
    "likes": 297,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "275",
    "titleSlug": "h-index-ii",
    "likes": 297,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "2625",
    "titleSlug": "flatten-deeply-nested-array",
    "likes": 296,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "1063",
    "titleSlug": "number-of-valid-subarrays",
    "likes": 296,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "2788",
    "titleSlug": "split-strings-by-separator",
    "likes": 295,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "755",
    "titleSlug": "pour-water",
    "likes": 295,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "356",
    "titleSlug": "line-reflection",
    "likes": 295,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2856",
    "titleSlug": "minimum-array-length-after-pair-removals",
    "likes": 294,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2876",
    "titleSlug": "count-visited-nodes-in-a-directed-graph",
    "likes": 293,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Memoization"
      }
    ]
  },
  {
    "questionFrontendId": "1501",
    "titleSlug": "countries-you-can-safely-invest-in",
    "likes": 293,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1398",
    "titleSlug": "customers-who-bought-products-a-and-b-but-not-c",
    "likes": 293,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2763",
    "titleSlug": "sum-of-imbalance-numbers-of-all-subarrays",
    "likes": 292,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "2581",
    "titleSlug": "count-number-of-possible-root-nodes",
    "likes": 291,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "2047",
    "titleSlug": "number-of-valid-words-in-a-sentence",
    "likes": 291,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1112",
    "titleSlug": "highest-grade-for-each-student",
    "likes": 291,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2745",
    "titleSlug": "construct-the-longest-new-string",
    "likes": 290,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Brainteaser"
      }
    ]
  },
  {
    "questionFrontendId": "2438",
    "titleSlug": "range-product-queries-of-powers",
    "likes": 290,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2605",
    "titleSlug": "form-smallest-number-from-two-digit-arrays",
    "likes": 289,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2919",
    "titleSlug": "minimum-increment-operations-to-make-array-beautiful",
    "likes": 287,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2834",
    "titleSlug": "find-the-minimum-possible-sum-of-a-beautiful-array",
    "likes": 287,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2213",
    "titleSlug": "longest-substring-of-one-repeating-character",
    "likes": 287,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "1699",
    "titleSlug": "number-of-calls-between-two-persons",
    "likes": 287,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2828",
    "titleSlug": "check-if-a-string-is-an-acronym-of-words",
    "likes": 286,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2769",
    "titleSlug": "find-the-maximum-achievable-number",
    "likes": 286,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2710",
    "titleSlug": "remove-trailing-zeros-from-a-string",
    "likes": 286,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1801",
    "titleSlug": "number-of-orders-in-the-backlog",
    "likes": 285,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1173",
    "titleSlug": "immediate-food-delivery-i",
    "likes": 285,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1895",
    "titleSlug": "largest-magic-square",
    "likes": 284,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "789",
    "titleSlug": "escape-the-ghosts",
    "likes": 283,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2925",
    "titleSlug": "maximum-score-after-applying-operations-on-a-tree",
    "likes": 282,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "2452",
    "titleSlug": "words-within-two-edits-of-dictionary",
    "likes": 282,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1236",
    "titleSlug": "web-crawler",
    "likes": 282,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Interactive"
      }
    ]
  },
  {
    "questionFrontendId": "2952",
    "titleSlug": "minimum-number-of-coins-to-be-added",
    "likes": 281,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2813",
    "titleSlug": "maximum-elegance-of-a-k-length-subsequence",
    "likes": 281,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "2018",
    "titleSlug": "check-if-word-can-be-placed-in-crossword",
    "likes": 281,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "1467",
    "titleSlug": "probability-of-a-two-boxes-having-the-same-number-of-distinct-balls",
    "likes": 281,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Combinatorics"
      },
      {
        "name": "Probability and Statistics"
      }
    ]
  },
  {
    "questionFrontendId": "2579",
    "titleSlug": "count-total-number-of-colored-cells",
    "likes": 280,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1735",
    "titleSlug": "count-ways-to-make-array-with-product",
    "likes": 279,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Combinatorics"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "2846",
    "titleSlug": "minimum-edge-weight-equilibrium-queries-in-a-tree",
    "likes": 278,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Strongly Connected Component"
      }
    ]
  },
  {
    "questionFrontendId": "2636",
    "titleSlug": "promise-pool",
    "likes": 278,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "2760",
    "titleSlug": "longest-even-odd-subarray-with-threshold",
    "likes": 277,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "2735",
    "titleSlug": "collecting-chocolates",
    "likes": 276,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2587",
    "titleSlug": "rearrange-array-to-maximize-prefix-score",
    "likes": 275,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1583",
    "titleSlug": "count-unhappy-friends",
    "likes": 275,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2730",
    "titleSlug": "find-the-longest-semi-repetitive-substring",
    "likes": 273,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "2631",
    "titleSlug": "group-by",
    "likes": 272,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "2502",
    "titleSlug": "design-memory-allocator",
    "likes": 272,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Design"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1756",
    "titleSlug": "design-most-recently-used-queue",
    "likes": 272,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Design"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "1600",
    "titleSlug": "throne-inheritance",
    "likes": 272,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Design"
      }
    ]
  },
  {
    "questionFrontendId": "2910",
    "titleSlug": "minimum-number-of-groups-to-create-a-valid-assignment",
    "likes": 271,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2740",
    "titleSlug": "find-the-value-of-the-partition",
    "likes": 271,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2678",
    "titleSlug": "number-of-senior-citizens",
    "likes": 271,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1746",
    "titleSlug": "maximum-subarray-sum-after-one-operation",
    "likes": 271,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2749",
    "titleSlug": "minimum-operations-to-make-the-integer-zero",
    "likes": 270,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Brainteaser"
      }
    ]
  },
  {
    "questionFrontendId": "2591",
    "titleSlug": "distribute-money-to-maximum-children",
    "likes": 270,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1681",
    "titleSlug": "minimum-incompatibility",
    "likes": 270,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "2437",
    "titleSlug": "number-of-valid-clock-times",
    "likes": 269,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "1126",
    "titleSlug": "active-businesses",
    "likes": 268,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1083",
    "titleSlug": "sales-analysis-ii",
    "likes": 268,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2858",
    "titleSlug": "minimum-edge-reversals-so-every-node-is-reachable",
    "likes": 267,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "2640",
    "titleSlug": "find-the-score-of-all-prefixes-of-an-array",
    "likes": 267,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2600",
    "titleSlug": "k-items-with-the-maximum-sum",
    "likes": 267,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1210",
    "titleSlug": "minimum-moves-to-reach-target-with-rotations",
    "likes": 267,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2355",
    "titleSlug": "maximum-number-of-books-you-can-take",
    "likes": 266,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "758",
    "titleSlug": "bold-words-in-string",
    "likes": 266,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Trie"
      },
      {
        "name": "String Matching"
      }
    ]
  },
  {
    "questionFrontendId": "2962",
    "titleSlug": "count-subarrays-where-max-element-appears-at-least-k-times",
    "likes": 265,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "2716",
    "titleSlug": "minimize-string-length",
    "likes": 265,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2511",
    "titleSlug": "maximum-enemy-forts-that-can-be-captured",
    "likes": 265,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "2432",
    "titleSlug": "the-employee-that-worked-on-the-longest-task",
    "likes": 265,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "1660",
    "titleSlug": "correct-a-binary-tree",
    "likes": 265,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1597",
    "titleSlug": "build-binary-expression-tree-from-infix-expression",
    "likes": 265,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1077",
    "titleSlug": "project-employees-iii",
    "likes": 265,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2739",
    "titleSlug": "total-distance-traveled",
    "likes": 264,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2699",
    "titleSlug": "modify-graph-edge-weights",
    "likes": 264,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Graph"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "2019",
    "titleSlug": "the-score-of-students-solving-math-expression",
    "likes": 264,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Memoization"
      }
    ]
  },
  {
    "questionFrontendId": "2683",
    "titleSlug": "neighboring-bitwise-xor",
    "likes": 263,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2105",
    "titleSlug": "watering-plants-ii",
    "likes": 263,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1728",
    "titleSlug": "cat-and-mouse-ii",
    "likes": 263,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      },
      {
        "name": "Memoization"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Game Theory"
      }
    ]
  },
  {
    "questionFrontendId": "512",
    "titleSlug": "game-play-analysis-ii",
    "likes": 262,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2703",
    "titleSlug": "return-length-of-arguments-passed",
    "likes": 261,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2595",
    "titleSlug": "number-of-even-and-odd-bits",
    "likes": 259,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "1586",
    "titleSlug": "binary-search-tree-iterator-ii",
    "likes": 259,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Stack"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Design"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      },
      {
        "name": "Iterator"
      }
    ]
  },
  {
    "questionFrontendId": "2456",
    "titleSlug": "most-popular-video-creator",
    "likes": 258,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "711",
    "titleSlug": "number-of-distinct-islands-ii",
    "likes": 258,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "2784",
    "titleSlug": "check-if-array-is-good",
    "likes": 257,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2618",
    "titleSlug": "check-if-object-instance-of-class",
    "likes": 257,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "1785",
    "titleSlug": "minimum-elements-to-add-to-form-a-given-sum",
    "likes": 257,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1322",
    "titleSlug": "ads-performance",
    "likes": 256,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "156",
    "titleSlug": "binary-tree-upside-down",
    "likes": 256,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "3002",
    "titleSlug": "maximum-size-of-a-set-after-removals",
    "likes": 255,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2874",
    "titleSlug": "maximum-value-of-an-ordered-triplet-ii",
    "likes": 255,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "2841",
    "titleSlug": "maximum-sum-of-almost-unique-subarray",
    "likes": 255,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "2397",
    "titleSlug": "maximum-rows-covered-by-columns",
    "likes": 255,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2223",
    "titleSlug": "sum-of-scores-of-built-strings",
    "likes": 254,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "Suffix Array"
      },
      {
        "name": "String Matching"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "2976",
    "titleSlug": "minimum-cost-to-convert-string-i",
    "likes": 252,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "2857",
    "titleSlug": "count-pairs-of-points-with-distance-k",
    "likes": 252,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2549",
    "titleSlug": "count-distinct-numbers-on-board",
    "likes": 251,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2303",
    "titleSlug": "calculate-amount-paid-in-taxes",
    "likes": 251,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2861",
    "titleSlug": "maximum-number-of-alloys",
    "likes": 250,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "2778",
    "titleSlug": "sum-of-squares-of-special-elements",
    "likes": 248,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2848",
    "titleSlug": "points-that-intersect-with-cars",
    "likes": 247,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2443",
    "titleSlug": "sum-of-number-and-its-reverse",
    "likes": 246,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2241",
    "titleSlug": "design-an-atm-machine",
    "likes": 246,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Design"
      }
    ]
  },
  {
    "questionFrontendId": "1264",
    "titleSlug": "page-recommendations",
    "likes": 246,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2942",
    "titleSlug": "find-words-containing-character",
    "likes": 245,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2546",
    "titleSlug": "apply-bitwise-operations-to-make-strings-equal",
    "likes": 245,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "656",
    "titleSlug": "coin-path",
    "likes": 245,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2905",
    "titleSlug": "find-indices-with-index-and-value-difference-ii",
    "likes": 244,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "2075",
    "titleSlug": "decode-the-slanted-ciphertext",
    "likes": 244,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2043",
    "titleSlug": "simple-bank-system",
    "likes": 243,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Design"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1874",
    "titleSlug": "minimize-product-sum-of-two-arrays",
    "likes": 243,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1533",
    "titleSlug": "find-the-index-of-the-large-integer",
    "likes": 243,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Interactive"
      }
    ]
  },
  {
    "questionFrontendId": "3026",
    "titleSlug": "maximum-good-subarray-sum",
    "likes": 242,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2840",
    "titleSlug": "check-if-strings-can-be-made-equal-with-operations-ii",
    "likes": 242,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2409",
    "titleSlug": "count-days-spent-together",
    "likes": 242,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "580",
    "titleSlug": "count-student-number-in-departments",
    "likes": 242,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1596",
    "titleSlug": "the-most-frequently-ordered-products-for-each-customer",
    "likes": 239,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1427",
    "titleSlug": "perform-string-shifts",
    "likes": 239,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2843",
    "titleSlug": "count-symmetric-integers",
    "likes": 238,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2543",
    "titleSlug": "check-if-point-is-reachable",
    "likes": 238,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1960",
    "titleSlug": "maximum-product-of-the-length-of-two-palindromic-substrings",
    "likes": 237,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "1445",
    "titleSlug": "apples-oranges",
    "likes": 237,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2682",
    "titleSlug": "find-the-losers-of-the-circular-game",
    "likes": 236,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "615",
    "titleSlug": "average-salary-departments-vs-company",
    "likes": 236,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1912",
    "titleSlug": "design-movie-rental-system",
    "likes": 235,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Design"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "579",
    "titleSlug": "find-cumulative-salary-of-an-employee",
    "likes": 235,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1914",
    "titleSlug": "cyclically-rotating-a-grid",
    "likes": 233,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2948",
    "titleSlug": "make-lexicographically-smallest-array-by-swapping-elements",
    "likes": 232,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2648",
    "titleSlug": "generate-fibonacci-sequence",
    "likes": 232,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "1896",
    "titleSlug": "minimum-cost-to-change-the-final-value-of-expression",
    "likes": 232,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Stack"
      }
    ]
  },
  {
    "questionFrontendId": "1199",
    "titleSlug": "minimum-time-to-build-blocks",
    "likes": 231,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1969",
    "titleSlug": "minimum-non-zero-product-of-the-array-elements",
    "likes": 230,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "1259",
    "titleSlug": "handshakes-that-dont-cross",
    "likes": 229,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "631",
    "titleSlug": "design-excel-sum-formula",
    "likes": 229,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Design"
      },
      {
        "name": "Topological Sort"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1783",
    "titleSlug": "grand-slam-titles",
    "likes": 228,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2867",
    "titleSlug": "count-valid-paths-in-a-tree",
    "likes": 227,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1515",
    "titleSlug": "best-position-for-a-service-centre",
    "likes": 227,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      },
      {
        "name": "Randomized"
      }
    ]
  },
  {
    "questionFrontendId": "2833",
    "titleSlug": "furthest-point-from-origin",
    "likes": 226,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2723",
    "titleSlug": "add-two-promises",
    "likes": 226,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2660",
    "titleSlug": "determine-the-winner-of-a-bowling-game",
    "likes": 226,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2249",
    "titleSlug": "count-lattice-points-inside-a-circle",
    "likes": 226,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2029",
    "titleSlug": "stone-game-ix",
    "likes": 226,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Counting"
      },
      {
        "name": "Game Theory"
      }
    ]
  },
  {
    "questionFrontendId": "2612",
    "titleSlug": "minimum-reverse-operations",
    "likes": 225,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "1900",
    "titleSlug": "the-earliest-and-latest-rounds-where-players-compete",
    "likes": 225,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Memoization"
      }
    ]
  },
  {
    "questionFrontendId": "1384",
    "titleSlug": "total-sales-amount-by-year",
    "likes": 225,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1613",
    "titleSlug": "find-the-missing-ids",
    "likes": 224,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1432",
    "titleSlug": "max-difference-you-can-get-from-changing-an-integer",
    "likes": 224,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2859",
    "titleSlug": "sum-of-values-at-indices-with-k-set-bits",
    "likes": 223,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2566",
    "titleSlug": "maximum-difference-by-remapping-a-digit",
    "likes": 223,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2499",
    "titleSlug": "minimum-total-cost-to-make-arrays-unequal",
    "likes": 223,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1273",
    "titleSlug": "delete-tree-nodes",
    "likes": 223,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "293",
    "titleSlug": "flip-game",
    "likes": 223,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2809",
    "titleSlug": "minimum-time-to-make-array-sum-at-most-x",
    "likes": 222,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2768",
    "titleSlug": "number-of-black-blocks",
    "likes": 220,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "1808",
    "titleSlug": "maximize-number-of-nice-divisors",
    "likes": 220,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "2729",
    "titleSlug": "check-if-the-number-is-fascinating",
    "likes": 219,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2651",
    "titleSlug": "calculate-delayed-arrival-time",
    "likes": 218,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1196",
    "titleSlug": "how-many-apples-can-you-put-into-the-basket",
    "likes": 217,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "810",
    "titleSlug": "chalkboard-xor-game",
    "likes": 217,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Brainteaser"
      },
      {
        "name": "Game Theory"
      }
    ]
  },
  {
    "questionFrontendId": "634",
    "titleSlug": "find-the-derangement-of-an-array",
    "likes": 217,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "612",
    "titleSlug": "shortest-distance-in-a-plane",
    "likes": 217,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2968",
    "titleSlug": "apply-operations-to-maximize-frequency-score",
    "likes": 216,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2268",
    "titleSlug": "minimum-number-of-keypresses",
    "likes": 215,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2567",
    "titleSlug": "minimum-score-by-changing-two-elements",
    "likes": 214,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1946",
    "titleSlug": "largest-number-after-mutating-substring",
    "likes": 214,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2963",
    "titleSlug": "count-the-number-of-good-partitions",
    "likes": 213,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Combinatorics"
      }
    ]
  },
  {
    "questionFrontendId": "2906",
    "titleSlug": "construct-product-matrix",
    "likes": 213,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2695",
    "titleSlug": "array-wrapper",
    "likes": 213,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "1860",
    "titleSlug": "incremental-memory-leak",
    "likes": 213,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2982",
    "titleSlug": "find-longest-special-substring-that-occurs-thrice-ii",
    "likes": 212,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2836",
    "titleSlug": "maximize-value-of-function-in-a-ball-passing-game",
    "likes": 212,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "1430",
    "titleSlug": "check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",
    "likes": 212,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1308",
    "titleSlug": "running-total-for-different-genders",
    "likes": 212,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1033",
    "titleSlug": "moving-stones-until-consecutive",
    "likes": 212,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Brainteaser"
      }
    ]
  },
  {
    "questionFrontendId": "2734",
    "titleSlug": "lexicographically-smallest-string-after-substring-operation",
    "likes": 211,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2694",
    "titleSlug": "event-emitter",
    "likes": 211,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "2628",
    "titleSlug": "json-deep-equal",
    "likes": 211,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "1719",
    "titleSlug": "number-of-ways-to-reconstruct-a-tree",
    "likes": 211,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "1412",
    "titleSlug": "find-the-quiet-students-in-all-exams",
    "likes": 211,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2940",
    "titleSlug": "find-building-where-alice-and-bob-can-meet",
    "likes": 210,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "2481",
    "titleSlug": "minimum-cuts-to-divide-a-circle",
    "likes": 210,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      }
    ]
  },
  {
    "questionFrontendId": "1904",
    "titleSlug": "the-number-of-full-rounds-you-have-played",
    "likes": 208,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2871",
    "titleSlug": "split-array-into-maximum-number-of-subarrays",
    "likes": 206,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2201",
    "titleSlug": "count-artifacts-that-can-be-extracted",
    "likes": 206,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1440",
    "titleSlug": "evaluate-boolean-expression",
    "likes": 206,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1134",
    "titleSlug": "armstrong-number",
    "likes": 206,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1709",
    "titleSlug": "biggest-window-between-visits",
    "likes": 205,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2967",
    "titleSlug": "minimum-cost-to-make-array-equalindromic",
    "likes": 204,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2732",
    "titleSlug": "find-a-good-subset-of-the-matrix",
    "likes": 204,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1878",
    "titleSlug": "get-biggest-three-rhombus-sums-in-a-grid",
    "likes": 204,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1733",
    "titleSlug": "minimum-number-of-people-to-teach",
    "likes": 204,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2162",
    "titleSlug": "minimum-cost-to-set-cooking-time",
    "likes": 203,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2765",
    "titleSlug": "longest-alternating-subarray",
    "likes": 201,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2717",
    "titleSlug": "semi-ordered-permutation",
    "likes": 201,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1098",
    "titleSlug": "unpopular-books",
    "likes": 201,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1076",
    "titleSlug": "project-employees-ii",
    "likes": 201,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2633",
    "titleSlug": "convert-object-to-json-string",
    "likes": 200,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "288",
    "titleSlug": "unique-word-abbreviation",
    "likes": 200,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Design"
      }
    ]
  },
  {
    "questionFrontendId": "2998",
    "titleSlug": "minimum-number-of-operations-to-make-x-and-y-equal",
    "likes": 199,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Memoization"
      }
    ]
  },
  {
    "questionFrontendId": "2855",
    "titleSlug": "minimum-right-shifts-to-sort-the-array",
    "likes": 198,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "2232",
    "titleSlug": "minimize-result-by-adding-parentheses-to-expression",
    "likes": 198,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "874",
    "titleSlug": "walking-robot-simulation",
    "likes": 198,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2958",
    "titleSlug": "length-of-longest-subarray-with-at-most-k-frequency",
    "likes": 197,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "1918",
    "titleSlug": "kth-smallest-subarray-sum",
    "likes": 196,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "1811",
    "titleSlug": "find-interview-candidates",
    "likes": 195,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2093",
    "titleSlug": "minimum-cost-to-reach-city-with-discounts",
    "likes": 194,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Graph"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "2748",
    "titleSlug": "number-of-beautiful-pairs",
    "likes": 193,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "1082",
    "titleSlug": "sales-analysis-i",
    "likes": 192,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1698",
    "titleSlug": "number-of-distinct-substrings-in-a-string",
    "likes": 190,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Trie"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "Suffix Array"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "2525",
    "titleSlug": "categorize-box-according-to-criteria",
    "likes": 189,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2048",
    "titleSlug": "next-greater-numerically-balanced-number",
    "likes": 188,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2806",
    "titleSlug": "account-balance-after-rounded-purchase",
    "likes": 187,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2715",
    "titleSlug": "timeout-cancellation",
    "likes": 187,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "1348",
    "titleSlug": "tweet-counts-per-frequency",
    "likes": 187,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Design"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "2901",
    "titleSlug": "longest-unequal-adjacent-groups-subsequence-ii",
    "likes": 186,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1820",
    "titleSlug": "maximum-number-of-accepted-invitations",
    "likes": 186,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2915",
    "titleSlug": "length-of-the-longest-subsequence-that-sums-to-target",
    "likes": 185,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2933",
    "titleSlug": "high-access-employees",
    "likes": 184,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2865",
    "titleSlug": "beautiful-towers-i",
    "likes": 184,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "1410",
    "titleSlug": "html-entity-parser",
    "likes": 184,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "558",
    "titleSlug": "logical-or-of-two-binary-grids-represented-as-quad-trees",
    "likes": 184,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2766",
    "titleSlug": "relocate-marbles",
    "likes": 183,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2663",
    "titleSlug": "lexicographically-smallest-beautiful-string",
    "likes": 183,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2573",
    "titleSlug": "find-the-string-with-lcp",
    "likes": 183,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2288",
    "titleSlug": "apply-discount-to-prices",
    "likes": 183,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1357",
    "titleSlug": "apply-discount-every-n-orders",
    "likes": 183,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Design"
      }
    ]
  },
  {
    "questionFrontendId": "1097",
    "titleSlug": "game-play-analysis-v",
    "likes": 182,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "618",
    "titleSlug": "students-report-by-geography",
    "likes": 182,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2944",
    "titleSlug": "minimum-number-of-coins-for-fruits",
    "likes": 181,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Monotonic Queue"
      }
    ]
  },
  {
    "questionFrontendId": "1215",
    "titleSlug": "stepping-numbers",
    "likes": 181,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Backtracking"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "3035",
    "titleSlug": "maximum-palindromes-after-operations",
    "likes": 180,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2872",
    "titleSlug": "maximum-number-of-k-divisible-components",
    "likes": 180,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "2361",
    "titleSlug": "minimum-costs-using-the-train-line",
    "likes": 180,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1747",
    "titleSlug": "leetflex-banned-accounts",
    "likes": 179,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1127",
    "titleSlug": "user-purchase-platform",
    "likes": 179,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "411",
    "titleSlug": "minimum-unique-word-abbreviation",
    "likes": 179,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2972",
    "titleSlug": "count-the-number-of-incremovable-subarrays-ii",
    "likes": 178,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "2920",
    "titleSlug": "maximum-points-after-collecting-coins-from-all-nodes",
    "likes": 178,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "2894",
    "titleSlug": "divisible-and-non-divisible-sums-difference",
    "likes": 178,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2550",
    "titleSlug": "count-collisions-of-monkeys-on-a-polygon",
    "likes": 178,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "2909",
    "titleSlug": "minimum-sum-of-mountain-triplets-ii",
    "likes": 177,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "2245",
    "titleSlug": "maximum-trailing-zeros-in-a-cornered-path",
    "likes": 177,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1858",
    "titleSlug": "longest-word-with-all-prefixes",
    "likes": 177,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "1350",
    "titleSlug": "students-with-invalid-departments",
    "likes": 177,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2953",
    "titleSlug": "count-complete-substrings",
    "likes": 176,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "1830",
    "titleSlug": "minimum-number-of-operations-to-make-string-sorted",
    "likes": 175,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Combinatorics"
      }
    ]
  },
  {
    "questionFrontendId": "2974",
    "titleSlug": "minimum-number-game",
    "likes": 173,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2897",
    "titleSlug": "apply-operations-on-array-to-maximize-sum-of-squares",
    "likes": 173,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "1241",
    "titleSlug": "number-of-comments-per-post",
    "likes": 173,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2839",
    "titleSlug": "check-if-strings-can-be-made-equal-with-operations-i",
    "likes": 172,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1973",
    "titleSlug": "count-nodes-equal-to-sum-of-descendants",
    "likes": 172,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "479",
    "titleSlug": "largest-palindrome-product",
    "likes": 172,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "3007",
    "titleSlug": "maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k",
    "likes": 171,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2939",
    "titleSlug": "maximum-xor-product",
    "likes": 171,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "574",
    "titleSlug": "winning-candidate",
    "likes": 171,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2934",
    "titleSlug": "minimum-operations-to-maximize-last-elements-in-arrays",
    "likes": 170,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2569",
    "titleSlug": "handling-sum-queries-after-update",
    "likes": 170,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Segment Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1885",
    "titleSlug": "count-pairs-in-two-arrays",
    "likes": 170,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2926",
    "titleSlug": "maximum-balanced-subsequence-sum",
    "likes": 169,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2904",
    "titleSlug": "shortest-and-lexicographically-smallest-beautiful-string",
    "likes": 167,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "1767",
    "titleSlug": "find-the-subtasks-that-did-not-execute",
    "likes": 167,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1580",
    "titleSlug": "put-boxes-into-the-warehouse-ii",
    "likes": 167,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "591",
    "titleSlug": "tag-validator",
    "likes": 167,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Stack"
      }
    ]
  },
  {
    "questionFrontendId": "822",
    "titleSlug": "card-flipping-game",
    "likes": 166,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "2862",
    "titleSlug": "maximum-element-sum-of-a-complete-subset-of-indices",
    "likes": 164,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "2644",
    "titleSlug": "find-the-maximum-divisibility-score",
    "likes": 164,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "2046",
    "titleSlug": "sort-linked-list-already-sorted-using-absolute-values",
    "likes": 163,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2031",
    "titleSlug": "count-subarrays-with-more-ones-than-zeros",
    "likes": 162,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Merge Sort"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "831",
    "titleSlug": "masking-personal-information",
    "likes": 162,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2949",
    "titleSlug": "count-beautiful-substrings-ii",
    "likes": 161,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Number Theory"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2069",
    "titleSlug": "walking-robot-simulation-ii",
    "likes": 161,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Design"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1183",
    "titleSlug": "maximum-number-of-ones",
    "likes": 161,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Greedy"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "660",
    "titleSlug": "remove-9",
    "likes": 161,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1369",
    "titleSlug": "get-the-second-most-recent-activity",
    "likes": 160,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "770",
    "titleSlug": "basic-calculator-iv",
    "likes": 160,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Recursion"
      }
    ]
  },
  {
    "questionFrontendId": "2676",
    "titleSlug": "throttle",
    "likes": 159,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "2649",
    "titleSlug": "nested-array-generator",
    "likes": 158,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "1571",
    "titleSlug": "warehouse-manager",
    "likes": 158,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "614",
    "titleSlug": "second-degree-follower",
    "likes": 158,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "351",
    "titleSlug": "android-unlock-patterns",
    "likes": 158,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      }
    ]
  },
  {
    "questionFrontendId": "2965",
    "titleSlug": "find-missing-and-repeated-values",
    "likes": 157,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2851",
    "titleSlug": "string-transformation",
    "likes": 157,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "String Matching"
      }
    ]
  },
  {
    "questionFrontendId": "2639",
    "titleSlug": "find-the-width-of-columns-of-a-grid",
    "likes": 157,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2918",
    "titleSlug": "minimum-equal-sum-of-two-arrays-after-replacing-zeros",
    "likes": 156,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2721",
    "titleSlug": "execute-asynchronous-functions-in-parallel",
    "likes": 156,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "2860",
    "titleSlug": "happy-students",
    "likes": 155,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2184",
    "titleSlug": "number-of-ways-to-build-sturdy-brick-wall",
    "likes": 154,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "3020",
    "titleSlug": "find-the-maximum-number-of-elements-in-subset",
    "likes": 153,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2938",
    "titleSlug": "separate-black-and-white-balls",
    "likes": 153,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2937",
    "titleSlug": "make-three-strings-equal",
    "likes": 153,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2935",
    "titleSlug": "maximum-strong-pair-xor-ii",
    "likes": 153,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Trie"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "1176",
    "titleSlug": "diet-plan-performance",
    "likes": 153,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "2869",
    "titleSlug": "minimum-operations-to-collect-elements",
    "likes": 152,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "1778",
    "titleSlug": "shortest-path-in-a-hidden-grid",
    "likes": 152,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Interactive"
      }
    ]
  },
  {
    "questionFrontendId": "672",
    "titleSlug": "bulb-switcher-ii",
    "likes": 152,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "2930",
    "titleSlug": "number-of-strings-which-can-be-rearranged-to-contain-substring",
    "likes": 151,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Combinatorics"
      }
    ]
  },
  {
    "questionFrontendId": "2873",
    "titleSlug": "maximum-value-of-an-ordered-triplet-i",
    "likes": 151,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "1426",
    "titleSlug": "counting-elements",
    "likes": 151,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "1205",
    "titleSlug": "monthly-transactions-ii",
    "likes": 151,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1132",
    "titleSlug": "reported-posts-ii",
    "likes": 151,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1532",
    "titleSlug": "the-most-recent-three-orders",
    "likes": 149,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1479",
    "titleSlug": "sales-by-day-of-the-week",
    "likes": 149,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1243",
    "titleSlug": "array-transformation",
    "likes": 149,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1194",
    "titleSlug": "tournament-winners",
    "likes": 149,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2727",
    "titleSlug": "is-object-empty",
    "likes": 148,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2291",
    "titleSlug": "maximum-profit-from-trading-stocks",
    "likes": 148,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2021",
    "titleSlug": "brightest-position-on-street",
    "likes": 148,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Prefix Sum"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "2705",
    "titleSlug": "compact-object",
    "likes": 147,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "1940",
    "titleSlug": "longest-common-subsequence-between-sorted-arrays",
    "likes": 147,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1435",
    "titleSlug": "create-a-session-bar-chart",
    "likes": 147,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2340",
    "titleSlug": "minimum-adjacent-swaps-to-make-a-valid-array",
    "likes": 146,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1682",
    "titleSlug": "longest-palindromic-subsequence-ii",
    "likes": 146,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1107",
    "titleSlug": "new-users-daily-count",
    "likes": 146,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1058",
    "titleSlug": "minimize-rounding-error-to-meet-target",
    "likes": 146,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2957",
    "titleSlug": "remove-adjacent-almost-equal-characters",
    "likes": 145,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1453",
    "titleSlug": "maximum-number-of-darts-inside-of-a-circular-dartboard",
    "likes": 145,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      }
    ]
  },
  {
    "questionFrontendId": "2345",
    "titleSlug": "finding-the-number-of-visible-mountains",
    "likes": 144,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "3008",
    "titleSlug": "find-beautiful-indices-in-the-given-array-ii",
    "likes": 143,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "String Matching"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "2895",
    "titleSlug": "minimum-processing-time",
    "likes": 143,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2724",
    "titleSlug": "sort-by",
    "likes": 143,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "1949",
    "titleSlug": "strong-friendship",
    "likes": 143,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "194",
    "titleSlug": "transpose-file",
    "likes": 143,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Shell"
      }
    ]
  },
  {
    "questionFrontendId": "2973",
    "titleSlug": "find-number-of-coins-to-place-in-tree-nodes",
    "likes": 142,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "1634",
    "titleSlug": "add-two-polynomials-represented-as-linked-lists",
    "likes": 142,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Math"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "1355",
    "titleSlug": "activity-participants",
    "likes": 142,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1093",
    "titleSlug": "statistics-from-a-large-sample",
    "likes": 142,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Probability and Statistics"
      }
    ]
  },
  {
    "questionFrontendId": "2908",
    "titleSlug": "minimum-sum-of-mountain-triplets-i",
    "likes": 141,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "1958",
    "titleSlug": "check-if-move-is-legal",
    "likes": 141,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "3012",
    "titleSlug": "minimize-length-of-array-using-operations",
    "likes": 140,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "3048",
    "titleSlug": "earliest-second-to-mark-indices-i",
    "likes": 139,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "3001",
    "titleSlug": "minimum-moves-to-capture-the-queen",
    "likes": 139,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2700",
    "titleSlug": "differences-between-two-objects",
    "likes": 138,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "1555",
    "titleSlug": "bank-account-summary",
    "likes": 138,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1612",
    "titleSlug": "check-if-two-expression-trees-are-equivalent",
    "likes": 137,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1294",
    "titleSlug": "weather-type-in-each-country",
    "likes": 136,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3085",
    "titleSlug": "minimum-deletions-to-make-string-k-special",
    "likes": 135,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2722",
    "titleSlug": "join-two-arrays-by-id",
    "likes": 135,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "2468",
    "titleSlug": "split-message-based-on-limit",
    "likes": 135,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "1950",
    "titleSlug": "maximum-of-minimum-values-in-all-subarrays",
    "likes": 135,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "3067",
    "titleSlug": "count-pairs-of-connectable-servers-in-a-weighted-tree-network",
    "likes": 134,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "3006",
    "titleSlug": "find-beautiful-indices-in-the-given-array-i",
    "likes": 134,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "String Matching"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "2981",
    "titleSlug": "find-longest-special-substring-that-occurs-thrice-i",
    "likes": 134,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2959",
    "titleSlug": "number-of-possible-sets-of-closing-branches",
    "likes": 134,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Enumeration"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "2956",
    "titleSlug": "find-common-elements-between-two-arrays",
    "likes": 134,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "2693",
    "titleSlug": "call-function-with-custom-context",
    "likes": 134,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "2297",
    "titleSlug": "jump-game-viii",
    "likes": 134,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Monotonic Stack"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "1972",
    "titleSlug": "first-and-last-call-on-the-same-day",
    "likes": 134,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2902",
    "titleSlug": "count-of-sub-multisets-with-bounded-sum",
    "likes": 133,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "1538",
    "titleSlug": "guess-the-majority-in-a-hidden-array",
    "likes": 133,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Interactive"
      }
    ]
  },
  {
    "questionFrontendId": "2725",
    "titleSlug": "interval-cancellation",
    "likes": 132,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "1549",
    "titleSlug": "the-most-recent-orders-for-each-product",
    "likes": 132,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2916",
    "titleSlug": "subarrays-distinct-element-sum-of-squares-ii",
    "likes": 131,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2675",
    "titleSlug": "array-of-objects-to-matrix",
    "likes": 131,
    "difficulty": "Hard",
    "topicTags": []
  },
  {
    "questionFrontendId": "1852",
    "titleSlug": "distinct-numbers-in-each-subarray",
    "likes": 131,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "2951",
    "titleSlug": "find-the-peaks",
    "likes": 130,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2914",
    "titleSlug": "minimum-number-of-changes-to-make-binary-string-beautiful",
    "likes": 130,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2900",
    "titleSlug": "longest-unequal-adjacent-groups-subsequence-i",
    "likes": 130,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2393",
    "titleSlug": "count-strictly-increasing-subarrays",
    "likes": 130,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "1777",
    "titleSlug": "products-price-for-each-store",
    "likes": 130,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3043",
    "titleSlug": "find-the-length-of-the-longest-common-prefix",
    "likes": 129,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "2945",
    "titleSlug": "find-maximum-non-decreasing-array-length",
    "likes": 129,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Monotonic Stack"
      },
      {
        "name": "Monotonic Queue"
      }
    ]
  },
  {
    "questionFrontendId": "1607",
    "titleSlug": "sellers-with-no-sales",
    "likes": 129,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1149",
    "titleSlug": "article-views-ii",
    "likes": 128,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3041",
    "titleSlug": "maximize-consecutive-elements-in-an-array-after-modification",
    "likes": 127,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2975",
    "titleSlug": "maximum-square-area-by-removing-fences-from-a-field",
    "likes": 127,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2422",
    "titleSlug": "merge-operations-to-turn-array-into-a-palindrome",
    "likes": 127,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2277",
    "titleSlug": "closest-node-to-path-in-tree",
    "likes": 127,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "578",
    "titleSlug": "get-highest-answer-rate-question",
    "likes": 127,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "625",
    "titleSlug": "minimum-factorization",
    "likes": 126,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "3045",
    "titleSlug": "count-prefix-and-suffix-pairs-ii",
    "likes": 125,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Trie"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "String Matching"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "3029",
    "titleSlug": "minimum-time-to-revert-word-to-initial-state-i",
    "likes": 124,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "String Matching"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "1468",
    "titleSlug": "calculate-salaries",
    "likes": 124,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3016",
    "titleSlug": "minimum-number-of-pushes-to-type-word-ii",
    "likes": 123,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2924",
    "titleSlug": "find-champion-ii",
    "likes": 123,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "1744",
    "titleSlug": "can-you-eat-your-favorite-candy-on-your-favorite-day",
    "likes": 123,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2970",
    "titleSlug": "count-the-number-of-incremovable-subarrays-i",
    "likes": 122,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "3036",
    "titleSlug": "number-of-subarrays-that-match-a-pattern-ii",
    "likes": 121,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "String Matching"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "2923",
    "titleSlug": "find-champion-i",
    "likes": 121,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2913",
    "titleSlug": "subarrays-distinct-element-sum-of-squares-i",
    "likes": 121,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "2081",
    "titleSlug": "sum-of-k-mirror-numbers",
    "likes": 121,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "1121",
    "titleSlug": "divide-array-into-increasing-sequences",
    "likes": 121,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "3015",
    "titleSlug": "count-the-number-of-houses-at-a-certain-distance-i",
    "likes": 120,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2077",
    "titleSlug": "paths-in-maze-that-lead-to-same-room",
    "likes": 120,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "2903",
    "titleSlug": "find-indices-with-index-and-value-difference-i",
    "likes": 119,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "2877",
    "titleSlug": "create-a-dataframe-from-list",
    "likes": 119,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "1159",
    "titleSlug": "market-analysis-ii",
    "likes": 119,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2960",
    "titleSlug": "count-tested-devices-after-test-operations",
    "likes": 118,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1842",
    "titleSlug": "next-palindrome-using-same-digits",
    "likes": 118,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "3072",
    "titleSlug": "distribute-elements-into-two-arrays-ii",
    "likes": 117,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2943",
    "titleSlug": "maximize-area-of-square-hole-in-grid",
    "likes": 117,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2711",
    "titleSlug": "difference-of-number-of-distinct-values-on-diagonals",
    "likes": 117,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1085",
    "titleSlug": "sum-of-digits-in-the-minimum-number",
    "likes": 117,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "3040",
    "titleSlug": "maximum-number-of-operations-with-the-same-score-ii",
    "likes": 116,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Memoization"
      }
    ]
  },
  {
    "questionFrontendId": "3031",
    "titleSlug": "minimum-time-to-revert-word-to-initial-state-ii",
    "likes": 116,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "String Matching"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "2947",
    "titleSlug": "count-beautiful-substrings-i",
    "likes": 116,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Enumeration"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2899",
    "titleSlug": "last-visited-integers",
    "likes": 116,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2004",
    "titleSlug": "the-number-of-seniors-and-juniors-to-join-the-company",
    "likes": 116,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3081",
    "titleSlug": "replace-question-marks-in-string-to-minimize-its-value",
    "likes": 113,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "3070",
    "titleSlug": "count-submatrices-with-top-left-element-and-sum-less-than-k",
    "likes": 112,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2630",
    "titleSlug": "memoize-ii",
    "likes": 111,
    "difficulty": "Hard",
    "topicTags": []
  },
  {
    "questionFrontendId": "2932",
    "titleSlug": "maximum-strong-pair-xor-i",
    "likes": 109,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Trie"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "2532",
    "titleSlug": "time-to-cross-a-bridge",
    "likes": 109,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1635",
    "titleSlug": "hopper-company-queries-i",
    "likes": 109,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2204",
    "titleSlug": "distance-to-a-cycle-in-undirected-graph",
    "likes": 108,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "2083",
    "titleSlug": "substrings-that-begin-and-end-with-the-same-letter",
    "likes": 108,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1841",
    "titleSlug": "league-statistics",
    "likes": 107,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3039",
    "titleSlug": "apply-operations-to-make-string-empty",
    "likes": 106,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "1618",
    "titleSlug": "maximum-font-to-fit-a-sentence-in-a-screen",
    "likes": 106,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Interactive"
      }
    ]
  },
  {
    "questionFrontendId": "800",
    "titleSlug": "similar-rgb-color",
    "likes": 106,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2142",
    "titleSlug": "the-number-of-passengers-in-each-bus-i",
    "likes": 105,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1113",
    "titleSlug": "reported-posts",
    "likes": 105,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1599",
    "titleSlug": "maximum-profit-of-operating-a-centennial-wheel",
    "likes": 104,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "3076",
    "titleSlug": "shortest-uncommon-substring-in-an-array",
    "likes": 102,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "1724",
    "titleSlug": "checking-existence-of-edge-length-limited-paths-ii",
    "likes": 102,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Minimum Spanning Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1908",
    "titleSlug": "game-of-nim",
    "likes": 101,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Brainteaser"
      },
      {
        "name": "Game Theory"
      }
    ]
  },
  {
    "questionFrontendId": "3011",
    "titleSlug": "find-if-array-can-be-sorted",
    "likes": 99,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1902",
    "titleSlug": "depth-of-bst-given-insertion-order",
    "likes": 99,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Binary Search Tree"
      },
      {
        "name": "Binary Tree"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "1142",
    "titleSlug": "user-activity-for-the-past-30-days-ii",
    "likes": 99,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3077",
    "titleSlug": "maximum-strength-of-k-disjoint-subarrays",
    "likes": 98,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2067",
    "titleSlug": "number-of-equal-count-substrings",
    "likes": 98,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Counting"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1708",
    "titleSlug": "largest-subarray-length-k",
    "likes": 98,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "469",
    "titleSlug": "convex-polygon",
    "likes": 98,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      }
    ]
  },
  {
    "questionFrontendId": "2961",
    "titleSlug": "double-modular-exponentiation",
    "likes": 97,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2137",
    "titleSlug": "pour-water-between-buckets-to-make-water-levels-equal",
    "likes": 97,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "2917",
    "titleSlug": "find-the-k-or-of-an-array",
    "likes": 96,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2726",
    "titleSlug": "calculator-with-method-chaining",
    "likes": 95,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2519",
    "titleSlug": "count-the-number-of-k-big-indices",
    "likes": 95,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      },
      {
        "name": "Merge Sort"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "2173",
    "titleSlug": "longest-winning-streak",
    "likes": 95,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2082",
    "titleSlug": "the-number-of-rich-customers",
    "likes": 95,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1459",
    "titleSlug": "rectangles-area",
    "likes": 95,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1951",
    "titleSlug": "all-the-pairs-with-the-maximum-number-of-common-followers",
    "likes": 94,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1067",
    "titleSlug": "digit-count-in-range",
    "likes": 94,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "3014",
    "titleSlug": "minimum-number-of-pushes-to-type-word-i",
    "likes": 93,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2624",
    "titleSlug": "snail-traversal",
    "likes": 93,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "2036",
    "titleSlug": "maximum-alternating-subarray-sum",
    "likes": 93,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2946",
    "titleSlug": "matrix-similarity-after-cyclic-shifts",
    "likes": 92,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2330",
    "titleSlug": "valid-palindrome-iv",
    "likes": 92,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "972",
    "titleSlug": "equal-rational-numbers",
    "likes": 92,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "3013",
    "titleSlug": "divide-an-array-into-subarrays-with-minimum-cost-ii",
    "likes": 91,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "2997",
    "titleSlug": "minimum-number-of-operations-to-make-array-xor-equal-to-k",
    "likes": 90,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2371",
    "titleSlug": "minimize-maximum-value-in-a-grid",
    "likes": 90,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Topological Sort"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1983",
    "titleSlug": "widest-pair-of-indices-with-equal-range-sum",
    "likes": 90,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1336",
    "titleSlug": "number-of-transactions-per-visit",
    "likes": 90,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3082",
    "titleSlug": "find-the-sum-of-the-power-of-all-subsequences",
    "likes": 89,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "3000",
    "titleSlug": "maximum-area-of-longest-diagonal-rectangle",
    "likes": 89,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "2999",
    "titleSlug": "count-the-number-of-powerful-integers",
    "likes": 89,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2980",
    "titleSlug": "check-if-bitwise-or-has-trailing-zeros",
    "likes": 89,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2174",
    "titleSlug": "remove-all-ones-with-row-and-column-flips-ii",
    "likes": 89,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "3003",
    "titleSlug": "maximize-the-number-of-partitions-after-operations",
    "likes": 88,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "2996",
    "titleSlug": "smallest-missing-integer-greater-than-sequential-prefix-sum",
    "likes": 88,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2510",
    "titleSlug": "check-if-there-is-a-path-with-equal-number-of-0s-and-1s",
    "likes": 88,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1843",
    "titleSlug": "suspicious-bank-accounts",
    "likes": 88,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1364",
    "titleSlug": "number-of-trusted-contacts-of-a-customer",
    "likes": 88,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3047",
    "titleSlug": "find-the-largest-area-of-square-inside-two-rectangles",
    "likes": 87,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      }
    ]
  },
  {
    "questionFrontendId": "2117",
    "titleSlug": "abbreviating-the-product-of-a-range",
    "likes": 87,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2061",
    "titleSlug": "number-of-spaces-cleaning-robot-cleaned",
    "likes": 87,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2313",
    "titleSlug": "minimum-flips-in-binary-tree-to-get-result",
    "likes": 86,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "1543",
    "titleSlug": "fix-product-name-format",
    "likes": 86,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "533",
    "titleSlug": "lonely-pixel-ii",
    "likes": 86,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1831",
    "titleSlug": "maximum-transaction-each-day",
    "likes": 85,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1772",
    "titleSlug": "sort-features-by-popularity",
    "likes": 85,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1809",
    "titleSlug": "ad-free-sessions",
    "likes": 84,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "751",
    "titleSlug": "ip-to-cidr",
    "likes": 84,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2931",
    "titleSlug": "maximum-spending-after-buying-items",
    "likes": 83,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2929",
    "titleSlug": "distribute-candies-among-children-ii",
    "likes": 83,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Combinatorics"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2928",
    "titleSlug": "distribute-candies-among-children-i",
    "likes": 83,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Combinatorics"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "3033",
    "titleSlug": "modify-the-matrix",
    "likes": 82,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "1495",
    "titleSlug": "friendly-movies-streamed-last-month",
    "likes": 82,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3021",
    "titleSlug": "alice-and-bob-playing-flower-game",
    "likes": 81,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "1892",
    "titleSlug": "page-recommendations-ii",
    "likes": 81,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1810",
    "titleSlug": "minimum-path-cost-in-a-hidden-grid",
    "likes": 81,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Interactive"
      }
    ]
  },
  {
    "questionFrontendId": "1715",
    "titleSlug": "count-apples-and-oranges",
    "likes": 81,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2098",
    "titleSlug": "subsequence-of-size-k-with-the-largest-even-sum",
    "likes": 80,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "3027",
    "titleSlug": "find-the-number-of-ways-to-place-people-ii",
    "likes": 79,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "3080",
    "titleSlug": "mark-elements-on-array-by-performing-queries",
    "likes": 78,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2388",
    "titleSlug": "change-null-values-in-a-table-to-the-previous-value",
    "likes": 78,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2084",
    "titleSlug": "drop-type-1-orders-for-customers-with-type-0-orders",
    "likes": 78,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1069",
    "titleSlug": "product-sales-analysis-ii",
    "likes": 78,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3068",
    "titleSlug": "find-the-maximum-sum-of-node-values",
    "likes": 77,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "3019",
    "titleSlug": "number-of-changing-keys",
    "likes": 77,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2983",
    "titleSlug": "palindrome-rearrangement-queries",
    "likes": 77,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2863",
    "titleSlug": "maximum-length-of-semi-decreasing-subarrays",
    "likes": 77,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2254",
    "titleSlug": "design-video-sharing-platform",
    "likes": 77,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Design"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "1988",
    "titleSlug": "find-cutoff-score-for-each-school",
    "likes": 77,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1620",
    "titleSlug": "coordinate-with-maximum-network-quality",
    "likes": 77,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "3046",
    "titleSlug": "split-the-array",
    "likes": 76,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "3042",
    "titleSlug": "count-prefix-and-suffix-pairs-i",
    "likes": 76,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Trie"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "String Matching"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "2977",
    "titleSlug": "minimum-cost-to-convert-string-ii",
    "likes": 76,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Trie"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "2229",
    "titleSlug": "check-if-an-array-is-consecutive",
    "likes": 76,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1565",
    "titleSlug": "unique-orders-and-customers-per-month",
    "likes": 76,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1256",
    "titleSlug": "encode-number",
    "likes": 76,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "3044",
    "titleSlug": "most-frequent-prime",
    "likes": 75,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Counting"
      },
      {
        "name": "Enumeration"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "3022",
    "titleSlug": "minimize-or-of-remaining-elements-using-operations",
    "likes": 75,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2445",
    "titleSlug": "number-of-nodes-with-value-one",
    "likes": 75,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2153",
    "titleSlug": "the-number-of-passengers-in-each-bus-ii",
    "likes": 75,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3066",
    "titleSlug": "minimum-operations-to-exceed-threshold-value-ii",
    "likes": 74,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "3028",
    "titleSlug": "ant-on-the-boundary",
    "likes": 74,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "3010",
    "titleSlug": "divide-an-array-into-subarrays-with-minimum-cost-i",
    "likes": 74,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2237",
    "titleSlug": "count-positions-on-street-with-required-brightness",
    "likes": 74,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2107",
    "titleSlug": "number-of-unique-flavors-after-sharing-k-candies",
    "likes": 74,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "1788",
    "titleSlug": "maximize-the-beauty-of-the-garden",
    "likes": 74,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "1271",
    "titleSlug": "hexspeak",
    "likes": 74,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "3084",
    "titleSlug": "count-substrings-starting-and-ending-with-given-character",
    "likes": 73,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "3034",
    "titleSlug": "number-of-subarrays-that-match-a-pattern-i",
    "likes": 73,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "String Matching"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "2534",
    "titleSlug": "time-taken-to-cross-the-door",
    "likes": 73,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2308",
    "titleSlug": "arrange-table-by-gender",
    "likes": 73,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2263",
    "titleSlug": "make-array-non-decreasing-or-non-increasing",
    "likes": 73,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1867",
    "titleSlug": "orders-with-maximum-quantity-above-average",
    "likes": 73,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1181",
    "titleSlug": "before-and-after-puzzle",
    "likes": 73,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "555",
    "titleSlug": "split-concatenated-strings",
    "likes": 73,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "3071",
    "titleSlug": "minimum-operations-to-write-the-letter-y-on-a-grid",
    "likes": 72,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2168",
    "titleSlug": "unique-substrings-with-equal-digit-frequency",
    "likes": 72,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "Counting"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "1692",
    "titleSlug": "count-ways-to-distribute-candies",
    "likes": 72,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2387",
    "titleSlug": "median-of-a-row-wise-sorted-matrix",
    "likes": 71,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2159",
    "titleSlug": "order-two-columns-independently",
    "likes": 71,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1989",
    "titleSlug": "maximum-number-of-people-that-can-be-caught-in-tag",
    "likes": 71,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1875",
    "titleSlug": "group-employees-of-the-same-salary",
    "likes": 71,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1279",
    "titleSlug": "traffic-light-controlled-intersection",
    "likes": 71,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Concurrency"
      }
    ]
  },
  {
    "questionFrontendId": "2638",
    "titleSlug": "count-the-number-of-k-free-subsets",
    "likes": 70,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1623",
    "titleSlug": "all-valid-triplets-that-can-represent-a-country",
    "likes": 70,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2152",
    "titleSlug": "minimum-number-of-lines-to-cover-points",
    "likes": 69,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Geometry"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "2066",
    "titleSlug": "account-balance",
    "likes": 69,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3049",
    "titleSlug": "earliest-second-to-mark-indices-ii",
    "likes": 68,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "2878",
    "titleSlug": "get-the-size-of-a-dataframe",
    "likes": 68,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "1966",
    "titleSlug": "binary-searchable-numbers-in-an-unsorted-array",
    "likes": 68,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "3024",
    "titleSlug": "type-of-triangle",
    "likes": 67,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2954",
    "titleSlug": "count-the-number-of-infection-sequences",
    "likes": 67,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Combinatorics"
      }
    ]
  },
  {
    "questionFrontendId": "3017",
    "titleSlug": "count-the-number-of-houses-at-a-certain-distance-ii",
    "likes": 66,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2189",
    "titleSlug": "number-of-ways-to-build-house-of-cards",
    "likes": 66,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2238",
    "titleSlug": "number-of-times-a-driver-was-a-passenger",
    "likes": 65,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1917",
    "titleSlug": "leetcodify-friends-recommendations",
    "likes": 65,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1826",
    "titleSlug": "faulty-sensor",
    "likes": 65,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "2473",
    "titleSlug": "minimum-cost-to-buy-apples",
    "likes": 64,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "3074",
    "titleSlug": "apple-redistribution-into-boxes",
    "likes": 63,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2219",
    "titleSlug": "maximum-sum-score-of-array",
    "likes": 63,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2911",
    "titleSlug": "minimum-changes-to-make-k-semi-palindromes",
    "likes": 62,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2880",
    "titleSlug": "select-data",
    "likes": 62,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2072",
    "titleSlug": "the-winner-university",
    "likes": 62,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2650",
    "titleSlug": "design-cancellable-function",
    "likes": 61,
    "difficulty": "Hard",
    "topicTags": []
  },
  {
    "questionFrontendId": "2228",
    "titleSlug": "users-with-two-purchases-within-seven-days",
    "likes": 61,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1645",
    "titleSlug": "hopper-company-queries-ii",
    "likes": 61,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3075",
    "titleSlug": "maximize-happiness-of-selected-children",
    "likes": 60,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2882",
    "titleSlug": "drop-duplicate-rows",
    "likes": 60,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2292",
    "titleSlug": "products-with-three-or-more-orders-in-two-consecutive-years",
    "likes": 60,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2112",
    "titleSlug": "the-airport-with-the-most-traffic",
    "likes": 60,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1939",
    "titleSlug": "users-that-actively-request-confirmation-messages",
    "likes": 60,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1853",
    "titleSlug": "convert-date-format",
    "likes": 60,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2889",
    "titleSlug": "reshape-data-pivot",
    "likes": 59,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2113",
    "titleSlug": "elements-in-array-after-removing-and-replacing-elements",
    "likes": 59,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "1666",
    "titleSlug": "change-the-root-of-a-binary-tree",
    "likes": 59,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "3038",
    "titleSlug": "maximum-number-of-operations-with-the-same-score-i",
    "likes": 57,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2879",
    "titleSlug": "display-the-first-three-rows",
    "likes": 57,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2247",
    "titleSlug": "maximum-cost-of-trip-with-k-highways",
    "likes": 57,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "2056",
    "titleSlug": "number-of-valid-move-combinations-on-chessboard",
    "likes": 57,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "String"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "1919",
    "titleSlug": "leetcodify-similar-friends",
    "likes": 57,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1821",
    "titleSlug": "find-customers-with-positive-revenue-this-year",
    "likes": 57,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1421",
    "titleSlug": "npv-queries",
    "likes": 57,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2323",
    "titleSlug": "find-minimum-time-to-finish-all-jobs-ii",
    "likes": 56,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2282",
    "titleSlug": "number-of-people-that-can-be-seen-in-a-grid",
    "likes": 56,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Matrix"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "1933",
    "titleSlug": "check-if-string-is-decomposable-into-value-equal-substrings",
    "likes": 56,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2890",
    "titleSlug": "reshape-data-melt",
    "likes": 55,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2051",
    "titleSlug": "the-category-of-each-member-in-the-store",
    "likes": 55,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3083",
    "titleSlug": "existence-of-a-substring-in-a-string-and-its-reverse",
    "likes": 54,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "3079",
    "titleSlug": "find-the-sum-of-encrypted-integers",
    "likes": 54,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "3069",
    "titleSlug": "distribute-elements-into-two-arrays-i",
    "likes": 53,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Simulation"
      }
    ]
  },
  {
    "questionFrontendId": "2307",
    "titleSlug": "check-for-contradictions-in-equations",
    "likes": 53,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Graph"
      }
    ]
  },
  {
    "questionFrontendId": "2533",
    "titleSlug": "number-of-good-binary-strings",
    "likes": 52,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2378",
    "titleSlug": "choose-edges-to-maximize-score-in-a-tree",
    "likes": 52,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "2026",
    "titleSlug": "low-quality-problems",
    "likes": 51,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2743",
    "titleSlug": "count-substrings-without-repeating-character",
    "likes": 50,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "2459",
    "titleSlug": "sort-array-by-moving-items-to-empty-space",
    "likes": 50,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2314",
    "titleSlug": "the-first-day-of-the-maximum-recorded-degree-in-each-city",
    "likes": 50,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2123",
    "titleSlug": "minimum-operations-to-remove-adjacent-ones-in-matrix",
    "likes": 50,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2041",
    "titleSlug": "accepted-candidates-from-the-interviews",
    "likes": 50,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2015",
    "titleSlug": "average-height-of-buildings-in-each-segment",
    "likes": 50,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "2408",
    "titleSlug": "design-sql",
    "likes": 48,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Design"
      }
    ]
  },
  {
    "questionFrontendId": "2881",
    "titleSlug": "create-a-new-column",
    "likes": 47,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2728",
    "titleSlug": "count-houses-in-a-circular-street",
    "likes": 47,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Interactive"
      }
    ]
  },
  {
    "questionFrontendId": "2324",
    "titleSlug": "product-sales-analysis-iv",
    "likes": 47,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1500",
    "titleSlug": "design-a-file-sharing-system",
    "likes": 47,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Design"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Data Stream"
      }
    ]
  },
  {
    "questionFrontendId": "2891",
    "titleSlug": "method-chaining",
    "likes": 46,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2887",
    "titleSlug": "fill-missing-data",
    "likes": 46,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2298",
    "titleSlug": "tasks-count-in-the-weekend",
    "likes": 46,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2884",
    "titleSlug": "modify-columns",
    "likes": 45,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2431",
    "titleSlug": "maximize-total-tastiness-of-purchased-fruits",
    "likes": 45,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2403",
    "titleSlug": "minimum-time-to-kill-all-monsters",
    "likes": 45,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "3065",
    "titleSlug": "minimum-operations-to-exceed-threshold-value-i",
    "likes": 44,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      }
    ]
  },
  {
    "questionFrontendId": "3030",
    "titleSlug": "find-the-grid-of-region-average",
    "likes": 43,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2888",
    "titleSlug": "reshape-data-concatenate",
    "likes": 43,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2883",
    "titleSlug": "drop-missing-data",
    "likes": 43,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2495",
    "titleSlug": "number-of-subarrays-having-even-product",
    "likes": 43,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2886",
    "titleSlug": "change-data-type",
    "likes": 42,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2599",
    "titleSlug": "make-the-prefix-sum-non-negative",
    "likes": 42,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Heap (Priority Queue)"
      }
    ]
  },
  {
    "questionFrontendId": "2199",
    "titleSlug": "finding-the-topic-of-each-post",
    "likes": 42,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2052",
    "titleSlug": "minimum-cost-to-separate-sentence-into-rows",
    "likes": 42,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2489",
    "titleSlug": "number-of-substrings-with-fixed-ratio",
    "likes": 41,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2339",
    "titleSlug": "all-the-matches-of-the-league",
    "likes": 41,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1794",
    "titleSlug": "count-pairs-of-equal-substrings-with-minimum-difference",
    "likes": 41,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "1118",
    "titleSlug": "number-of-days-in-a-month",
    "likes": 41,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2494",
    "titleSlug": "merge-overlapping-events-in-the-same-hall",
    "likes": 40,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3025",
    "titleSlug": "find-the-number-of-ways-to-place-people-i",
    "likes": 39,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2604",
    "titleSlug": "minimum-time-to-eat-all-grains",
    "likes": 39,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "734",
    "titleSlug": "sentence-similarity",
    "likes": 39,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "2885",
    "titleSlug": "rename-columns",
    "likes": 38,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2436",
    "titleSlug": "minimum-split-into-subarrays-with-gcd-greater-than-one",
    "likes": 38,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "2175",
    "titleSlug": "the-change-in-global-rankings",
    "likes": 38,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2010",
    "titleSlug": "the-number-of-seniors-and-juniors-to-join-the-company-ii",
    "likes": 38,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2474",
    "titleSlug": "customers-with-strictly-increasing-purchases",
    "likes": 37,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2143",
    "titleSlug": "choose-numbers-from-two-arrays-in-range",
    "likes": 37,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2590",
    "titleSlug": "design-a-todo-list",
    "likes": 36,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Design"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2377",
    "titleSlug": "sort-the-olympic-table",
    "likes": 36,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2674",
    "titleSlug": "split-a-circular-linked-list",
    "likes": 35,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Linked List"
      },
      {
        "name": "Two Pointers"
      }
    ]
  },
  {
    "questionFrontendId": "2372",
    "titleSlug": "calculate-the-influence-of-each-salesperson",
    "likes": 35,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1677",
    "titleSlug": "products-worth-over-invoices",
    "likes": 35,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2548",
    "titleSlug": "maximum-price-to-fill-a-bag",
    "likes": 34,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "1651",
    "titleSlug": "hopper-company-queries-iii",
    "likes": 34,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2737",
    "titleSlug": "find-the-closest-marked-node",
    "likes": 33,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "2702",
    "titleSlug": "minimum-operations-to-make-numbers-non-positive",
    "likes": 33,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      }
    ]
  },
  {
    "questionFrontendId": "2701",
    "titleSlug": "consecutive-transactions-with-increasing-amounts",
    "likes": 33,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2664",
    "titleSlug": "the-knights-tour",
    "likes": 33,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Backtracking"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2450",
    "titleSlug": "number-of-distinct-binary-strings-after-applying-operations",
    "likes": 33,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "1516",
    "titleSlug": "move-sub-tree-of-n-ary-tree",
    "likes": 33,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "2832",
    "titleSlug": "maximal-range-that-each-element-is-maximum-in-it",
    "likes": 32,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Stack"
      },
      {
        "name": "Monotonic Stack"
      }
    ]
  },
  {
    "questionFrontendId": "2689",
    "titleSlug": "extract-kth-character-from-the-rope-tree",
    "likes": 32,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "3063",
    "titleSlug": "linked-list-frequency",
    "likes": 31,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Linked List"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "2362",
    "titleSlug": "generate-the-invoice",
    "likes": 31,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2329",
    "titleSlug": "product-sales-analysis-v",
    "likes": 31,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1956",
    "titleSlug": "minimum-time-for-k-virus-variants-to-spread",
    "likes": 31,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Geometry"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2782",
    "titleSlug": "number-of-unique-categories",
    "likes": 30,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Union Find"
      },
      {
        "name": "Interactive"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "3086",
    "titleSlug": "minimum-moves-to-pick-k-ones",
    "likes": 29,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2764",
    "titleSlug": "is-array-a-preorder-of-some-binary-tree",
    "likes": 29,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Stack"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2557",
    "titleSlug": "maximum-number-of-integers-to-choose-from-a-range-ii",
    "likes": 29,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Greedy"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2505",
    "titleSlug": "bitwise-or-of-all-subsequence-sums",
    "likes": 29,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Brainteaser"
      }
    ]
  },
  {
    "questionFrontendId": "2252",
    "titleSlug": "dynamic-pivoting-of-a-table",
    "likes": 29,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1714",
    "titleSlug": "sum-of-special-evenly-spaced-elements-in-array",
    "likes": 29,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2504",
    "titleSlug": "concatenate-the-name-and-the-profession",
    "likes": 28,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2479",
    "titleSlug": "maximum-xor-of-two-non-overlapping-subtrees",
    "likes": 28,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Graph"
      },
      {
        "name": "Trie"
      }
    ]
  },
  {
    "questionFrontendId": "2464",
    "titleSlug": "minimum-subarrays-in-a-valid-split",
    "likes": 28,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "2714",
    "titleSlug": "find-shortest-path-with-k-hops",
    "likes": 27,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Graph"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Shortest Path"
      }
    ]
  },
  {
    "questionFrontendId": "2198",
    "titleSlug": "number-of-single-divisor-triplets",
    "likes": 27,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "2020",
    "titleSlug": "number-of-accounts-that-did-not-stream",
    "likes": 27,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1999",
    "titleSlug": "smallest-greater-multiple-made-of-two-digits",
    "likes": 27,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2838",
    "titleSlug": "maximum-coins-heroes-can-collect",
    "likes": 26,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2802",
    "titleSlug": "find-the-k-th-lucky-number",
    "likes": 26,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Bit Manipulation"
      }
    ]
  },
  {
    "questionFrontendId": "2690",
    "titleSlug": "infinite-method-object",
    "likes": 26,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2417",
    "titleSlug": "closest-fair-integer",
    "likes": 26,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Enumeration"
      }
    ]
  },
  {
    "questionFrontendId": "2394",
    "titleSlug": "employees-with-deductions",
    "likes": 26,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2852",
    "titleSlug": "sum-of-remoteness-of-all-cells",
    "likes": 25,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Union Find"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2480",
    "titleSlug": "form-a-chemical-bond",
    "likes": 25,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2346",
    "titleSlug": "compute-the-rank-as-a-percentage",
    "likes": 25,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2205",
    "titleSlug": "the-number-of-users-that-are-eligible-for-discount",
    "likes": 25,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "606",
    "titleSlug": "construct-string-from-binary-tree",
    "likes": 25,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "String"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2753",
    "titleSlug": "count-houses-in-a-circular-street-ii",
    "likes": 24,
    "difficulty": "Hard",
    "topicTags": []
  },
  {
    "questionFrontendId": "2655",
    "titleSlug": "find-maximal-uncovered-ranges",
    "likes": 24,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sorting"
      }
    ]
  },
  {
    "questionFrontendId": "2539",
    "titleSlug": "count-the-number-of-good-subsequences",
    "likes": 24,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "String"
      },
      {
        "name": "Combinatorics"
      },
      {
        "name": "Counting"
      }
    ]
  },
  {
    "questionFrontendId": "3062",
    "titleSlug": "winner-of-the-linked-list-game",
    "likes": 23,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Linked List"
      }
    ]
  },
  {
    "questionFrontendId": "2796",
    "titleSlug": "repeat-string",
    "likes": 23,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2118",
    "titleSlug": "build-the-equation",
    "likes": 23,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "1990",
    "titleSlug": "count-the-number-of-experiments",
    "likes": 23,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2524",
    "titleSlug": "maximum-frequency-score-of-a-subarray",
    "likes": 21,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Sliding Window"
      }
    ]
  },
  {
    "questionFrontendId": "2950",
    "titleSlug": "number-of-divisible-substrings",
    "likes": 20,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2738",
    "titleSlug": "count-occurrences-in-text",
    "likes": 20,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2955",
    "titleSlug": "number-of-same-end-substrings",
    "likes": 19,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Counting"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2892",
    "titleSlug": "minimizing-array-after-replacing-pairs-with-their-product",
    "likes": 19,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2774",
    "titleSlug": "array-upper-bound",
    "likes": 19,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2688",
    "titleSlug": "find-active-users",
    "likes": 19,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2687",
    "titleSlug": "bikes-last-time-used",
    "likes": 19,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2230",
    "titleSlug": "the-users-that-are-eligible-for-discount",
    "likes": 19,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3009",
    "titleSlug": "maximum-number-of-intersections-on-the-chart",
    "likes": 18,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Geometry"
      }
    ]
  },
  {
    "questionFrontendId": "2936",
    "titleSlug": "number-of-equal-numbers-blocks",
    "likes": 18,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Interactive"
      }
    ]
  },
  {
    "questionFrontendId": "2907",
    "titleSlug": "maximum-profitable-triplets-with-increasing-prices-i",
    "likes": 18,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2898",
    "titleSlug": "maximum-linear-stock-score",
    "likes": 18,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "2847",
    "titleSlug": "smallest-number-with-given-digit-product",
    "likes": 18,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Greedy"
      }
    ]
  },
  {
    "questionFrontendId": "2814",
    "titleSlug": "minimum-time-takes-to-reach-destination-without-drowning",
    "likes": 18,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "2792",
    "titleSlug": "count-nodes-that-are-great-enough",
    "likes": 18,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2820",
    "titleSlug": "election-results",
    "likes": 17,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "2803",
    "titleSlug": "factorial-generator",
    "likes": 17,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2969",
    "titleSlug": "minimum-number-of-coins-for-fruits-ii",
    "likes": 16,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Queue"
      },
      {
        "name": "Heap (Priority Queue)"
      },
      {
        "name": "Monotonic Queue"
      }
    ]
  },
  {
    "questionFrontendId": "2668",
    "titleSlug": "find-latest-salaries",
    "likes": 16,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2613",
    "titleSlug": "beautiful-pairs",
    "likes": 16,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Divide and Conquer"
      },
      {
        "name": "Geometry"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "2253",
    "titleSlug": "dynamic-unpivoting-of-a-table",
    "likes": 16,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2005",
    "titleSlug": "subtree-removal-game-with-fibonacci-tree",
    "likes": 16,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Binary Tree"
      },
      {
        "name": "Game Theory"
      }
    ]
  },
  {
    "questionFrontendId": "521",
    "titleSlug": "longest-uncommon-subsequence-i",
    "likes": 16,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "String"
      }
    ]
  },
  {
    "questionFrontendId": "3032",
    "titleSlug": "count-numbers-with-unique-digits-ii",
    "likes": 15,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Hash Table"
      },
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2964",
    "titleSlug": "number-of-divisible-triplet-sums",
    "likes": 15,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      }
    ]
  },
  {
    "questionFrontendId": "2822",
    "titleSlug": "inversion-of-object",
    "likes": 15,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2783",
    "titleSlug": "flight-occupancy-and-waitlist-analysis",
    "likes": 15,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2754",
    "titleSlug": "bind-function-to-context",
    "likes": 15,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "2692",
    "titleSlug": "make-object-immutable",
    "likes": 15,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "2669",
    "titleSlug": "count-artist-occurrences-on-spotify-ranking-list",
    "likes": 15,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3004",
    "titleSlug": "maximum-subtree-of-the-same-color",
    "likes": 14,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      }
    ]
  },
  {
    "questionFrontendId": "2992",
    "titleSlug": "number-of-self-divisible-permutations",
    "likes": 14,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Recursion"
      },
      {
        "name": "Bitmask"
      }
    ]
  },
  {
    "questionFrontendId": "2912",
    "titleSlug": "number-of-ways-to-reach-destination-in-the-grid",
    "likes": 14,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Combinatorics"
      }
    ]
  },
  {
    "questionFrontendId": "2893",
    "titleSlug": "calculate-orders-within-each-interval",
    "likes": 14,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2821",
    "titleSlug": "delay-the-resolution-of-each-promise",
    "likes": 14,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2819",
    "titleSlug": "minimum-relative-loss-after-buying-chocolates",
    "likes": 14,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Sorting"
      },
      {
        "name": "Prefix Sum"
      }
    ]
  },
  {
    "questionFrontendId": "2805",
    "titleSlug": "custom-interval",
    "likes": 14,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "2776",
    "titleSlug": "convert-callback-based-function-to-promise-based-function",
    "likes": 14,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "2979",
    "titleSlug": "most-expensive-item-that-can-not-be-bought",
    "likes": 13,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Dynamic Programming"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "2854",
    "titleSlug": "rolling-average-steps",
    "likes": 13,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2837",
    "titleSlug": "total-traveled-distance",
    "likes": 13,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2775",
    "titleSlug": "undefined-to-null",
    "likes": 13,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "2759",
    "titleSlug": "convert-json-string-to-object",
    "likes": 13,
    "difficulty": "Hard",
    "topicTags": []
  },
  {
    "questionFrontendId": "2758",
    "titleSlug": "next-day",
    "likes": 13,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "1924",
    "titleSlug": "erect-the-fence-ii",
    "likes": 13,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Geometry"
      }
    ]
  },
  {
    "questionFrontendId": "2941",
    "titleSlug": "maximum-gcd-sum-of-a-subarray",
    "likes": 12,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Binary Search"
      },
      {
        "name": "Number Theory"
      }
    ]
  },
  {
    "questionFrontendId": "2853",
    "titleSlug": "highest-salaries-difference",
    "likes": 12,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2795",
    "titleSlug": "parallel-execution-of-promises-for-individual-results-retrieval",
    "likes": 12,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "2755",
    "titleSlug": "deep-merge-of-two-objects",
    "likes": 12,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "2720",
    "titleSlug": "popularity-percentage",
    "likes": 12,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2823",
    "titleSlug": "deep-object-filter",
    "likes": 11,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "2756",
    "titleSlug": "query-batching",
    "likes": 11,
    "difficulty": "Hard",
    "topicTags": []
  },
  {
    "questionFrontendId": "2686",
    "titleSlug": "immediate-food-delivery-iii",
    "likes": 11,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2990",
    "titleSlug": "loan-types",
    "likes": 10,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2922",
    "titleSlug": "market-analysis-iii",
    "likes": 10,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2797",
    "titleSlug": "partial-function-with-placeholders",
    "likes": 10,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2777",
    "titleSlug": "date-range-generator",
    "likes": 10,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "2757",
    "titleSlug": "generate-circular-array-values",
    "likes": 10,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "2752",
    "titleSlug": "customers-with-maximum-number-of-transactions-on-consecutive-days",
    "likes": 10,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2647",
    "titleSlug": "color-the-triangle-red",
    "likes": 10,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      }
    ]
  },
  {
    "questionFrontendId": "3073",
    "titleSlug": "maximum-increasing-triplet-value",
    "likes": 9,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Ordered Set"
      }
    ]
  },
  {
    "questionFrontendId": "2794",
    "titleSlug": "create-object-from-two-arrays",
    "likes": 9,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2691",
    "titleSlug": "immutability-helper",
    "likes": 9,
    "difficulty": "Hard",
    "topicTags": []
  },
  {
    "questionFrontendId": "3064",
    "titleSlug": "guess-the-number-using-bitwise-questions-i",
    "likes": 8,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Bit Manipulation"
      },
      {
        "name": "Interactive"
      }
    ]
  },
  {
    "questionFrontendId": "2927",
    "titleSlug": "distribute-candies-among-children-iii",
    "likes": 8,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Math"
      },
      {
        "name": "Combinatorics"
      }
    ]
  },
  {
    "questionFrontendId": "2921",
    "titleSlug": "maximum-profitable-triplets-with-increasing-prices-ii",
    "likes": 8,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Binary Indexed Tree"
      },
      {
        "name": "Segment Tree"
      }
    ]
  },
  {
    "questionFrontendId": "2868",
    "titleSlug": "the-wording-game",
    "likes": 8,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Math"
      },
      {
        "name": "Two Pointers"
      },
      {
        "name": "String"
      },
      {
        "name": "Game Theory"
      }
    ]
  },
  {
    "questionFrontendId": "2804",
    "titleSlug": "array-prototype-foreach",
    "likes": 8,
    "difficulty": "Easy",
    "topicTags": []
  },
  {
    "questionFrontendId": "2773",
    "titleSlug": "height-of-special-binary-tree",
    "likes": 8,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Tree"
      },
      {
        "name": "Depth-First Search"
      },
      {
        "name": "Breadth-First Search"
      },
      {
        "name": "Binary Tree"
      }
    ]
  },
  {
    "questionFrontendId": "3023",
    "titleSlug": "find-pattern-in-infinite-stream-i",
    "likes": 7,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "String Matching"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "2994",
    "titleSlug": "friday-purchases-ii",
    "likes": 7,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2978",
    "titleSlug": "symmetric-coordinates",
    "likes": 7,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3088",
    "titleSlug": "make-string-anti-palindrome",
    "likes": 6,
    "difficulty": "Hard",
    "topicTags": []
  },
  {
    "questionFrontendId": "3051",
    "titleSlug": "find-candidates-for-data-scientist-position",
    "likes": 6,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2987",
    "titleSlug": "find-expensive-cities",
    "likes": 6,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2985",
    "titleSlug": "calculate-compressed-mean",
    "likes": 6,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2793",
    "titleSlug": "status-of-flight-tickets",
    "likes": 6,
    "difficulty": "Hard",
    "topicTags": []
  },
  {
    "questionFrontendId": "3053",
    "titleSlug": "classifying-triangles-by-lengths",
    "likes": 5,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2993",
    "titleSlug": "friday-purchases-i",
    "likes": 5,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2991",
    "titleSlug": "top-three-wineries",
    "likes": 5,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2986",
    "titleSlug": "find-third-transaction",
    "likes": 5,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3078",
    "titleSlug": "match-alphanumerical-pattern-in-matrix-i",
    "likes": 4,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Hash Table"
      },
      {
        "name": "String"
      },
      {
        "name": "Matrix"
      }
    ]
  },
  {
    "questionFrontendId": "3059",
    "titleSlug": "find-all-unique-email-domains",
    "likes": 4,
    "difficulty": "Easy",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3058",
    "titleSlug": "friends-with-no-mutual-friends",
    "likes": 4,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3057",
    "titleSlug": "employees-project-allocation",
    "likes": 4,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3054",
    "titleSlug": "binary-tree-nodes",
    "likes": 4,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3050",
    "titleSlug": "pizza-toppings-cost-analysis",
    "likes": 4,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3018",
    "titleSlug": "maximum-number-of-removal-queries-that-can-be-processed-i",
    "likes": 4,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Dynamic Programming"
      }
    ]
  },
  {
    "questionFrontendId": "2995",
    "titleSlug": "viewers-turned-streamers",
    "likes": 4,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2989",
    "titleSlug": "class-performance",
    "likes": 4,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2984",
    "titleSlug": "find-peak-calling-hours-for-each-city",
    "likes": 4,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3055",
    "titleSlug": "top-percentile-fraud",
    "likes": 3,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3087",
    "titleSlug": "find-trending-hashtags",
    "likes": 2,
    "difficulty": "Medium",
    "topicTags": []
  },
  {
    "questionFrontendId": "3061",
    "titleSlug": "calculate-trapping-rain-water",
    "likes": 2,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3060",
    "titleSlug": "user-activities-within-time-bounds",
    "likes": 2,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3056",
    "titleSlug": "snaps-analysis",
    "likes": 2,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3037",
    "titleSlug": "find-pattern-in-infinite-stream-ii",
    "likes": 2,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Array"
      },
      {
        "name": "Sliding Window"
      },
      {
        "name": "Rolling Hash"
      },
      {
        "name": "String Matching"
      },
      {
        "name": "Hash Function"
      }
    ]
  },
  {
    "questionFrontendId": "3052",
    "titleSlug": "maximize-items",
    "likes": 1,
    "difficulty": "Hard",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "2988",
    "titleSlug": "manager-of-the-largest-department",
    "likes": 1,
    "difficulty": "Medium",
    "topicTags": [
      {
        "name": "Database"
      }
    ]
  },
  {
    "questionFrontendId": "3089",
    "titleSlug": "find-bursty-behavior",
    "likes": 0,
    "difficulty": "Medium",
    "topicTags": []
  }
]
