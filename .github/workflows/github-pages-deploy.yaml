name: Deploy Documentation to Github Pages

on:
  push:
    branches: ["main"]

# permissions:
#   contents: read
#   pages: write
#   id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
      - run: |
          pip install mkdocs-material
          mkdocs get-deps | xargs pip install
          mkdocs build
      - uses: actions/upload-pages-artifact@v2
        with:
          path: ./site
      # - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      # - uses: actions/cache@v3
      #   with:
      #     key: mkdocs-material-${{ env.cache_id }}
      #     path: .cache
      #     restore-keys: |
      #       mkdocs-material-

      ########################

      # - name: Setup Pages
      #   uses: actions/configure-pages@v3
      #   with:
      #     # Automatically inject basePath in your Next.js configuration file and disable
      #     # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
      #     #
      #     # You may remove this line if you want to manage the configuration yourself.
      #     static_site_generator: next
      # - name: Restore cache
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       .next/cache
      #     # Generate a new cache whenever packages or source files change.
      #     key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
      #     # If source files changed but packages didn't, rebuild from a prior cache.
      #     restore-keys: |
      #       ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      # - name: Install dependencies
      #   run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      # - name: Build with Next.js
      #   run: ${{ steps.detect-package-manager.outputs.runner }} next build
      # - name: Static HTML export with Next.js
      #   run: ${{ steps.detect-package-manager.outputs.runner }} next export
      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v2
      #   with:
      #     path: ./out

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
