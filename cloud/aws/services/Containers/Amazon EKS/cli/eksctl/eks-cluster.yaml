apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: foo
  region: us-east-1
  version: "1.31" # latest if not provided
  tags:
    foo: bar # This tag is applied to all the resources created by eksctl, including the EKS cluster

managedNodeGroups:
  - name: bar
    instanceType: t3.small
    # instanceTypes: ["t3.small", "t3.medium"]
    minSize: 2
    desiredCapacity: 2
    maxSize: 4
    volumeSize: 20
    amiFamily: AmazonLinux2
    privateNetworking: true
    spot: true

fargateProfiles:
  - name: my-fargate-profile1
    selectors:
      # All workloads in the "my-fargate-ns1" Kubernetes namespace will be scheduled onto Fargate
      - namespace: my-fargate-ns1
  - name: my-fargate-profile2
    selectors:
      # All workloads in the "my-fargate-ns2" Kubernetes namespace matching the following label selectors will be scheduled onto Fargate
      - namespace: my-fargate-ns2
        labels:
          foo: bar

iam:
  withOIDC: true
  # Pod Identity
  podIdentityAssociations:
    - serviceAccountName: karpenter
      namespace: kube-system
      roleName: my-cluster-karpenter
      permissionPolicyARNs:
        - arn:aws:iam::123456789012:policy/KarpenterControllerPolicy-my-cluster
  # IRSA (legacy)
  serviceAccounts:
    - metadata:
        name: aws-load-balancer-controller
        namespace: kube-system
      wellKnownPolicies:
        awsLoadBalancerController: true

# IAM principal authentication to Kuberntes API (via aws-auth ConfigMap)
iamIdentityMappings:
  - arn: "arn:aws:iam::123456789012:role/KarpenterNodeRole-my-cluster"
    username: system:node:{{EC2PrivateDNSName}}
    groups:
      - system:bootstrappers
      - system:nodes

addons:
  - name: kube-proxy # enabled by default
  - name: coredns # enabled by default
  - name: vpc-cni # enabled by default
  - name: eks-pod-identity-agent
  - name: aws-ebs-csi-driver
    wellKnownPolicies: # Adds an IAM service account
      ebsCSIController: true

cloudWatch:
  clusterLogging:
    enableTypes: ["*"]
    logRetentionInDays: 30
