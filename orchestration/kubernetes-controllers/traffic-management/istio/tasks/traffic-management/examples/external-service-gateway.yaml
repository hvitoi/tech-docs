apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: ingress-gateway-configuration
spec:
  selector:
    istio: ingressgateway
  servers:
    - hosts:
        - "*" # Domain name of the external website
      port:
        number: 80
        name: http
        protocol: HTTP
---
# No DestinationRule needed as we aren't doing any subsets, load balancing or outlier detection.
kind: VirtualService
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: fleetman-webapp
  namespace: default
spec:
  hosts: # which incoming host are we applying the proxy rules to???
    - "*"
  gateways:
    - ingress-gateway-configuration
  http:
    - route: # All traffic routed to the fleetman-webapp service (it's a catch all, no matching rule)
        - destination:
            host: fleetman-webapp
---
# See case #23
apiVersion: networking.istio.io/v1alpha3
kind: ServiceEntry
metadata:
  name: my-se
spec:
  hosts:
    - yahoo.com
  location: MESH_EXTERNAL
  ports:
    - name: http-port-for-plain-connections
      protocol: HTTP
      number: 80
    - name: https-port-for-tls-origination
      number: 443
      protocol: HTTPS
  resolution: DNS
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: my-vs
spec:
  hosts:
    - yahoo.com
  http:
    - match:
        - port: 80
      route:
        - destination:
            host: yahoo.com
            port:
              number: 443
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: circuit-breaker-for-the-entire-default-namespace
spec:
  host: "*.default.svc.cluster.local" # This is the name of the k8s service that we're configuring
  trafficPolicy:
    outlierDetection: # Circuit Breakers HAVE TO BE SWITCHED ON
      maxEjectionPercent: 100
      consecutiveErrors: 1
      interval: 5s
